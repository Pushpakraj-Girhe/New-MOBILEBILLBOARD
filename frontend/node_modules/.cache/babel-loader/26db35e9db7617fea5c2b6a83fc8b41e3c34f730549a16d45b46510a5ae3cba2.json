{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kambl\\\\OneDrive\\\\Desktop\\\\LastestMOB\\\\mobPRO\\\\frontend\\\\src\\\\Pages\\\\CampaignResults.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { MapPin, Clock, RouteIcon, DollarSign, Target, Calendar } from \"lucide-react\";\nimport { Card } from \"../components/ui/card\";\nimport { Tabs } from \"../components/ui/tabs\";\n\n// Import the components we'll create next\nimport CampaignMap from \"../components/CampaignMap\";\nimport RouteTimeline from \"../components/RouteTimeline\";\nimport BudgetBreakdown from \"../components/BudgetBreakdown\";\nimport DebugPanel from \"../components/DebugPanel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CampaignResults() {\n  _s();\n  const [campaignData, setCampaignData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCampaignData = async () => {\n      try {\n        // First, try to get data from localStorage (from form submission)\n        const storedData = localStorage.getItem(\"campaignData\");\n        if (storedData) {\n          console.log(\"Using stored campaign data from localStorage\");\n          const parsedData = JSON.parse(storedData);\n          console.log(\"Parsed stored data:\", parsedData);\n\n          // If we have form data, call Gemini API directly\n          if (parsedData.formData) {\n            console.log(\"Calling Gemini API with form data\");\n            const geminiResponse = await callGeminiAPI(parsedData.formData);\n\n            // Process the Gemini response and merge with form data\n            const processedData = processGeminiResponse(geminiResponse, parsedData.formData);\n            setCampaignData(processedData);\n          } else if (parsedData.routePlan) {\n            // If we already have the route plan text, parse it\n            setCampaignData(parseCampaignData(parsedData));\n          } else {\n            setCampaignData(parsedData);\n          }\n\n          // Clear localStorage after retrieving the data to avoid stale data on refresh\n          localStorage.removeItem(\"campaignData\");\n        } else {\n          // If no data in localStorage, use default mock data\n          console.log(\"No stored data found, using default mock data\");\n          setCampaignData(createMockCampaignData());\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error processing campaign data:\", error);\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchCampaignData();\n  }, []);\n\n  // Call Gemini API directly from the frontend\n  const callGeminiAPI = async formData => {\n    try {\n      // Generate prompt based on form data\n      const prompt = generatePrompt(formData);\n      console.log(\"Generated prompt for Gemini:\", prompt);\n\n      // Get API key from environment variable or use a hardcoded one for demo\n      // In production, you should use environment variables and proper authentication\n      const apiKey = \"AIzaSyAgBPUp7C4AC5d3DuCADTW4bmi2_7JPAwY\"; // Replace with your actual API key or use environment variable\n\n      console.log(\"Calling Gemini API...\");\n\n      // Call Gemini API\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Gemini API error response:\", errorText);\n        throw new Error(`Gemini API error: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log(\"Gemini API response received:\", data);\n\n      // Log the actual text content for easier debugging\n      if (data.candidates && data.candidates.length > 0) {\n        const textContent = data.candidates[0].content.parts[0].text;\n        console.log(\"Gemini API text response:\", textContent);\n      }\n      return data;\n    } catch (error) {\n      console.error(\"Error calling Gemini API:\", error);\n      // Return null or a default response in case of error\n      return null;\n    }\n  };\n\n  // Generate prompt for Gemini API based on form data\n  const generatePrompt = formData => {\n    const objectivesStr = formData.objectives && formData.objectives.length > 0 ? formData.objectives.map(mapObjective).join(\", \") : \"Brand Awareness\";\n    return `Generate a mobile billboard route plan with these specifications:\n\nBusiness: ${formData.businessName || \"\"}\nIndustry: ${formData.industry || \"\"}\nTarget Audience: ${formData.targetAudience || \"\"}\nCampaign Objectives: ${objectivesStr}\nLocation: ${formData.location || \"\"}\nDuration: ${formData.campaignDuration || \"\"}\nBudget: â‚¹${formData.budget || 0}\n\nProvide:\n1. Recommended locations with timing windows\n2. Optimal routes for maximum visibility\n3. Estimated impressions per day\n4. Any special considerations\nFormat the response with clear sections and bullet points.`;\n  };\n\n  // Map objective codes to readable text\n  const mapObjective = objective => {\n    switch (objective) {\n      case \"brand\":\n        return \"Brand Awareness\";\n      case \"traffic\":\n        return \"Store Traffic\";\n      case \"launch\":\n        return \"Product Launch\";\n      case \"event\":\n        return \"Event Promotion\";\n      default:\n        return objective;\n    }\n  };\n\n  // Process Gemini API response\n  const processGeminiResponse = (response, formData) => {\n    console.log(\"Processing Gemini API response...\");\n\n    // Start with a customized data structure based on the form data\n    const result = createCustomizedMockData(formData);\n\n    // If Gemini API call failed, return the mock data\n    if (!response || !response.candidates || response.candidates.length === 0) {\n      console.log(\"No valid Gemini response, using mock data\");\n      return result;\n    }\n    try {\n      // Extract text from Gemini response\n      const candidate = response.candidates[0];\n      const content = candidate.content;\n      const part = content.parts[0];\n      const text = part.text;\n      console.log(\"Extracted text from Gemini response\");\n\n      // Add the AI-generated route plan\n      result.routePlan = text;\n\n      // Parse the AI response to extract locations, timings, etc.\n      console.log(\"Parsing AI response to extract structured data...\");\n      const parsedData = parseAIResponse(text);\n      console.log(\"Parsed data from AI response:\", parsedData);\n\n      // Merge the parsed data with our result\n      const finalResult = {\n        ...result,\n        ...parsedData\n      };\n      console.log(\"Final processed data:\", finalResult);\n      return finalResult;\n    } catch (error) {\n      console.error(\"Error processing Gemini response:\", error);\n      return result;\n    }\n  };\n\n  // Helper function to parse the raw route plan text into structured data\n  const parseCampaignData = data => {\n    // Default structure that matches what the component expects\n    const defaultData = {\n      businessName: \"Your Business\",\n      businessType: \"Retail\",\n      targetAudience: \"18-40 year olds\",\n      campaignType: \"Brand Awareness\",\n      location: \"Pune\",\n      duration: \"7 days\",\n      budget: \"25,000\",\n      locations: [{\n        name: \"Koregaon Park\",\n        description: \"High-end shopping area with affluent visitors\"\n      }, {\n        name: \"FC Road\",\n        description: \"Popular with college students and young professionals\"\n      }, {\n        name: \"Aundh\",\n        description: \"Residential area with shopping complexes\"\n      }, {\n        name: \"Hinjewadi IT Park\",\n        description: \"Tech hub with young professionals\"\n      }],\n      timings: [{\n        time: \"8:00 AM - 10:00 AM\",\n        description: \"Morning commute hours\"\n      }, {\n        time: \"12:00 PM - 2:00 PM\",\n        description: \"Lunch break period\"\n      }, {\n        time: \"5:00 PM - 8:00 PM\",\n        description: \"Evening rush hour and leisure time\"\n      }],\n      visibilityHeatmap: [{\n        time: \"Morning (8-11 AM)\",\n        visibility: 75\n      }, {\n        time: \"Midday (11 AM-2 PM)\",\n        visibility: 60\n      }, {\n        time: \"Afternoon (2-5 PM)\",\n        visibility: 50\n      }, {\n        time: \"Evening (5-8 PM)\",\n        visibility: 85\n      }, {\n        time: \"Night (8-11 PM)\",\n        visibility: 70\n      }],\n      routePlanDays13: [{\n        time: \"8:00 AM\",\n        location: \"Start at Koregaon Park\"\n      }, {\n        time: \"9:30 AM\",\n        location: \"Move to FC Road\"\n      }, {\n        time: \"12:00 PM\",\n        location: \"Lunch break at JM Road\"\n      }, {\n        time: \"1:30 PM\",\n        location: \"Continue to Aundh\"\n      }],\n      routePlanDays45: [{\n        time: \"12:00 PM\",\n        location: \"Start at Hinjewadi IT Park\"\n      }, {\n        time: \"2:30 PM\",\n        location: \"Move to University Circle\"\n      }, {\n        time: \"4:00 PM\",\n        location: \"Continue to Baner Road\"\n      }, {\n        time: \"6:00 PM\",\n        location: \"End at Aundh\"\n      }],\n      routePlanDays67: [{\n        time: \"5:00 PM\",\n        location: \"Start at Phoenix Mall\"\n      }, {\n        time: \"6:30 PM\",\n        location: \"Move to FC Road\"\n      }, {\n        time: \"8:00 PM\",\n        location: \"Continue to Koregaon Park\"\n      }, {\n        time: \"10:00 PM\",\n        location: \"End route at E-Square\"\n      }]\n    };\n\n    // Merge the received data with our default structure\n    const mergedData = {\n      ...defaultData,\n      ...data\n    };\n\n    // Try to extract information from the route plan text\n    if (data.routePlan) {\n      const routePlan = data.routePlan;\n\n      // Extract business name if present\n      const businessNameMatch = routePlan.match(/Business:\\s*([^\\n]+)/);\n      if (businessNameMatch && businessNameMatch[1]) {\n        mergedData.businessName = businessNameMatch[1].trim();\n      }\n\n      // Extract location if present\n      const locationMatch = routePlan.match(/Location:\\s*([^\\n]+)/);\n      if (locationMatch && locationMatch[1]) {\n        mergedData.location = locationMatch[1].trim();\n      }\n\n      // Extract budget if present\n      const budgetMatch = routePlan.match(/Budget:\\s*â‚¹([^\\n]+)/);\n      if (budgetMatch && budgetMatch[1]) {\n        mergedData.budget = budgetMatch[1].trim();\n      }\n\n      // Extract target audience if present\n      const audienceMatch = routePlan.match(/Target Audience:\\s*([^\\n]+)/);\n      if (audienceMatch && audienceMatch[1]) {\n        mergedData.targetAudience = audienceMatch[1].trim();\n      }\n\n      // Store the full route plan for debugging\n      mergedData.fullRoutePlan = routePlan;\n    }\n    return mergedData;\n  };\n  const parseAIResponse = text => {\n    const result = {};\n    try {\n      // Look for location sections in the text\n      if (text.includes(\"Recommended Locations\") || text.includes(\"recommended locations\")) {\n        const extractedLocations = [];\n        const lines = text.split(\"\\n\");\n        let inLocationSection = false;\n        for (const line of lines) {\n          if (line.includes(\"Recommended Locations\") || line.includes(\"recommended locations\")) {\n            inLocationSection = true;\n            continue;\n          }\n          if (inLocationSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2);\n            if (parts.length === 2) {\n              const name = parts[0].trim();\n              const description = parts[1].trim();\n              extractedLocations.push(createLocation(name, description));\n            }\n          }\n\n          // Exit location section when we hit another section\n          if (inLocationSection && (line.includes(\"Optimal Timing\") || line.includes(\"Route Plan\"))) {\n            inLocationSection = false;\n          }\n        }\n        if (extractedLocations.length > 0) {\n          result.locations = extractedLocations;\n        }\n      }\n\n      // Extract timing information\n      if (text.includes(\"Optimal Timing\") || text.includes(\"optimal timing\")) {\n        const extractedTimings = [];\n        const lines = text.split(\"\\n\");\n        let inTimingSection = false;\n        for (const line of lines) {\n          if (line.includes(\"Optimal Timing\") || line.includes(\"optimal timing\")) {\n            inTimingSection = true;\n            continue;\n          }\n          if (inTimingSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2);\n            if (parts.length === 2) {\n              const time = parts[0].trim();\n              const description = parts[1].trim();\n              extractedTimings.push(createTiming(time, description));\n            }\n          }\n\n          // Exit timing section when we hit another section\n          if (inTimingSection && (line.includes(\"Route Plan\") || line.includes(\"Estimated\"))) {\n            inTimingSection = false;\n          }\n        }\n        if (extractedTimings.length > 0) {\n          result.timings = extractedTimings;\n        }\n      }\n\n      // Extract route plans\n      if (text.includes(\"Days 1-3\") || text.includes(\"days 1-3\")) {\n        result.routePlanDays13 = extractRoutePlan(text, \"Days 1-3\", \"days 1-3\");\n      }\n      if (text.includes(\"Days 4-5\") || text.includes(\"days 4-5\")) {\n        result.routePlanDays45 = extractRoutePlan(text, \"Days 4-5\", \"days 4-5\");\n      }\n      if (text.includes(\"Days 6-7\") || text.includes(\"days 6-7\")) {\n        result.routePlanDays67 = extractRoutePlan(text, \"Days 6-7\", \"days 6-7\");\n      }\n    } catch (error) {\n      console.warn(\"Warning: Error parsing AI response:\", error.message);\n      // Continue with default values\n    }\n    return result;\n  };\n\n  // Helper function to extract route plans from text\n  const extractRoutePlan = (text, sectionTitle1, sectionTitle2) => {\n    const routes = [];\n    const lines = text.split(\"\\n\");\n    let inSection = false;\n    for (const line of lines) {\n      if (line.includes(sectionTitle1) || line.includes(sectionTitle2)) {\n        inSection = true;\n        continue;\n      }\n      if (inSection && line.trim().startsWith(\"-\") && (line.includes(\"Start at\") || line.includes(\"Move to\") || line.includes(\"Continue to\") || line.includes(\"End at\") || line.includes(\"Lunch break\"))) {\n        // Extract time and location\n        const timeMatch = line.match(/(\\d{1,2}:\\d{2}\\s*(?:AM|PM))/);\n        if (timeMatch) {\n          const time = timeMatch[1];\n          const location = line.substring(line.indexOf(\"-\") + 1).trim();\n          routes.push({\n            time,\n            location\n          });\n        }\n      }\n\n      // Exit section when we hit another section\n      if (inSection && (line.includes(\"Days\") || line.includes(\"Estimated\") || line.includes(\"Special\"))) {\n        if (!line.includes(sectionTitle1) && !line.includes(sectionTitle2)) {\n          inSection = false;\n        }\n      }\n    }\n    return routes.length > 0 ? routes : null;\n  };\n  const createLocation = (name, description) => {\n    return {\n      name,\n      description\n    };\n  };\n  const createTiming = (time, description) => {\n    return {\n      time,\n      description\n    };\n  };\n  const createCustomizedMockData = formData => {\n    const mockData = {\n      businessName: formData.businessName || \"Your Business\",\n      businessType: mapIndustryToBusinessType(formData.industry),\n      targetAudience: formData.targetAudience || \"General audience\",\n      campaignType: getCampaignType(formData.objectives),\n      location: formData.location || \"Pune\",\n      duration: mapDurationToText(formData.campaignDuration),\n      budget: String(formData.budget || 25000)\n    };\n\n    // Customize locations based on the requested location\n    const locations = [];\n    const location = formData.location ? formData.location.toLowerCase() : \"\";\n    if (location.includes(\"pune\")) {\n      locations.push(createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"));\n      locations.push(createLocation(\"FC Road\", \"Popular with college students and young professionals\"));\n      locations.push(createLocation(\"Aundh\", \"Residential area with shopping complexes\"));\n      locations.push(createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\"));\n    } else if (location.includes(\"mumbai\")) {\n      locations.push(createLocation(\"Bandra\", \"Upscale residential and commercial area\"));\n      locations.push(createLocation(\"Andheri\", \"Business hub with shopping centers\"));\n      locations.push(createLocation(\"Marine Drive\", \"Popular tourist destination\"));\n      locations.push(createLocation(\"Powai\", \"Tech and business center\"));\n    } else if (location.includes(\"delhi\")) {\n      locations.push(createLocation(\"Connaught Place\", \"Central business district\"));\n      locations.push(createLocation(\"South Extension\", \"Popular shopping area\"));\n      locations.push(createLocation(\"Hauz Khas\", \"Trendy area with restaurants and shops\"));\n      locations.push(createLocation(\"Cyber City\", \"Business hub in Gurgaon\"));\n    } else {\n      // Default locations for any other city\n      locations.push(createLocation(\"Main Market\", \"Central shopping area\"));\n      locations.push(createLocation(\"Business District\", \"Commercial hub with offices\"));\n      locations.push(createLocation(\"University Area\", \"Popular with students\"));\n      locations.push(createLocation(\"Residential Hub\", \"High-density residential area\"));\n    }\n    mockData.locations = locations;\n\n    // Timings - customize based on business type\n    const timings = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      timings.push(createTiming(\"11:30 AM - 2:00 PM\", \"Lunch rush hours\"));\n      timings.push(createTiming(\"6:00 PM - 9:00 PM\", \"Dinner time peak\"));\n      timings.push(createTiming(\"3:00 PM - 5:00 PM\", \"Afternoon coffee/snack time\"));\n    } else if (businessType.includes(\"retail\")) {\n      timings.push(createTiming(\"10:00 AM - 1:00 PM\", \"Morning shopping hours\"));\n      timings.push(createTiming(\"4:00 PM - 7:00 PM\", \"After-work shopping peak\"));\n      timings.push(createTiming(\"1:00 PM - 3:00 PM\", \"Lunch break shoppers\"));\n    } else {\n      timings.push(createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"));\n      timings.push(createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"));\n      timings.push(createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\"));\n    }\n    mockData.timings = timings;\n\n    // Visibility heatmap - customize based on business type\n    const visibilityHeatmap = [];\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 40));\n      visibilityHeatmap.push(createHeatmapEntry(\"Lunch (11 AM-2 PM)\", 85));\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50));\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 90));\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 75));\n    } else if (businessType.includes(\"retail\")) {\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 60));\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 75));\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 70));\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85));\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 40));\n    } else {\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 75));\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60));\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50));\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85));\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 70));\n    }\n    mockData.visibilityHeatmap = visibilityHeatmap;\n\n    // Route plans - customize based on the locations\n    mockData.routePlanDays13 = createCustomRoutePlan1(locations, formData);\n    mockData.routePlanDays45 = createCustomRoutePlan2(locations, formData);\n    mockData.routePlanDays67 = createCustomRoutePlan3(locations, formData);\n\n    // Generate a mock route plan text\n    const routePlanText = generateMockRoutePlanText(formData, locations);\n    mockData.routePlan = routePlanText;\n    return mockData;\n  };\n  const createMockCampaignData = () => {\n    const mockData = {\n      businessName: \"Coffee House\",\n      businessType: \"Food & Beverage\",\n      targetAudience: \"18-40 year olds, coffee enthusiasts, students, professionals\",\n      campaignType: \"Brand Awareness\",\n      location: \"Pune\",\n      duration: \"7 days\",\n      budget: \"25,000\"\n    };\n\n    // Locations\n    const locations = [createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"), createLocation(\"FC Road\", \"Popular with college students and young professionals\"), createLocation(\"Aundh\", \"Residential area with shopping complexes\"), createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\")];\n    mockData.locations = locations;\n\n    // Timings\n    const timings = [createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"), createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"), createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\")];\n    mockData.timings = timings;\n\n    // Visibility heatmap\n    const visibilityHeatmap = [createHeatmapEntry(\"Morning (8-11 AM)\", 75), createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60), createHeatmapEntry(\"Afternoon (2-5 PM)\", 50), createHeatmapEntry(\"Evening (5-8 PM)\", 85), createHeatmapEntry(\"Night (8-11 PM)\", 70)];\n    mockData.visibilityHeatmap = visibilityHeatmap;\n\n    // Route plans\n    mockData.routePlanDays13 = createDefaultRoutePlan1();\n    mockData.routePlanDays45 = createDefaultRoutePlan2();\n    mockData.routePlanDays67 = createDefaultRoutePlan3();\n    return mockData;\n  };\n  const createHeatmapEntry = (time, visibility) => {\n    return {\n      time,\n      visibility\n    };\n  };\n  const mapIndustryToBusinessType = industry => {\n    if (!industry) return \"Business\";\n    switch (industry) {\n      case \"retail\":\n        return \"Retail\";\n      case \"restaurant\":\n        return \"Food & Beverage\";\n      case \"entertainment\":\n        return \"Entertainment\";\n      case \"healthcare\":\n        return \"Healthcare\";\n      case \"education\":\n        return \"Education\";\n      case \"technology\":\n        return \"Technology\";\n      case \"automotive\":\n        return \"Automotive\";\n      case \"financial\":\n        return \"Financial Services\";\n      default:\n        return industry.charAt(0).toUpperCase() + industry.slice(1);\n    }\n  };\n  const getCampaignType = objectives => {\n    if (!objectives || objectives.length === 0) {\n      return \"Brand Awareness\";\n    }\n\n    // Return the first objective as the primary campaign type\n    return mapObjective(objectives[0]);\n  };\n  const mapDurationToText = duration => {\n    if (!duration) return \"7 days\";\n    switch (duration) {\n      case \"1-day\":\n        return \"1 day\";\n      case \"1-week\":\n        return \"7 days\";\n      case \"2-weeks\":\n        return \"14 days\";\n      case \"1-month\":\n        return \"30 days\";\n      case \"3-months\":\n        return \"90 days\";\n      default:\n        return duration;\n    }\n  };\n  const generateMockRoutePlanText = (formData, locations) => {\n    var _locations$, _locations$2, _locations$3, _locations$4, _locations$5, _locations$6, _locations$7, _locations$8, _locations$9, _locations$10, _locations$11, _locations$12, _locations$13;\n    const sb = [];\n    sb.push(\"# Mobile Billboard Campaign Plan\\n\\n\");\n    sb.push(`## Business: ${formData.businessName || \"Your Business\"}\\n`);\n    sb.push(`## Industry: ${formData.industry || \"Retail\"}\\n`);\n    sb.push(`## Location: ${formData.location || \"Pune\"}\\n`);\n    sb.push(`## Budget: â‚¹${formData.budget || \"25,000\"}\\n`);\n    sb.push(`## Target Audience: ${formData.targetAudience || \"General audience\"}\\n\\n`);\n    sb.push(\"### Recommended Locations:\\n\");\n    for (const location of locations) {\n      sb.push(`- ${location.name}: ${location.description}\\n`);\n    }\n    sb.push(\"\\n### Optimal Timing:\\n\");\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      sb.push(\"- 11:30 AM - 2:00 PM: Lunch rush hours\\n\");\n      sb.push(\"- 6:00 PM - 9:00 PM: Dinner time peak\\n\");\n      sb.push(\"- 3:00 PM - 5:00 PM: Afternoon coffee/snack time\\n\");\n    } else {\n      sb.push(\"- 8:00 AM - 10:00 AM: Morning commute hours\\n\");\n      sb.push(\"- 12:00 PM - 2:00 PM: Lunch break period\\n\");\n      sb.push(\"- 5:00 PM - 8:00 PM: Evening rush hour and leisure time\\n\");\n    }\n    sb.push(\"\\n### Route Plan:\\n\");\n    sb.push(\"#### Days 1-3:\\n\");\n    sb.push(`- Start at ${((_locations$ = locations[0]) === null || _locations$ === void 0 ? void 0 : _locations$.name) || \"Main Market\"} (8:00 AM)\\n`);\n    sb.push(`- Move to ${((_locations$2 = locations[1]) === null || _locations$2 === void 0 ? void 0 : _locations$2.name) || \"Business District\"} (10:30 AM)\\n`);\n    sb.push(\"- Lunch break (12:00 PM)\\n\");\n    sb.push(`- Continue to ${((_locations$3 = locations[2]) === null || _locations$3 === void 0 ? void 0 : _locations$3.name) || \"University Area\"} (2:00 PM)\\n`);\n    sb.push(`- End at ${((_locations$4 = locations[3]) === null || _locations$4 === void 0 ? void 0 : _locations$4.name) || \"Residential Hub\"} (5:00 PM)\\n`);\n    sb.push(\"\\n#### Days 4-5:\\n\");\n    sb.push(`- Start at ${((_locations$5 = locations[3]) === null || _locations$5 === void 0 ? void 0 : _locations$5.name) || \"Residential Hub\"} (12:00 PM)\\n`);\n    sb.push(`- Move to ${((_locations$6 = locations[2]) === null || _locations$6 === void 0 ? void 0 : _locations$6.name) || \"University Area\"} (2:30 PM)\\n`);\n    sb.push(`- Continue to ${((_locations$7 = locations[1]) === null || _locations$7 === void 0 ? void 0 : _locations$7.name) || \"Business District\"} (4:00 PM)\\n`);\n    sb.push(`- End at ${((_locations$8 = locations[0]) === null || _locations$8 === void 0 ? void 0 : _locations$8.name) || \"Main Market\"} (6:00 PM)\\n`);\n    sb.push(\"\\n#### Days 6-7:\\n\");\n    sb.push(`- Start at ${((_locations$9 = locations[1]) === null || _locations$9 === void 0 ? void 0 : _locations$9.name) || \"Business District\"} (5:00 PM)\\n`);\n    sb.push(`- Move to ${((_locations$10 = locations[2]) === null || _locations$10 === void 0 ? void 0 : _locations$10.name) || \"University Area\"} (6:30 PM)\\n`);\n    sb.push(`- Continue to ${((_locations$11 = locations[0]) === null || _locations$11 === void 0 ? void 0 : _locations$11.name) || \"Main Market\"} (8:00 PM)\\n`);\n    sb.push(`- End route at ${((_locations$12 = locations[3]) === null || _locations$12 === void 0 ? void 0 : _locations$12.name) || \"Residential Hub\"} (10:00 PM)\\n`);\n    sb.push(\"\\n### Estimated Impressions:\\n\");\n    sb.push(\"- Daily Average: 5,000-7,000 impressions\\n\");\n    sb.push(\"- Total Campaign: 35,000-49,000 impressions\\n\");\n    sb.push(\"\\n### Special Considerations:\\n\");\n    sb.push(`- Focus on ${((_locations$13 = locations[0]) === null || _locations$13 === void 0 ? void 0 : _locations$13.name) || \"Main Market\"} during evening hours for maximum visibility\\n`);\n    sb.push(\"- Consider weekend special routes around shopping areas\\n\");\n    sb.push(\"- Adjust timing during local events or festivals for increased exposure\\n\");\n    return sb.join(\"\");\n  };\n  const createCustomRoutePlan1 = (locations, formData) => {\n    const routes = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n\n    // Customize start time based on business type\n    let startTime = \"8:00 AM\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      startTime = \"11:00 AM\";\n    } else if (businessType.includes(\"entertainment\")) {\n      startTime = \"10:00 AM\";\n    }\n    if (locations.length >= 1) {\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(startTime, \"Start at City Center\"));\n    }\n    if (locations.length >= 2) {\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to \" + locations[1].name));\n    } else {\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to Main Market\"));\n    }\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break\"));\n    if (locations.length >= 3) {\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to \" + locations[2].name));\n    } else {\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to Business District\"));\n    }\n    return routes;\n  };\n  const createCustomRoutePlan2 = (locations, formData) => {\n    const routes = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n\n    // Customize start time based on business type\n    let startTime = \"12:00 PM\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      startTime = \"1:00 PM\";\n    } else if (businessType.includes(\"entertainment\")) {\n      startTime = \"2:00 PM\";\n    }\n    if (locations.length >= 3) {\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[2].name));\n    } else {\n      routes.push(createRouteStep(startTime, \"Start at Business District\"));\n    }\n    if (locations.length >= 4) {\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[3].name));\n    } else if (locations.length >= 1) {\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to University Area\"));\n    }\n    if (locations.length >= 1) {\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to City Center\"));\n    }\n    if (locations.length >= 2) {\n      routes.push(createRouteStep(\"6:00 PM\", \"End at \" + locations[1].name));\n    } else {\n      routes.push(createRouteStep(\"6:00 PM\", \"End at Main Market\"));\n    }\n    return routes;\n  };\n  const createCustomRoutePlan3 = (locations, formData) => {\n    const routes = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n\n    // Customize start time based on business type\n    let startTime = \"5:00 PM\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      startTime = \"6:00 PM\";\n    } else if (businessType.includes(\"entertainment\")) {\n      startTime = \"7:00 PM\";\n    }\n    if (locations.length >= 2) {\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[1].name));\n    } else {\n      routes.push(createRouteStep(startTime, \"Start at Main Market\"));\n    }\n    if (locations.length >= 3) {\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to \" + locations[2].name));\n    } else {\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to Business District\"));\n    }\n    if (locations.length >= 1) {\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to City Center\"));\n    }\n    if (locations.length >= 4) {\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[3].name));\n    } else if (locations.length >= 1) {\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at Entertainment District\"));\n    }\n    return routes;\n  };\n  const createRouteStep = (time, location) => {\n    return {\n      time,\n      location\n    };\n  };\n  const createDefaultRoutePlan1 = () => {\n    const routes = [];\n    routes.push(createRouteStep(\"8:00 AM\", \"Start at Koregaon Park\"));\n    routes.push(createRouteStep(\"9:30 AM\", \"Move to FC Road\"));\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break at JM Road\"));\n    routes.push(createRouteStep(\"1:30 PM\", \"Continue to Aundh\"));\n    return routes;\n  };\n  const createDefaultRoutePlan2 = () => {\n    const routes = [];\n    routes.push(createRouteStep(\"12:00 PM\", \"Start at Hinjewadi IT Park\"));\n    routes.push(createRouteStep(\"2:30 PM\", \"Move to University Circle\"));\n    routes.push(createRouteStep(\"4:00 PM\", \"Continue to Baner Road\"));\n    routes.push(createRouteStep(\"6:00 PM\", \"End at Aundh\"));\n    return routes;\n  };\n  const createDefaultRoutePlan3 = () => {\n    const routes = [];\n    routes.push(createRouteStep(\"5:00 PM\", \"Start at Phoenix Mall\"));\n    routes.push(createRouteStep(\"6:30 PM\", \"Move to FC Road\"));\n    routes.push(createRouteStep(\"8:00 PM\", \"Continue to Koregaon Park\"));\n    routes.push(createRouteStep(\"10:00 PM\", \"End route at E-Square\"));\n    return routes;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: \"Loading campaign data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 p-4\",\n      children: [\"Error loading campaign data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 12\n    }, this);\n  }\n  if (!campaignData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No campaign data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-10 px-4 max-w-7xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-2\",\n      children: \"Billboard Campaign Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-muted-foreground mb-8\",\n      children: [\"Optimized mobile billboard campaign for \", campaignData.businessName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-primary/5 border-b p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 13\n          }, this), \"Campaign Overview\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-muted-foreground\",\n          children: \"Key details about your mobile billboard campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 849,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-muted-foreground\",\n              children: \"Business\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 859,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: campaignData.businessName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: campaignData.businessType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-muted-foreground\",\n              children: \"Target Audience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: campaignData.targetAudience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: campaignData.campaignType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 866,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-muted-foreground\",\n              children: \"Campaign Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                className: \"h-4 w-4 text-muted-foreground\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: campaignData.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"h-4 w-4 text-muted-foreground\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: campaignData.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n                className: \"h-4 w-4 text-muted-foreground\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 879,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", campaignData.budget]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 856,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 848,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultValue: \"locations\",\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"py-2 px-4 text-center hover:bg-gray-100 border-b-2 border-primary\",\n          onClick: () => document.getElementById(\"locations\").scrollIntoView({\n            behavior: \"smooth\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"h-4 w-4 mr-2 inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 13\n          }, this), \"Best Locations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 890,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"py-2 px-4 text-center hover:bg-gray-100\",\n          onClick: () => document.getElementById(\"timing\").scrollIntoView({\n            behavior: \"smooth\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"h-4 w-4 mr-2 inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 901,\n            columnNumber: 13\n          }, this), \"Optimal Timing\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"py-2 px-4 text-center hover:bg-gray-100\",\n          onClick: () => document.getElementById(\"route\").scrollIntoView({\n            behavior: \"smooth\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(RouteIcon, {\n            className: \"h-4 w-4 mr-2 inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 908,\n            columnNumber: 13\n          }, this), \"Route Plan\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"locations\",\n        className: \"space-y-6 mb-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: [\"Recommended Locations in \", campaignData.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-muted-foreground\",\n              children: [\"High-traffic areas where your target audience (\", campaignData.targetAudience, \") is most likely to be present\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: campaignData.locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\",\n                    children: /*#__PURE__*/_jsxDEV(MapPin, {\n                      className: \"h-5 w-5 text-primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 929,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 928,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: location.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 932,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-muted-foreground\",\n                      children: location.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 933,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 931,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 927,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 925,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CampaignMap, {\n                locations: campaignData.locations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 938,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timing\",\n        className: \"space-y-6 mb-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Optimal Timing for Maximum Visibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-muted-foreground\",\n              children: \"Strategic time slots to reach your target audience throughout the day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: campaignData.timings.map((timing, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\",\n                    children: /*#__PURE__*/_jsxDEV(Clock, {\n                      className: \"h-5 w-5 text-primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 959,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 958,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: timing.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 962,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-muted-foreground\",\n                      children: timing.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 963,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 961,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 957,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rounded-lg overflow-hidden border bg-card text-card-foreground shadow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-4\",\n                    children: \"Daily Visibility Heatmap\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 970,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-4\",\n                    children: campaignData.visibilityHeatmap.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex justify-between items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm font-medium\",\n                          children: item.time\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 975,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm text-muted-foreground\",\n                          children: [item.visibility, \"% Visibility\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 976,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 974,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"h-2 w-full bg-secondary rounded-full overflow-hidden\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"h-full bg-primary rounded-full\",\n                          style: {\n                            width: `${item.visibility}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 979,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 978,\n                        columnNumber: 27\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 973,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 971,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 969,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 968,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 954,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"route\",\n        className: \"space-y-6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"7-Day Route Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-muted-foreground\",\n              children: \"Optimized route to maximize visibility while staying within budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 996,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 994,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-3\",\n                    children: \"Days 1-3: Morning to Midday Focus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1004,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RouteTimeline, {\n                    routes: campaignData.routePlanDays13\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1005,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1003,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-3\",\n                    children: \"Days 4-5: Midday to Evening Focus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1008,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RouteTimeline, {\n                    routes: campaignData.routePlanDays45\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1009,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1007,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-3\",\n                    children: \"Days 6-7: Evening to Late Night Focus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1012,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RouteTimeline, {\n                    routes: campaignData.routePlanDays67\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1013,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1011,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1002,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BudgetBreakdown, {\n                budget: campaignData.budget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1016,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1001,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1000,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 993,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 888,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DebugPanel, {\n      data: campaignData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1024,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 841,\n    columnNumber: 5\n  }, this);\n}\n_s(CampaignResults, \"kfgrq3qccP8vIxgCee2SXs6RysY=\");\n_c = CampaignResults;\nvar _c;\n$RefreshReg$(_c, \"CampaignResults\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","MapPin","Clock","RouteIcon","DollarSign","Target","Calendar","Card","Tabs","CampaignMap","RouteTimeline","BudgetBreakdown","DebugPanel","jsxDEV","_jsxDEV","CampaignResults","campaignData","setCampaignData","loading","setLoading","error","setError","fetchCampaignData","storedData","localStorage","getItem","console","log","parsedData","JSON","parse","formData","geminiResponse","callGeminiAPI","processedData","processGeminiResponse","routePlan","parseCampaignData","removeItem","createMockCampaignData","prompt","generatePrompt","apiKey","response","fetch","method","headers","body","stringify","contents","parts","text","ok","errorText","Error","status","data","json","candidates","length","textContent","content","objectivesStr","objectives","map","mapObjective","join","businessName","industry","targetAudience","location","campaignDuration","budget","objective","result","createCustomizedMockData","candidate","part","parseAIResponse","finalResult","defaultData","businessType","campaignType","duration","locations","name","description","timings","time","visibilityHeatmap","visibility","routePlanDays13","routePlanDays45","routePlanDays67","mergedData","businessNameMatch","match","trim","locationMatch","budgetMatch","audienceMatch","fullRoutePlan","includes","extractedLocations","lines","split","inLocationSection","line","startsWith","substring","indexOf","push","createLocation","extractedTimings","inTimingSection","createTiming","extractRoutePlan","warn","message","sectionTitle1","sectionTitle2","routes","inSection","timeMatch","mockData","mapIndustryToBusinessType","getCampaignType","mapDurationToText","String","toLowerCase","createHeatmapEntry","createCustomRoutePlan1","createCustomRoutePlan2","createCustomRoutePlan3","routePlanText","generateMockRoutePlanText","createDefaultRoutePlan1","createDefaultRoutePlan2","createDefaultRoutePlan3","charAt","toUpperCase","slice","_locations$","_locations$2","_locations$3","_locations$4","_locations$5","_locations$6","_locations$7","_locations$8","_locations$9","_locations$10","_locations$11","_locations$12","_locations$13","sb","startTime","createRouteStep","className","children","fileName","lineNumber","columnNumber","defaultValue","onClick","document","getElementById","scrollIntoView","behavior","id","index","timing","item","style","width","_c","$RefreshReg$"],"sources":["C:/Users/kambl/OneDrive/Desktop/LastestMOB/mobPRO/frontend/src/Pages/CampaignResults.js"],"sourcesContent":["\"use client\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { MapPin, Clock, RouteIcon, DollarSign, Target, Calendar } from \"lucide-react\"\r\nimport { Card } from \"../components/ui/card\"\r\nimport { Tabs } from \"../components/ui/tabs\"\r\n\r\n// Import the components we'll create next\r\nimport CampaignMap from \"../components/CampaignMap\"\r\nimport RouteTimeline from \"../components/RouteTimeline\"\r\nimport BudgetBreakdown from \"../components/BudgetBreakdown\"\r\nimport DebugPanel from \"../components/DebugPanel\"\r\n\r\nexport default function CampaignResults() {\r\n  const [campaignData, setCampaignData] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchCampaignData = async () => {\r\n      try {\r\n        // First, try to get data from localStorage (from form submission)\r\n        const storedData = localStorage.getItem(\"campaignData\")\r\n\r\n        if (storedData) {\r\n          console.log(\"Using stored campaign data from localStorage\")\r\n          const parsedData = JSON.parse(storedData)\r\n          console.log(\"Parsed stored data:\", parsedData)\r\n\r\n          // If we have form data, call Gemini API directly\r\n          if (parsedData.formData) {\r\n            console.log(\"Calling Gemini API with form data\")\r\n            const geminiResponse = await callGeminiAPI(parsedData.formData)\r\n\r\n            // Process the Gemini response and merge with form data\r\n            const processedData = processGeminiResponse(geminiResponse, parsedData.formData)\r\n            setCampaignData(processedData)\r\n          } else if (parsedData.routePlan) {\r\n            // If we already have the route plan text, parse it\r\n            setCampaignData(parseCampaignData(parsedData))\r\n          } else {\r\n            setCampaignData(parsedData)\r\n          }\r\n\r\n          // Clear localStorage after retrieving the data to avoid stale data on refresh\r\n          localStorage.removeItem(\"campaignData\")\r\n        } else {\r\n          // If no data in localStorage, use default mock data\r\n          console.log(\"No stored data found, using default mock data\")\r\n          setCampaignData(createMockCampaignData())\r\n        }\r\n        setLoading(false)\r\n      } catch (error) {\r\n        console.error(\"Error processing campaign data:\", error)\r\n        setError(error)\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    fetchCampaignData()\r\n  }, [])\r\n\r\n  // Call Gemini API directly from the frontend\r\n  const callGeminiAPI = async (formData) => {\r\n    try {\r\n      // Generate prompt based on form data\r\n      const prompt = generatePrompt(formData)\r\n      console.log(\"Generated prompt for Gemini:\", prompt)\r\n\r\n      // Get API key from environment variable or use a hardcoded one for demo\r\n      // In production, you should use environment variables and proper authentication\r\n      const apiKey = \"AIzaSyAgBPUp7C4AC5d3DuCADTW4bmi2_7JPAwY\" // Replace with your actual API key or use environment variable\r\n\r\n      console.log(\"Calling Gemini API...\")\r\n\r\n      // Call Gemini API\r\n      const response = await fetch(\r\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            contents: [\r\n              {\r\n                parts: [\r\n                  {\r\n                    text: prompt,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          }),\r\n        },\r\n      )\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text()\r\n        console.error(\"Gemini API error response:\", errorText)\r\n        throw new Error(`Gemini API error: ${response.status} - ${errorText}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n      console.log(\"Gemini API response received:\", data)\r\n\r\n      // Log the actual text content for easier debugging\r\n      if (data.candidates && data.candidates.length > 0) {\r\n        const textContent = data.candidates[0].content.parts[0].text\r\n        console.log(\"Gemini API text response:\", textContent)\r\n      }\r\n\r\n      return data\r\n    } catch (error) {\r\n      console.error(\"Error calling Gemini API:\", error)\r\n      // Return null or a default response in case of error\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Generate prompt for Gemini API based on form data\r\n  const generatePrompt = (formData) => {\r\n    const objectivesStr =\r\n      formData.objectives && formData.objectives.length > 0\r\n        ? formData.objectives.map(mapObjective).join(\", \")\r\n        : \"Brand Awareness\"\r\n\r\n    return `Generate a mobile billboard route plan with these specifications:\r\n\r\nBusiness: ${formData.businessName || \"\"}\r\nIndustry: ${formData.industry || \"\"}\r\nTarget Audience: ${formData.targetAudience || \"\"}\r\nCampaign Objectives: ${objectivesStr}\r\nLocation: ${formData.location || \"\"}\r\nDuration: ${formData.campaignDuration || \"\"}\r\nBudget: â‚¹${formData.budget || 0}\r\n\r\nProvide:\r\n1. Recommended locations with timing windows\r\n2. Optimal routes for maximum visibility\r\n3. Estimated impressions per day\r\n4. Any special considerations\r\nFormat the response with clear sections and bullet points.`\r\n  }\r\n\r\n  // Map objective codes to readable text\r\n  const mapObjective = (objective) => {\r\n    switch (objective) {\r\n      case \"brand\":\r\n        return \"Brand Awareness\"\r\n      case \"traffic\":\r\n        return \"Store Traffic\"\r\n      case \"launch\":\r\n        return \"Product Launch\"\r\n      case \"event\":\r\n        return \"Event Promotion\"\r\n      default:\r\n        return objective\r\n    }\r\n  }\r\n\r\n  // Process Gemini API response\r\n  const processGeminiResponse = (response, formData) => {\r\n    console.log(\"Processing Gemini API response...\")\r\n\r\n    // Start with a customized data structure based on the form data\r\n    const result = createCustomizedMockData(formData)\r\n\r\n    // If Gemini API call failed, return the mock data\r\n    if (!response || !response.candidates || response.candidates.length === 0) {\r\n      console.log(\"No valid Gemini response, using mock data\")\r\n      return result\r\n    }\r\n\r\n    try {\r\n      // Extract text from Gemini response\r\n      const candidate = response.candidates[0]\r\n      const content = candidate.content\r\n      const part = content.parts[0]\r\n      const text = part.text\r\n\r\n      console.log(\"Extracted text from Gemini response\")\r\n\r\n      // Add the AI-generated route plan\r\n      result.routePlan = text\r\n\r\n      // Parse the AI response to extract locations, timings, etc.\r\n      console.log(\"Parsing AI response to extract structured data...\")\r\n      const parsedData = parseAIResponse(text)\r\n      console.log(\"Parsed data from AI response:\", parsedData)\r\n\r\n      // Merge the parsed data with our result\r\n      const finalResult = { ...result, ...parsedData }\r\n      console.log(\"Final processed data:\", finalResult)\r\n\r\n      return finalResult\r\n    } catch (error) {\r\n      console.error(\"Error processing Gemini response:\", error)\r\n      return result\r\n    }\r\n  }\r\n\r\n  // Helper function to parse the raw route plan text into structured data\r\n  const parseCampaignData = (data) => {\r\n    // Default structure that matches what the component expects\r\n    const defaultData = {\r\n      businessName: \"Your Business\",\r\n      businessType: \"Retail\",\r\n      targetAudience: \"18-40 year olds\",\r\n      campaignType: \"Brand Awareness\",\r\n      location: \"Pune\",\r\n      duration: \"7 days\",\r\n      budget: \"25,000\",\r\n      locations: [\r\n        { name: \"Koregaon Park\", description: \"High-end shopping area with affluent visitors\" },\r\n        { name: \"FC Road\", description: \"Popular with college students and young professionals\" },\r\n        { name: \"Aundh\", description: \"Residential area with shopping complexes\" },\r\n        { name: \"Hinjewadi IT Park\", description: \"Tech hub with young professionals\" },\r\n      ],\r\n      timings: [\r\n        { time: \"8:00 AM - 10:00 AM\", description: \"Morning commute hours\" },\r\n        { time: \"12:00 PM - 2:00 PM\", description: \"Lunch break period\" },\r\n        { time: \"5:00 PM - 8:00 PM\", description: \"Evening rush hour and leisure time\" },\r\n      ],\r\n      visibilityHeatmap: [\r\n        { time: \"Morning (8-11 AM)\", visibility: 75 },\r\n        { time: \"Midday (11 AM-2 PM)\", visibility: 60 },\r\n        { time: \"Afternoon (2-5 PM)\", visibility: 50 },\r\n        { time: \"Evening (5-8 PM)\", visibility: 85 },\r\n        { time: \"Night (8-11 PM)\", visibility: 70 },\r\n      ],\r\n      routePlanDays13: [\r\n        { time: \"8:00 AM\", location: \"Start at Koregaon Park\" },\r\n        { time: \"9:30 AM\", location: \"Move to FC Road\" },\r\n        { time: \"12:00 PM\", location: \"Lunch break at JM Road\" },\r\n        { time: \"1:30 PM\", location: \"Continue to Aundh\" },\r\n      ],\r\n      routePlanDays45: [\r\n        { time: \"12:00 PM\", location: \"Start at Hinjewadi IT Park\" },\r\n        { time: \"2:30 PM\", location: \"Move to University Circle\" },\r\n        { time: \"4:00 PM\", location: \"Continue to Baner Road\" },\r\n        { time: \"6:00 PM\", location: \"End at Aundh\" },\r\n      ],\r\n      routePlanDays67: [\r\n        { time: \"5:00 PM\", location: \"Start at Phoenix Mall\" },\r\n        { time: \"6:30 PM\", location: \"Move to FC Road\" },\r\n        { time: \"8:00 PM\", location: \"Continue to Koregaon Park\" },\r\n        { time: \"10:00 PM\", location: \"End route at E-Square\" },\r\n      ],\r\n    }\r\n\r\n    // Merge the received data with our default structure\r\n    const mergedData = { ...defaultData, ...data }\r\n\r\n    // Try to extract information from the route plan text\r\n    if (data.routePlan) {\r\n      const routePlan = data.routePlan\r\n\r\n      // Extract business name if present\r\n      const businessNameMatch = routePlan.match(/Business:\\s*([^\\n]+)/)\r\n      if (businessNameMatch && businessNameMatch[1]) {\r\n        mergedData.businessName = businessNameMatch[1].trim()\r\n      }\r\n\r\n      // Extract location if present\r\n      const locationMatch = routePlan.match(/Location:\\s*([^\\n]+)/)\r\n      if (locationMatch && locationMatch[1]) {\r\n        mergedData.location = locationMatch[1].trim()\r\n      }\r\n\r\n      // Extract budget if present\r\n      const budgetMatch = routePlan.match(/Budget:\\s*â‚¹([^\\n]+)/)\r\n      if (budgetMatch && budgetMatch[1]) {\r\n        mergedData.budget = budgetMatch[1].trim()\r\n      }\r\n\r\n      // Extract target audience if present\r\n      const audienceMatch = routePlan.match(/Target Audience:\\s*([^\\n]+)/)\r\n      if (audienceMatch && audienceMatch[1]) {\r\n        mergedData.targetAudience = audienceMatch[1].trim()\r\n      }\r\n\r\n      // Store the full route plan for debugging\r\n      mergedData.fullRoutePlan = routePlan\r\n    }\r\n\r\n    return mergedData\r\n  }\r\n\r\n  const parseAIResponse = (text) => {\r\n    const result = {}\r\n\r\n    try {\r\n      // Look for location sections in the text\r\n      if (text.includes(\"Recommended Locations\") || text.includes(\"recommended locations\")) {\r\n        const extractedLocations = []\r\n        const lines = text.split(\"\\n\")\r\n        let inLocationSection = false\r\n\r\n        for (const line of lines) {\r\n          if (line.includes(\"Recommended Locations\") || line.includes(\"recommended locations\")) {\r\n            inLocationSection = true\r\n            continue\r\n          }\r\n\r\n          if (inLocationSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\r\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2)\r\n            if (parts.length === 2) {\r\n              const name = parts[0].trim()\r\n              const description = parts[1].trim()\r\n              extractedLocations.push(createLocation(name, description))\r\n            }\r\n          }\r\n\r\n          // Exit location section when we hit another section\r\n          if (inLocationSection && (line.includes(\"Optimal Timing\") || line.includes(\"Route Plan\"))) {\r\n            inLocationSection = false\r\n          }\r\n        }\r\n\r\n        if (extractedLocations.length > 0) {\r\n          result.locations = extractedLocations\r\n        }\r\n      }\r\n\r\n      // Extract timing information\r\n      if (text.includes(\"Optimal Timing\") || text.includes(\"optimal timing\")) {\r\n        const extractedTimings = []\r\n        const lines = text.split(\"\\n\")\r\n        let inTimingSection = false\r\n\r\n        for (const line of lines) {\r\n          if (line.includes(\"Optimal Timing\") || line.includes(\"optimal timing\")) {\r\n            inTimingSection = true\r\n            continue\r\n          }\r\n\r\n          if (inTimingSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\r\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2)\r\n            if (parts.length === 2) {\r\n              const time = parts[0].trim()\r\n              const description = parts[1].trim()\r\n              extractedTimings.push(createTiming(time, description))\r\n            }\r\n          }\r\n\r\n          // Exit timing section when we hit another section\r\n          if (inTimingSection && (line.includes(\"Route Plan\") || line.includes(\"Estimated\"))) {\r\n            inTimingSection = false\r\n          }\r\n        }\r\n\r\n        if (extractedTimings.length > 0) {\r\n          result.timings = extractedTimings\r\n        }\r\n      }\r\n\r\n      // Extract route plans\r\n      if (text.includes(\"Days 1-3\") || text.includes(\"days 1-3\")) {\r\n        result.routePlanDays13 = extractRoutePlan(text, \"Days 1-3\", \"days 1-3\")\r\n      }\r\n\r\n      if (text.includes(\"Days 4-5\") || text.includes(\"days 4-5\")) {\r\n        result.routePlanDays45 = extractRoutePlan(text, \"Days 4-5\", \"days 4-5\")\r\n      }\r\n\r\n      if (text.includes(\"Days 6-7\") || text.includes(\"days 6-7\")) {\r\n        result.routePlanDays67 = extractRoutePlan(text, \"Days 6-7\", \"days 6-7\")\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"Warning: Error parsing AI response:\", error.message)\r\n      // Continue with default values\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  // Helper function to extract route plans from text\r\n  const extractRoutePlan = (text, sectionTitle1, sectionTitle2) => {\r\n    const routes = []\r\n    const lines = text.split(\"\\n\")\r\n    let inSection = false\r\n\r\n    for (const line of lines) {\r\n      if (line.includes(sectionTitle1) || line.includes(sectionTitle2)) {\r\n        inSection = true\r\n        continue\r\n      }\r\n\r\n      if (\r\n        inSection &&\r\n        line.trim().startsWith(\"-\") &&\r\n        (line.includes(\"Start at\") ||\r\n          line.includes(\"Move to\") ||\r\n          line.includes(\"Continue to\") ||\r\n          line.includes(\"End at\") ||\r\n          line.includes(\"Lunch break\"))\r\n      ) {\r\n        // Extract time and location\r\n        const timeMatch = line.match(/(\\d{1,2}:\\d{2}\\s*(?:AM|PM))/)\r\n        if (timeMatch) {\r\n          const time = timeMatch[1]\r\n          const location = line.substring(line.indexOf(\"-\") + 1).trim()\r\n          routes.push({ time, location })\r\n        }\r\n      }\r\n\r\n      // Exit section when we hit another section\r\n      if (inSection && (line.includes(\"Days\") || line.includes(\"Estimated\") || line.includes(\"Special\"))) {\r\n        if (!line.includes(sectionTitle1) && !line.includes(sectionTitle2)) {\r\n          inSection = false\r\n        }\r\n      }\r\n    }\r\n\r\n    return routes.length > 0 ? routes : null\r\n  }\r\n\r\n  const createLocation = (name, description) => {\r\n    return { name, description }\r\n  }\r\n\r\n  const createTiming = (time, description) => {\r\n    return { time, description }\r\n  }\r\n\r\n  const createCustomizedMockData = (formData) => {\r\n    const mockData = {\r\n      businessName: formData.businessName || \"Your Business\",\r\n      businessType: mapIndustryToBusinessType(formData.industry),\r\n      targetAudience: formData.targetAudience || \"General audience\",\r\n      campaignType: getCampaignType(formData.objectives),\r\n      location: formData.location || \"Pune\",\r\n      duration: mapDurationToText(formData.campaignDuration),\r\n      budget: String(formData.budget || 25000),\r\n    }\r\n\r\n    // Customize locations based on the requested location\r\n    const locations = []\r\n    const location = formData.location ? formData.location.toLowerCase() : \"\"\r\n\r\n    if (location.includes(\"pune\")) {\r\n      locations.push(createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"))\r\n      locations.push(createLocation(\"FC Road\", \"Popular with college students and young professionals\"))\r\n      locations.push(createLocation(\"Aundh\", \"Residential area with shopping complexes\"))\r\n      locations.push(createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\"))\r\n    } else if (location.includes(\"mumbai\")) {\r\n      locations.push(createLocation(\"Bandra\", \"Upscale residential and commercial area\"))\r\n      locations.push(createLocation(\"Andheri\", \"Business hub with shopping centers\"))\r\n      locations.push(createLocation(\"Marine Drive\", \"Popular tourist destination\"))\r\n      locations.push(createLocation(\"Powai\", \"Tech and business center\"))\r\n    } else if (location.includes(\"delhi\")) {\r\n      locations.push(createLocation(\"Connaught Place\", \"Central business district\"))\r\n      locations.push(createLocation(\"South Extension\", \"Popular shopping area\"))\r\n      locations.push(createLocation(\"Hauz Khas\", \"Trendy area with restaurants and shops\"))\r\n      locations.push(createLocation(\"Cyber City\", \"Business hub in Gurgaon\"))\r\n    } else {\r\n      // Default locations for any other city\r\n      locations.push(createLocation(\"Main Market\", \"Central shopping area\"))\r\n      locations.push(createLocation(\"Business District\", \"Commercial hub with offices\"))\r\n      locations.push(createLocation(\"University Area\", \"Popular with students\"))\r\n      locations.push(createLocation(\"Residential Hub\", \"High-density residential area\"))\r\n    }\r\n    mockData.locations = locations\r\n\r\n    // Timings - customize based on business type\r\n    const timings = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      timings.push(createTiming(\"11:30 AM - 2:00 PM\", \"Lunch rush hours\"))\r\n      timings.push(createTiming(\"6:00 PM - 9:00 PM\", \"Dinner time peak\"))\r\n      timings.push(createTiming(\"3:00 PM - 5:00 PM\", \"Afternoon coffee/snack time\"))\r\n    } else if (businessType.includes(\"retail\")) {\r\n      timings.push(createTiming(\"10:00 AM - 1:00 PM\", \"Morning shopping hours\"))\r\n      timings.push(createTiming(\"4:00 PM - 7:00 PM\", \"After-work shopping peak\"))\r\n      timings.push(createTiming(\"1:00 PM - 3:00 PM\", \"Lunch break shoppers\"))\r\n    } else {\r\n      timings.push(createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"))\r\n      timings.push(createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"))\r\n      timings.push(createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\"))\r\n    }\r\n    mockData.timings = timings\r\n\r\n    // Visibility heatmap - customize based on business type\r\n    const visibilityHeatmap = []\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 40))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Lunch (11 AM-2 PM)\", 85))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 90))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 75))\r\n    } else if (businessType.includes(\"retail\")) {\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 60))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 75))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 70))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 40))\r\n    } else {\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 75))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 70))\r\n    }\r\n    mockData.visibilityHeatmap = visibilityHeatmap\r\n\r\n    // Route plans - customize based on the locations\r\n    mockData.routePlanDays13 = createCustomRoutePlan1(locations, formData)\r\n    mockData.routePlanDays45 = createCustomRoutePlan2(locations, formData)\r\n    mockData.routePlanDays67 = createCustomRoutePlan3(locations, formData)\r\n\r\n    // Generate a mock route plan text\r\n    const routePlanText = generateMockRoutePlanText(formData, locations)\r\n    mockData.routePlan = routePlanText\r\n\r\n    return mockData\r\n  }\r\n\r\n  const createMockCampaignData = () => {\r\n    const mockData = {\r\n      businessName: \"Coffee House\",\r\n      businessType: \"Food & Beverage\",\r\n      targetAudience: \"18-40 year olds, coffee enthusiasts, students, professionals\",\r\n      campaignType: \"Brand Awareness\",\r\n      location: \"Pune\",\r\n      duration: \"7 days\",\r\n      budget: \"25,000\",\r\n    }\r\n\r\n    // Locations\r\n    const locations = [\r\n      createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"),\r\n      createLocation(\"FC Road\", \"Popular with college students and young professionals\"),\r\n      createLocation(\"Aundh\", \"Residential area with shopping complexes\"),\r\n      createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\"),\r\n    ]\r\n    mockData.locations = locations\r\n\r\n    // Timings\r\n    const timings = [\r\n      createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"),\r\n      createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"),\r\n      createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\"),\r\n    ]\r\n    mockData.timings = timings\r\n\r\n    // Visibility heatmap\r\n    const visibilityHeatmap = [\r\n      createHeatmapEntry(\"Morning (8-11 AM)\", 75),\r\n      createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60),\r\n      createHeatmapEntry(\"Afternoon (2-5 PM)\", 50),\r\n      createHeatmapEntry(\"Evening (5-8 PM)\", 85),\r\n      createHeatmapEntry(\"Night (8-11 PM)\", 70),\r\n    ]\r\n    mockData.visibilityHeatmap = visibilityHeatmap\r\n\r\n    // Route plans\r\n    mockData.routePlanDays13 = createDefaultRoutePlan1()\r\n    mockData.routePlanDays45 = createDefaultRoutePlan2()\r\n    mockData.routePlanDays67 = createDefaultRoutePlan3()\r\n\r\n    return mockData\r\n  }\r\n\r\n  const createHeatmapEntry = (time, visibility) => {\r\n    return { time, visibility }\r\n  }\r\n\r\n  const mapIndustryToBusinessType = (industry) => {\r\n    if (!industry) return \"Business\"\r\n\r\n    switch (industry) {\r\n      case \"retail\":\r\n        return \"Retail\"\r\n      case \"restaurant\":\r\n        return \"Food & Beverage\"\r\n      case \"entertainment\":\r\n        return \"Entertainment\"\r\n      case \"healthcare\":\r\n        return \"Healthcare\"\r\n      case \"education\":\r\n        return \"Education\"\r\n      case \"technology\":\r\n        return \"Technology\"\r\n      case \"automotive\":\r\n        return \"Automotive\"\r\n      case \"financial\":\r\n        return \"Financial Services\"\r\n      default:\r\n        return industry.charAt(0).toUpperCase() + industry.slice(1)\r\n    }\r\n  }\r\n\r\n  const getCampaignType = (objectives) => {\r\n    if (!objectives || objectives.length === 0) {\r\n      return \"Brand Awareness\"\r\n    }\r\n\r\n    // Return the first objective as the primary campaign type\r\n    return mapObjective(objectives[0])\r\n  }\r\n\r\n  const mapDurationToText = (duration) => {\r\n    if (!duration) return \"7 days\"\r\n\r\n    switch (duration) {\r\n      case \"1-day\":\r\n        return \"1 day\"\r\n      case \"1-week\":\r\n        return \"7 days\"\r\n      case \"2-weeks\":\r\n        return \"14 days\"\r\n      case \"1-month\":\r\n        return \"30 days\"\r\n      case \"3-months\":\r\n        return \"90 days\"\r\n      default:\r\n        return duration\r\n    }\r\n  }\r\n\r\n  const generateMockRoutePlanText = (formData, locations) => {\r\n    const sb = []\r\n    sb.push(\"# Mobile Billboard Campaign Plan\\n\\n\")\r\n    sb.push(`## Business: ${formData.businessName || \"Your Business\"}\\n`)\r\n    sb.push(`## Industry: ${formData.industry || \"Retail\"}\\n`)\r\n    sb.push(`## Location: ${formData.location || \"Pune\"}\\n`)\r\n    sb.push(`## Budget: â‚¹${formData.budget || \"25,000\"}\\n`)\r\n    sb.push(`## Target Audience: ${formData.targetAudience || \"General audience\"}\\n\\n`)\r\n\r\n    sb.push(\"### Recommended Locations:\\n\")\r\n    for (const location of locations) {\r\n      sb.push(`- ${location.name}: ${location.description}\\n`)\r\n    }\r\n\r\n    sb.push(\"\\n### Optimal Timing:\\n\")\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      sb.push(\"- 11:30 AM - 2:00 PM: Lunch rush hours\\n\")\r\n      sb.push(\"- 6:00 PM - 9:00 PM: Dinner time peak\\n\")\r\n      sb.push(\"- 3:00 PM - 5:00 PM: Afternoon coffee/snack time\\n\")\r\n    } else {\r\n      sb.push(\"- 8:00 AM - 10:00 AM: Morning commute hours\\n\")\r\n      sb.push(\"- 12:00 PM - 2:00 PM: Lunch break period\\n\")\r\n      sb.push(\"- 5:00 PM - 8:00 PM: Evening rush hour and leisure time\\n\")\r\n    }\r\n\r\n    sb.push(\"\\n### Route Plan:\\n\")\r\n    sb.push(\"#### Days 1-3:\\n\")\r\n    sb.push(`- Start at ${locations[0]?.name || \"Main Market\"} (8:00 AM)\\n`)\r\n    sb.push(`- Move to ${locations[1]?.name || \"Business District\"} (10:30 AM)\\n`)\r\n    sb.push(\"- Lunch break (12:00 PM)\\n\")\r\n    sb.push(`- Continue to ${locations[2]?.name || \"University Area\"} (2:00 PM)\\n`)\r\n    sb.push(`- End at ${locations[3]?.name || \"Residential Hub\"} (5:00 PM)\\n`)\r\n\r\n    sb.push(\"\\n#### Days 4-5:\\n\")\r\n    sb.push(`- Start at ${locations[3]?.name || \"Residential Hub\"} (12:00 PM)\\n`)\r\n    sb.push(`- Move to ${locations[2]?.name || \"University Area\"} (2:30 PM)\\n`)\r\n    sb.push(`- Continue to ${locations[1]?.name || \"Business District\"} (4:00 PM)\\n`)\r\n    sb.push(`- End at ${locations[0]?.name || \"Main Market\"} (6:00 PM)\\n`)\r\n\r\n    sb.push(\"\\n#### Days 6-7:\\n\")\r\n    sb.push(`- Start at ${locations[1]?.name || \"Business District\"} (5:00 PM)\\n`)\r\n    sb.push(`- Move to ${locations[2]?.name || \"University Area\"} (6:30 PM)\\n`)\r\n    sb.push(`- Continue to ${locations[0]?.name || \"Main Market\"} (8:00 PM)\\n`)\r\n    sb.push(`- End route at ${locations[3]?.name || \"Residential Hub\"} (10:00 PM)\\n`)\r\n\r\n    sb.push(\"\\n### Estimated Impressions:\\n\")\r\n    sb.push(\"- Daily Average: 5,000-7,000 impressions\\n\")\r\n    sb.push(\"- Total Campaign: 35,000-49,000 impressions\\n\")\r\n\r\n    sb.push(\"\\n### Special Considerations:\\n\")\r\n    sb.push(`- Focus on ${locations[0]?.name || \"Main Market\"} during evening hours for maximum visibility\\n`)\r\n    sb.push(\"- Consider weekend special routes around shopping areas\\n\")\r\n    sb.push(\"- Adjust timing during local events or festivals for increased exposure\\n\")\r\n\r\n    return sb.join(\"\")\r\n  }\r\n\r\n  const createCustomRoutePlan1 = (locations, formData) => {\r\n    const routes = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    // Customize start time based on business type\r\n    let startTime = \"8:00 AM\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      startTime = \"11:00 AM\"\r\n    } else if (businessType.includes(\"entertainment\")) {\r\n      startTime = \"10:00 AM\"\r\n    }\r\n\r\n    if (locations.length >= 1) {\r\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(startTime, \"Start at City Center\"))\r\n    }\r\n\r\n    if (locations.length >= 2) {\r\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to \" + locations[1].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to Main Market\"))\r\n    }\r\n\r\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break\"))\r\n\r\n    if (locations.length >= 3) {\r\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to \" + locations[2].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to Business District\"))\r\n    }\r\n\r\n    return routes\r\n  }\r\n\r\n  const createCustomRoutePlan2 = (locations, formData) => {\r\n    const routes = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    // Customize start time based on business type\r\n    let startTime = \"12:00 PM\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      startTime = \"1:00 PM\"\r\n    } else if (businessType.includes(\"entertainment\")) {\r\n      startTime = \"2:00 PM\"\r\n    }\r\n\r\n    if (locations.length >= 3) {\r\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[2].name))\r\n    } else {\r\n      routes.push(createRouteStep(startTime, \"Start at Business District\"))\r\n    }\r\n\r\n    if (locations.length >= 4) {\r\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[3].name))\r\n    } else if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to University Area\"))\r\n    }\r\n\r\n    if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to City Center\"))\r\n    }\r\n\r\n    if (locations.length >= 2) {\r\n      routes.push(createRouteStep(\"6:00 PM\", \"End at \" + locations[1].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"6:00 PM\", \"End at Main Market\"))\r\n    }\r\n\r\n    return routes\r\n  }\r\n\r\n  const createCustomRoutePlan3 = (locations, formData) => {\r\n    const routes = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    // Customize start time based on business type\r\n    let startTime = \"5:00 PM\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      startTime = \"6:00 PM\"\r\n    } else if (businessType.includes(\"entertainment\")) {\r\n      startTime = \"7:00 PM\"\r\n    }\r\n\r\n    if (locations.length >= 2) {\r\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[1].name))\r\n    } else {\r\n      routes.push(createRouteStep(startTime, \"Start at Main Market\"))\r\n    }\r\n\r\n    if (locations.length >= 3) {\r\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to \" + locations[2].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to Business District\"))\r\n    }\r\n\r\n    if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to City Center\"))\r\n    }\r\n\r\n    if (locations.length >= 4) {\r\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[3].name))\r\n    } else if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at Entertainment District\"))\r\n    }\r\n\r\n    return routes\r\n  }\r\n\r\n  const createRouteStep = (time, location) => {\r\n    return { time, location }\r\n  }\r\n\r\n  const createDefaultRoutePlan1 = () => {\r\n    const routes = []\r\n    routes.push(createRouteStep(\"8:00 AM\", \"Start at Koregaon Park\"))\r\n    routes.push(createRouteStep(\"9:30 AM\", \"Move to FC Road\"))\r\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break at JM Road\"))\r\n    routes.push(createRouteStep(\"1:30 PM\", \"Continue to Aundh\"))\r\n    return routes\r\n  }\r\n\r\n  const createDefaultRoutePlan2 = () => {\r\n    const routes = []\r\n    routes.push(createRouteStep(\"12:00 PM\", \"Start at Hinjewadi IT Park\"))\r\n    routes.push(createRouteStep(\"2:30 PM\", \"Move to University Circle\"))\r\n    routes.push(createRouteStep(\"4:00 PM\", \"Continue to Baner Road\"))\r\n    routes.push(createRouteStep(\"6:00 PM\", \"End at Aundh\"))\r\n    return routes\r\n  }\r\n\r\n  const createDefaultRoutePlan3 = () => {\r\n    const routes = []\r\n    routes.push(createRouteStep(\"5:00 PM\", \"Start at Phoenix Mall\"))\r\n    routes.push(createRouteStep(\"6:30 PM\", \"Move to FC Road\"))\r\n    routes.push(createRouteStep(\"8:00 PM\", \"Continue to Koregaon Park\"))\r\n    routes.push(createRouteStep(\"10:00 PM\", \"End route at E-Square\"))\r\n    return routes\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center items-center h-screen\">Loading campaign data...</div>\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500 p-4\">Error loading campaign data: {error.message}</div>\r\n  }\r\n\r\n  if (!campaignData) {\r\n    return <div>No campaign data available.</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-10 px-4 max-w-7xl\">\r\n      <h1 className=\"text-4xl font-bold mb-2\">Billboard Campaign Results</h1>\r\n      <p className=\"text-xl text-muted-foreground mb-8\">\r\n        Optimized mobile billboard campaign for {campaignData.businessName}\r\n      </p>\r\n\r\n      {/* Campaign Overview Card */}\r\n      <Card className=\"mb-8\">\r\n        <div className=\"bg-primary/5 border-b p-6\">\r\n          <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n            <Target className=\"h-5 w-5\" />\r\n            Campaign Overview\r\n          </h2>\r\n          <p className=\"text-sm text-muted-foreground\">Key details about your mobile billboard campaign</p>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"text-sm font-medium text-muted-foreground\">Business</div>\r\n              <div className=\"text-lg font-semibold\">{campaignData.businessName}</div>\r\n              <div className=\"text-sm\">{campaignData.businessType}</div>\r\n            </div>\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"text-sm font-medium text-muted-foreground\">Target Audience</div>\r\n              <div className=\"text-lg font-semibold\">{campaignData.targetAudience}</div>\r\n              <div className=\"text-sm\">{campaignData.campaignType}</div>\r\n            </div>\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"text-sm font-medium text-muted-foreground\">Campaign Details</div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <MapPin className=\"h-4 w-4 text-muted-foreground\" />\r\n                <span>{campaignData.location}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n                <span>{campaignData.duration}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n                <span>â‚¹{campaignData.budget}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Main Content Tabs */}\r\n      <Tabs defaultValue=\"locations\" className=\"w-full\">\r\n        <div className=\"grid grid-cols-3 mb-8\">\r\n          <button\r\n            className=\"py-2 px-4 text-center hover:bg-gray-100 border-b-2 border-primary\"\r\n            onClick={() => document.getElementById(\"locations\").scrollIntoView({ behavior: \"smooth\" })}\r\n          >\r\n            <MapPin className=\"h-4 w-4 mr-2 inline\" />\r\n            Best Locations\r\n          </button>\r\n          <button\r\n            className=\"py-2 px-4 text-center hover:bg-gray-100\"\r\n            onClick={() => document.getElementById(\"timing\").scrollIntoView({ behavior: \"smooth\" })}\r\n          >\r\n            <Clock className=\"h-4 w-4 mr-2 inline\" />\r\n            Optimal Timing\r\n          </button>\r\n          <button\r\n            className=\"py-2 px-4 text-center hover:bg-gray-100\"\r\n            onClick={() => document.getElementById(\"route\").scrollIntoView({ behavior: \"smooth\" })}\r\n          >\r\n            <RouteIcon className=\"h-4 w-4 mr-2 inline\" />\r\n            Route Plan\r\n          </button>\r\n        </div>\r\n\r\n        {/* Locations Section */}\r\n        <div id=\"locations\" className=\"space-y-6 mb-12\">\r\n          <Card>\r\n            <div className=\"p-6 border-b\">\r\n              <h2 className=\"text-xl font-semibold\">Recommended Locations in {campaignData.location}</h2>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                High-traffic areas where your target audience ({campaignData.targetAudience}) is most likely to be\r\n                present\r\n              </p>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-6\">\r\n                  {campaignData.locations.map((location, index) => (\r\n                    <div key={index} className=\"flex gap-4\">\r\n                      <div className=\"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\">\r\n                        <MapPin className=\"h-5 w-5 text-primary\" />\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-semibold\">{location.name}</h3>\r\n                        <p className=\"text-sm text-muted-foreground\">{location.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <CampaignMap locations={campaignData.locations} />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Timing Section */}\r\n        <div id=\"timing\" className=\"space-y-6 mb-12\">\r\n          <Card>\r\n            <div className=\"p-6 border-b\">\r\n              <h2 className=\"text-xl font-semibold\">Optimal Timing for Maximum Visibility</h2>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Strategic time slots to reach your target audience throughout the day\r\n              </p>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-6\">\r\n                  {campaignData.timings.map((timing, index) => (\r\n                    <div key={index} className=\"flex gap-4\">\r\n                      <div className=\"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\">\r\n                        <Clock className=\"h-5 w-5 text-primary\" />\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-semibold\">{timing.time}</h3>\r\n                        <p className=\"text-sm text-muted-foreground\">{timing.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"rounded-lg overflow-hidden border bg-card text-card-foreground shadow\">\r\n                  <div className=\"p-6\">\r\n                    <h3 className=\"font-semibold mb-4\">Daily Visibility Heatmap</h3>\r\n                    <div className=\"space-y-4\">\r\n                      {campaignData.visibilityHeatmap.map((item, index) => (\r\n                        <div key={index} className=\"space-y-2\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-sm font-medium\">{item.time}</span>\r\n                            <span className=\"text-sm text-muted-foreground\">{item.visibility}% Visibility</span>\r\n                          </div>\r\n                          <div className=\"h-2 w-full bg-secondary rounded-full overflow-hidden\">\r\n                            <div className=\"h-full bg-primary rounded-full\" style={{ width: `${item.visibility}%` }} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Route Plan Section */}\r\n        <div id=\"route\" className=\"space-y-6\">\r\n          <Card>\r\n            <div className=\"p-6 border-b\">\r\n              <h2 className=\"text-xl font-semibold\">7-Day Route Plan</h2>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Optimized route to maximize visibility while staying within budget\r\n              </p>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-6\">\r\n                  <div>\r\n                    <h3 className=\"font-semibold mb-3\">Days 1-3: Morning to Midday Focus</h3>\r\n                    <RouteTimeline routes={campaignData.routePlanDays13} />\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold mb-3\">Days 4-5: Midday to Evening Focus</h3>\r\n                    <RouteTimeline routes={campaignData.routePlanDays45} />\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold mb-3\">Days 6-7: Evening to Late Night Focus</h3>\r\n                    <RouteTimeline routes={campaignData.routePlanDays67} />\r\n                  </div>\r\n                </div>\r\n                <BudgetBreakdown budget={campaignData.budget} />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </Tabs>\r\n\r\n      {/* Debug Panel to inspect the API response */}\r\n      <DebugPanel data={campaignData} />\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}