{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\MobileBillBoardProject\\\\NewFrontend\\\\frontend\\\\src\\\\components\\\\CampaignMap.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CampaignMap({\n  locations\n}) {\n  _s();\n  const [isMounted, setIsMounted] = useState(false);\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  if (!isMounted) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-[400px] rounded-lg border bg-card flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-muted-foreground\",\n        children: \"Loading map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Use the actual locations data passed from the parent component\n  const locationData = locations || [{\n    name: \"Default Location 1\",\n    description: \"No locations provided\"\n  }, {\n    name: \"Default Location 2\",\n    description: \"No locations provided\"\n  }];\n\n  // Extract location names for display\n  const locationNames = locationData.map(loc => loc.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[400px] rounded-lg border bg-card overflow-hidden relative\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-[#f0f0f0] flex flex-col items-center justify-center p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold text-lg\",\n          children: \"Mobile Billboard Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-muted-foreground\",\n          children: \"Interactive map showing optimal locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative w-full max-w-md h-64\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute inset-0 bg-[#e0e0e0] rounded-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-1/2 left-0 right-0 h-1 bg-[#c0c0c0]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute top-0 bottom-0 left-1/2 w-1 bg-[#c0c0c0]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), locationData.map((location, index) => {\n            // Calculate positions based on index to spread markers around\n            const positions = [{\n              top: \"20%\",\n              left: \"30%\"\n            }, {\n              top: \"40%\",\n              left: \"60%\"\n            }, {\n              top: \"70%\",\n              left: \"40%\"\n            }, {\n              top: \"30%\",\n              left: \"80%\"\n            }, {\n              top: \"50%\",\n              left: \"70%\"\n            }, {\n              top: \"10%\",\n              left: \"50%\"\n            }, {\n              top: \"80%\",\n              left: \"70%\"\n            }, {\n              top: \"25%\",\n              left: \"15%\"\n            }];\n\n            // Use modulo to cycle through positions if we have more locations than positions\n            const position = positions[index % positions.length];\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute w-3 h-3 bg-primary rounded-full\",\n              style: {\n                top: position.top,\n                left: position.left\n              },\n              title: location.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-sm text-center text-muted-foreground\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-medium mb-2\",\n          children: \"Locations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside\",\n          children: locationNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"text-xs\",\n            children: name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 text-xs\",\n          children: \"Note: This is a simplified representation. In a real implementation, this would be an interactive map with precise routes and locations.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(CampaignMap, \"h7njlszr1nxUzrk46zHyBTBrvgI=\");\n_c = CampaignMap;\nvar _c;\n$RefreshReg$(_c, \"CampaignMap\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","jsxDEV","_jsxDEV","CampaignMap","locations","isMounted","setIsMounted","className","children","fileName","lineNumber","columnNumber","locationData","name","description","locationNames","map","loc","location","index","positions","top","left","position","length","style","title","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/MobileBillBoardProject/NewFrontend/frontend/src/components/CampaignMap.js"],"sourcesContent":["\"use client\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\nexport default function CampaignMap({ locations }) {\r\n  const [isMounted, setIsMounted] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n  }, [])\r\n\r\n  if (!isMounted) {\r\n    return (\r\n      <div className=\"h-[400px] rounded-lg border bg-card flex items-center justify-center\">\r\n        <div className=\"text-muted-foreground\">Loading map...</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // Use the actual locations data passed from the parent component\r\n  const locationData = locations || [\r\n    { name: \"Default Location 1\", description: \"No locations provided\" },\r\n    { name: \"Default Location 2\", description: \"No locations provided\" },\r\n  ]\r\n\r\n  // Extract location names for display\r\n  const locationNames = locationData.map((loc) => loc.name)\r\n\r\n  return (\r\n    <div className=\"h-[400px] rounded-lg border bg-card overflow-hidden relative\">\r\n      {/* This is a placeholder for a real map. In a production app, you would integrate with a mapping library */}\r\n      <div className=\"absolute inset-0 bg-[#f0f0f0] flex flex-col items-center justify-center p-4\">\r\n        <div className=\"text-center mb-4\">\r\n          <h3 className=\"font-semibold text-lg\">Mobile Billboard Route</h3>\r\n          <p className=\"text-sm text-muted-foreground\">Interactive map showing optimal locations</p>\r\n        </div>\r\n\r\n        <div className=\"relative w-full max-w-md h-64\">\r\n          {/* Simplified map representation */}\r\n          <div className=\"absolute inset-0 bg-[#e0e0e0] rounded-lg\">\r\n            {/* Main roads */}\r\n            <div className=\"absolute top-1/2 left-0 right-0 h-1 bg-[#c0c0c0]\"></div>\r\n            <div className=\"absolute top-0 bottom-0 left-1/2 w-1 bg-[#c0c0c0]\"></div>\r\n\r\n            {/* Location markers - dynamically positioned based on index */}\r\n            {locationData.map((location, index) => {\r\n              // Calculate positions based on index to spread markers around\r\n              const positions = [\r\n                { top: \"20%\", left: \"30%\" },\r\n                { top: \"40%\", left: \"60%\" },\r\n                { top: \"70%\", left: \"40%\" },\r\n                { top: \"30%\", left: \"80%\" },\r\n                { top: \"50%\", left: \"70%\" },\r\n                { top: \"10%\", left: \"50%\" },\r\n                { top: \"80%\", left: \"70%\" },\r\n                { top: \"25%\", left: \"15%\" },\r\n              ]\r\n\r\n              // Use modulo to cycle through positions if we have more locations than positions\r\n              const position = positions[index % positions.length]\r\n\r\n              return (\r\n                <div\r\n                  key={index}\r\n                  className=\"absolute w-3 h-3 bg-primary rounded-full\"\r\n                  style={{ top: position.top, left: position.left }}\r\n                  title={location.name}\r\n                ></div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mt-4 text-sm text-center text-muted-foreground\">\r\n          <div className=\"font-medium mb-2\">Locations:</div>\r\n          <ul className=\"list-disc list-inside\">\r\n            {locationNames.map((name, index) => (\r\n              <li key={index} className=\"text-xs\">\r\n                {name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <div className=\"mt-2 text-xs\">\r\n            Note: This is a simplified representation. In a real implementation, this would be an interactive map with\r\n            precise routes and locations.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}