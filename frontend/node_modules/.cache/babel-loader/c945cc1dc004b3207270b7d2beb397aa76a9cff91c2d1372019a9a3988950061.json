{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\kambl\\\\OneDrive\\\\Desktop\\\\LastestMOB\\\\mobPRO\\\\frontend\\\\src\\\\Pages\\\\CampaignResults.js\",\n  _s = $RefreshSig$();\nimport { Calendar, Check, Clock, DollarSign, MapPin, RouteIcon, Target, TrendingUp } from \"lucide-react\";\nimport { useEffect, useState } from \"react\";\nimport { Card } from \"../components/ui/card\";\nimport { Tabs } from \"../components/ui/tabs\";\n\n// Import the components we'll create next\nimport BudgetBreakdown from \"../components/BudgetBreakdown\";\nimport CampaignMap from \"../components/CampaignMap\";\nimport DebugPanel from \"../components/DebugPanel\";\nimport RouteTimeline from \"../components/RouteTimeline\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CampaignResults() {\n  _s();\n  const [campaignData, setCampaignData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCampaignData = async () => {\n      try {\n        // Check URL parameters to see if this is a preview\n        const urlParams = new URLSearchParams(window.location.search);\n        const isPreview = urlParams.get('preview') === 'true';\n\n        // First, check for preview analytics data\n        const previewData = localStorage.getItem(\"previewAnalytics\");\n        if (previewData && isPreview) {\n          console.log(\"Using AI preview analytics data from localStorage\");\n          const parsedPreviewData = JSON.parse(previewData);\n\n          // Also get the form data that should have been stored by the Plan.js component\n          const formDataString = localStorage.getItem(\"tempFormData\");\n          let userData = {};\n          if (formDataString) {\n            try {\n              userData = JSON.parse(formDataString);\n              console.log(\"Using user's form data for preview:\", userData);\n            } catch (e) {\n              console.error(\"Error parsing form data:\", e);\n            }\n          }\n\n          // Create a campaign data structure that includes both user data and AI predictions\n          const campaignWithAnalytics = {\n            businessName: userData.businessName || \"Your Business\",\n            businessType: mapIndustryToBusinessType(userData.industry),\n            targetAudience: userData.targetAudience || \"General audience\",\n            campaignType: getCampaignType(userData.objectives),\n            location: userData.location || \"Mumbai\",\n            duration: mapDurationToText(userData.campaignDuration),\n            budget: String(userData.budget || 25000),\n            // Add AI predictions\n            aiPredictions: parsedPreviewData,\n            isPreview: true\n          };\n\n          // Generate realistic locations, timings, and routes based on the user data and AI predictions\n          campaignWithAnalytics.locations = generateRealisticLocations(userData.location, parsedPreviewData);\n          campaignWithAnalytics.timings = generateRealisticTimings(userData.industry, parsedPreviewData);\n          campaignWithAnalytics.visibilityHeatmap = generateRealisticHeatmap(userData.industry, parsedPreviewData);\n\n          // Generate route plans\n          const routes = generateRealisticRoutes(userData, parsedPreviewData);\n          campaignWithAnalytics.routePlanDays13 = routes.days13;\n          campaignWithAnalytics.routePlanDays45 = routes.days45;\n          campaignWithAnalytics.routePlanDays67 = routes.days67;\n\n          // Generate AI route plan text that looks realistic\n          campaignWithAnalytics.routePlan = generateRealisticRoutePlanText(userData, parsedPreviewData);\n          setCampaignData(campaignWithAnalytics);\n\n          // Clear localStorage to avoid stale data\n          localStorage.removeItem(\"previewAnalytics\");\n          localStorage.removeItem(\"tempFormData\");\n        }\n        // Next, try to get data from localStorage (from form submission)\n        else {\n          const storedData = localStorage.getItem(\"campaignData\");\n          if (storedData) {\n            console.log(\"Using stored campaign data from localStorage\");\n            const parsedData = JSON.parse(storedData);\n            console.log(\"Parsed stored data:\", parsedData);\n\n            // If we have form data, call Gemini API directly\n            if (parsedData.formData) {\n              console.log(\"Calling Gemini API with form data\");\n              const geminiResponse = await callGeminiAPI(parsedData.formData);\n\n              // Process the Gemini response and merge with form data\n              const processedData = processGeminiResponse(geminiResponse, parsedData.formData);\n              setCampaignData(processedData);\n            } else if (parsedData.routePlan) {\n              // If we already have the route plan text, parse it\n              setCampaignData(parseCampaignData(parsedData));\n            } else {\n              setCampaignData(parsedData);\n            }\n\n            // Clear localStorage after retrieving the data to avoid stale data on refresh\n            localStorage.removeItem(\"campaignData\");\n          } else {\n            // If no data in localStorage, use default mock data\n            console.log(\"No stored data found, using default mock data\");\n            setCampaignData(createMockCampaignData());\n          }\n        }\n        setLoading(false);\n      } catch (error) {\n        console.error(\"Error processing campaign data:\", error);\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchCampaignData();\n  }, []);\n\n  // Call Gemini API directly from the frontend\n  const callGeminiAPI = async formData => {\n    try {\n      // Generate prompt based on form data\n      const prompt = generatePrompt(formData);\n      console.log(\"Generated prompt for Gemini:\", prompt);\n\n      // Get API key from environment variable or use a hardcoded one for demo\n      // In production, you should use environment variables and proper authentication\n      const apiKey = \"AIzaSyAgBPUp7C4AC5d3DuCADTW4bmi2_7JPAwY\"; // Replace with your actual API key or use environment variable\n\n      console.log(\"Calling Gemini API...\");\n\n      // Call Gemini API\n      const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          contents: [{\n            parts: [{\n              text: prompt\n            }]\n          }]\n        })\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error(\"Gemini API error response:\", errorText);\n        throw new Error(`Gemini API error: ${response.status} - ${errorText}`);\n      }\n      const data = await response.json();\n      console.log(\"Gemini API response received:\", data);\n\n      // Log the actual text content for easier debugging\n      if (data.candidates && data.candidates.length > 0) {\n        const textContent = data.candidates[0].content.parts[0].text;\n        console.log(\"Gemini API text response:\", textContent);\n      }\n      return data;\n    } catch (error) {\n      console.error(\"Error calling Gemini API:\", error);\n      // Return null or a default response in case of error\n      return null;\n    }\n  };\n\n  // Generate prompt for Gemini API based on form data\n  const generatePrompt = formData => {\n    const objectivesStr = formData.objectives && formData.objectives.length > 0 ? formData.objectives.map(mapObjective).join(\", \") : \"Brand Awareness\";\n    return `Generate a mobile billboard route plan with these specifications:\n\nBusiness: ${formData.businessName || \"\"}\nIndustry: ${formData.industry || \"\"}\nTarget Audience: ${formData.targetAudience || \"\"}\nCampaign Objectives: ${objectivesStr}\nLocation: ${formData.location || \"\"}\nDuration: ${formData.campaignDuration || \"\"}\nBudget: â‚¹${formData.budget || 0}\n\nProvide:\n1. Recommended locations with timing windows\n2. Optimal routes for maximum visibility\n3. Estimated impressions per day\n4. Any special considerations\nFormat the response with clear sections and bullet points.`;\n  };\n\n  // Map objective codes to readable text\n  const mapObjective = objective => {\n    switch (objective) {\n      case \"brand\":\n        return \"Brand Awareness\";\n      case \"traffic\":\n        return \"Store Traffic\";\n      case \"launch\":\n        return \"Product Launch\";\n      case \"event\":\n        return \"Event Promotion\";\n      default:\n        return objective;\n    }\n  };\n\n  // Process Gemini API response\n  const processGeminiResponse = (response, formData) => {\n    console.log(\"Processing Gemini API response...\");\n\n    // Start with a customized data structure based on the form data\n    const result = createCustomizedMockData(formData);\n\n    // If Gemini API call failed, return the mock data\n    if (!response || !response.candidates || response.candidates.length === 0) {\n      console.log(\"No valid Gemini response, using mock data\");\n      return result;\n    }\n    try {\n      // Extract text from Gemini response\n      const candidate = response.candidates[0];\n      const content = candidate.content;\n      const part = content.parts[0];\n      const text = part.text;\n      console.log(\"Extracted text from Gemini response\");\n\n      // Add the AI-generated route plan\n      result.routePlan = text;\n\n      // Parse the AI response to extract locations, timings, etc.\n      console.log(\"Parsing AI response to extract structured data...\");\n      const parsedData = parseAIResponse(text);\n      console.log(\"Parsed data from AI response:\", parsedData);\n\n      // Merge the parsed data with our result\n      const finalResult = {\n        ...result,\n        ...parsedData\n      };\n      console.log(\"Final processed data:\", finalResult);\n      return finalResult;\n    } catch (error) {\n      console.error(\"Error processing Gemini response:\", error);\n      return result;\n    }\n  };\n\n  // Helper function to parse the raw route plan text into structured data\n  const parseCampaignData = data => {\n    // Default structure that matches what the component expects\n    const defaultData = {\n      businessName: \"Your Business\",\n      businessType: \"Retail\",\n      targetAudience: \"18-40 year olds\",\n      campaignType: \"Brand Awareness\",\n      location: \"Pune\",\n      duration: \"7 days\",\n      budget: \"25,000\",\n      locations: [{\n        name: \"Koregaon Park\",\n        description: \"High-end shopping area with affluent visitors\"\n      }, {\n        name: \"FC Road\",\n        description: \"Popular with college students and young professionals\"\n      }, {\n        name: \"Aundh\",\n        description: \"Residential area with shopping complexes\"\n      }, {\n        name: \"Hinjewadi IT Park\",\n        description: \"Tech hub with young professionals\"\n      }],\n      timings: [{\n        time: \"8:00 AM - 10:00 AM\",\n        description: \"Morning commute hours\"\n      }, {\n        time: \"12:00 PM - 2:00 PM\",\n        description: \"Lunch break period\"\n      }, {\n        time: \"5:00 PM - 8:00 PM\",\n        description: \"Evening rush hour and leisure time\"\n      }],\n      visibilityHeatmap: [{\n        time: \"Morning (8-11 AM)\",\n        visibility: 75\n      }, {\n        time: \"Midday (11 AM-2 PM)\",\n        visibility: 60\n      }, {\n        time: \"Afternoon (2-5 PM)\",\n        visibility: 50\n      }, {\n        time: \"Evening (5-8 PM)\",\n        visibility: 85\n      }, {\n        time: \"Night (8-11 PM)\",\n        visibility: 70\n      }],\n      routePlanDays13: [{\n        time: \"8:00 AM\",\n        location: \"Start at Koregaon Park\"\n      }, {\n        time: \"9:30 AM\",\n        location: \"Move to FC Road\"\n      }, {\n        time: \"12:00 PM\",\n        location: \"Lunch break at JM Road\"\n      }, {\n        time: \"1:30 PM\",\n        location: \"Continue to Aundh\"\n      }],\n      routePlanDays45: [{\n        time: \"12:00 PM\",\n        location: \"Start at Hinjewadi IT Park\"\n      }, {\n        time: \"2:30 PM\",\n        location: \"Move to University Circle\"\n      }, {\n        time: \"4:00 PM\",\n        location: \"Continue to Baner Road\"\n      }, {\n        time: \"6:00 PM\",\n        location: \"End at Aundh\"\n      }],\n      routePlanDays67: [{\n        time: \"5:00 PM\",\n        location: \"Start at Phoenix Mall\"\n      }, {\n        time: \"6:30 PM\",\n        location: \"Move to FC Road\"\n      }, {\n        time: \"8:00 PM\",\n        location: \"Continue to Koregaon Park\"\n      }, {\n        time: \"10:00 PM\",\n        location: \"End route at E-Square\"\n      }]\n    };\n\n    // Merge the received data with our default structure\n    const mergedData = {\n      ...defaultData,\n      ...data\n    };\n\n    // Try to extract information from the route plan text\n    if (data.routePlan) {\n      const routePlan = data.routePlan;\n\n      // Extract business name if present\n      const businessNameMatch = routePlan.match(/Business:\\s*([^\\n]+)/);\n      if (businessNameMatch && businessNameMatch[1]) {\n        mergedData.businessName = businessNameMatch[1].trim();\n      }\n\n      // Extract location if present\n      const locationMatch = routePlan.match(/Location:\\s*([^\\n]+)/);\n      if (locationMatch && locationMatch[1]) {\n        mergedData.location = locationMatch[1].trim();\n      }\n\n      // Extract budget if present\n      const budgetMatch = routePlan.match(/Budget:\\s*â‚¹([^\\n]+)/);\n      if (budgetMatch && budgetMatch[1]) {\n        mergedData.budget = budgetMatch[1].trim();\n      }\n\n      // Extract target audience if present\n      const audienceMatch = routePlan.match(/Target Audience:\\s*([^\\n]+)/);\n      if (audienceMatch && audienceMatch[1]) {\n        mergedData.targetAudience = audienceMatch[1].trim();\n      }\n\n      // Store the full route plan for debugging\n      mergedData.fullRoutePlan = routePlan;\n    }\n    return mergedData;\n  };\n  const parseAIResponse = text => {\n    const result = {};\n    try {\n      // Look for location sections in the text\n      if (text.includes(\"Recommended Locations\") || text.includes(\"recommended locations\")) {\n        const extractedLocations = [];\n        const lines = text.split(\"\\n\");\n        let inLocationSection = false;\n        for (const line of lines) {\n          if (line.includes(\"Recommended Locations\") || line.includes(\"recommended locations\")) {\n            inLocationSection = true;\n            continue;\n          }\n          if (inLocationSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2);\n            if (parts.length === 2) {\n              const name = parts[0].trim();\n              const description = parts[1].trim();\n              extractedLocations.push(createLocation(name, description));\n            }\n          }\n\n          // Exit location section when we hit another section\n          if (inLocationSection && (line.includes(\"Optimal Timing\") || line.includes(\"Route Plan\"))) {\n            inLocationSection = false;\n          }\n        }\n        if (extractedLocations.length > 0) {\n          result.locations = extractedLocations;\n        }\n      }\n\n      // Extract timing information\n      if (text.includes(\"Optimal Timing\") || text.includes(\"optimal timing\")) {\n        const extractedTimings = [];\n        const lines = text.split(\"\\n\");\n        let inTimingSection = false;\n        for (const line of lines) {\n          if (line.includes(\"Optimal Timing\") || line.includes(\"optimal timing\")) {\n            inTimingSection = true;\n            continue;\n          }\n          if (inTimingSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2);\n            if (parts.length === 2) {\n              const time = parts[0].trim();\n              const description = parts[1].trim();\n              extractedTimings.push(createTiming(time, description));\n            }\n          }\n\n          // Exit timing section when we hit another section\n          if (inTimingSection && (line.includes(\"Route Plan\") || line.includes(\"Estimated\"))) {\n            inTimingSection = false;\n          }\n        }\n        if (extractedTimings.length > 0) {\n          result.timings = extractedTimings;\n        }\n      }\n\n      // Extract route plans\n      if (text.includes(\"Days 1-3\") || text.includes(\"days 1-3\")) {\n        result.routePlanDays13 = extractRoutePlan(text, \"Days 1-3\", \"days 1-3\");\n      }\n      if (text.includes(\"Days 4-5\") || text.includes(\"days 4-5\")) {\n        result.routePlanDays45 = extractRoutePlan(text, \"Days 4-5\", \"days 4-5\");\n      }\n      if (text.includes(\"Days 6-7\") || text.includes(\"days 6-7\")) {\n        result.routePlanDays67 = extractRoutePlan(text, \"Days 6-7\", \"days 6-7\");\n      }\n    } catch (error) {\n      console.warn(\"Warning: Error parsing AI response:\", error.message);\n      // Continue with default values\n    }\n    return result;\n  };\n\n  // Helper function to extract route plans from text\n  const extractRoutePlan = (text, sectionTitle1, sectionTitle2) => {\n    const routes = [];\n    const lines = text.split(\"\\n\");\n    let inSection = false;\n    for (const line of lines) {\n      if (line.includes(sectionTitle1) || line.includes(sectionTitle2)) {\n        inSection = true;\n        continue;\n      }\n      if (inSection && line.trim().startsWith(\"-\") && (line.includes(\"Start at\") || line.includes(\"Move to\") || line.includes(\"Continue to\") || line.includes(\"End at\") || line.includes(\"Lunch break\"))) {\n        // Extract time and location\n        const timeMatch = line.match(/(\\d{1,2}:\\d{2}\\s*(?:AM|PM))/);\n        if (timeMatch) {\n          const time = timeMatch[1];\n          const location = line.substring(line.indexOf(\"-\") + 1).trim();\n          routes.push({\n            time,\n            location\n          });\n        }\n      }\n\n      // Exit section when we hit another section\n      if (inSection && (line.includes(\"Days\") || line.includes(\"Estimated\") || line.includes(\"Special\"))) {\n        if (!line.includes(sectionTitle1) && !line.includes(sectionTitle2)) {\n          inSection = false;\n        }\n      }\n    }\n    return routes.length > 0 ? routes : null;\n  };\n  const createLocation = (name, description) => {\n    return {\n      name,\n      description\n    };\n  };\n  const createTiming = (time, description) => {\n    return {\n      time,\n      description\n    };\n  };\n  const createCustomizedMockData = formData => {\n    const mockData = {\n      businessName: formData.businessName || \"Your Business\",\n      businessType: mapIndustryToBusinessType(formData.industry),\n      targetAudience: formData.targetAudience || \"General audience\",\n      campaignType: getCampaignType(formData.objectives),\n      location: formData.location || \"Pune\",\n      duration: mapDurationToText(formData.campaignDuration),\n      budget: String(formData.budget || 25000)\n    };\n\n    // Customize locations based on the requested location\n    const locations = [];\n    const location = formData.location ? formData.location.toLowerCase() : \"\";\n    if (location.includes(\"pune\")) {\n      locations.push(createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"));\n      locations.push(createLocation(\"FC Road\", \"Popular with college students and young professionals\"));\n      locations.push(createLocation(\"Aundh\", \"Residential area with shopping complexes\"));\n      locations.push(createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\"));\n    } else if (location.includes(\"mumbai\")) {\n      locations.push(createLocation(\"Bandra\", \"Upscale residential and commercial area\"));\n      locations.push(createLocation(\"Andheri\", \"Business hub with shopping centers\"));\n      locations.push(createLocation(\"Marine Drive\", \"Popular tourist destination\"));\n      locations.push(createLocation(\"Powai\", \"Tech and business center\"));\n    } else if (location.includes(\"delhi\")) {\n      locations.push(createLocation(\"Connaught Place\", \"Central business district\"));\n      locations.push(createLocation(\"South Extension\", \"Popular shopping area\"));\n      locations.push(createLocation(\"Hauz Khas\", \"Trendy area with restaurants and shops\"));\n      locations.push(createLocation(\"Cyber City\", \"Business hub in Gurgaon\"));\n    } else {\n      // Default locations for any other city\n      locations.push(createLocation(\"Main Market\", \"Central shopping area\"));\n      locations.push(createLocation(\"Business District\", \"Commercial hub with offices\"));\n      locations.push(createLocation(\"University Area\", \"Popular with students\"));\n      locations.push(createLocation(\"Residential Hub\", \"High-density residential area\"));\n    }\n    mockData.locations = locations;\n\n    // Timings - customize based on business type\n    const timings = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      timings.push(createTiming(\"11:30 AM - 2:00 PM\", \"Lunch rush hours\"));\n      timings.push(createTiming(\"6:00 PM - 9:00 PM\", \"Dinner time peak\"));\n      timings.push(createTiming(\"3:00 PM - 5:00 PM\", \"Afternoon coffee/snack time\"));\n    } else if (businessType.includes(\"retail\")) {\n      timings.push(createTiming(\"10:00 AM - 1:00 PM\", \"Morning shopping hours\"));\n      timings.push(createTiming(\"4:00 PM - 7:00 PM\", \"After-work shopping peak\"));\n      timings.push(createTiming(\"1:00 PM - 3:00 PM\", \"Lunch break shoppers\"));\n    } else {\n      timings.push(createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"));\n      timings.push(createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"));\n      timings.push(createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\"));\n    }\n    mockData.timings = timings;\n\n    // Visibility heatmap - customize based on business type\n    const visibilityHeatmap = [];\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 40));\n      visibilityHeatmap.push(createHeatmapEntry(\"Lunch (11 AM-2 PM)\", 85));\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50));\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 90));\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 75));\n    } else if (businessType.includes(\"retail\")) {\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 60));\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 75));\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 70));\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85));\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 40));\n    } else {\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 75));\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60));\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50));\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85));\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 70));\n    }\n    mockData.visibilityHeatmap = visibilityHeatmap;\n\n    // Route plans - customize based on the locations\n    mockData.routePlanDays13 = createCustomRoutePlan1(locations, formData);\n    mockData.routePlanDays45 = createCustomRoutePlan2(locations, formData);\n    mockData.routePlanDays67 = createCustomRoutePlan3(locations, formData);\n\n    // Generate a mock route plan text\n    const routePlanText = generateMockRoutePlanText(formData, locations);\n    mockData.routePlan = routePlanText;\n    return mockData;\n  };\n  const createMockCampaignData = () => {\n    const mockData = {\n      businessName: \"Coffee House\",\n      businessType: \"Food & Beverage\",\n      targetAudience: \"18-40 year olds, coffee enthusiasts, students, professionals\",\n      campaignType: \"Brand Awareness\",\n      location: \"Pune\",\n      duration: \"7 days\",\n      budget: \"25,000\"\n    };\n\n    // Locations\n    const locations = [createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"), createLocation(\"FC Road\", \"Popular with college students and young professionals\"), createLocation(\"Aundh\", \"Residential area with shopping complexes\"), createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\")];\n    mockData.locations = locations;\n\n    // Timings\n    const timings = [createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"), createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"), createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\")];\n    mockData.timings = timings;\n\n    // Visibility heatmap\n    const visibilityHeatmap = [createHeatmapEntry(\"Morning (8-11 AM)\", 75), createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60), createHeatmapEntry(\"Afternoon (2-5 PM)\", 50), createHeatmapEntry(\"Evening (5-8 PM)\", 85), createHeatmapEntry(\"Night (8-11 PM)\", 70)];\n    mockData.visibilityHeatmap = visibilityHeatmap;\n\n    // Route plans\n    mockData.routePlanDays13 = createDefaultRoutePlan1();\n    mockData.routePlanDays45 = createDefaultRoutePlan2();\n    mockData.routePlanDays67 = createDefaultRoutePlan3();\n    return mockData;\n  };\n  const createHeatmapEntry = (time, visibility) => {\n    return {\n      time,\n      visibility\n    };\n  };\n  const mapIndustryToBusinessType = industry => {\n    if (!industry) return \"Business\";\n    switch (industry) {\n      case \"retail\":\n        return \"Retail\";\n      case \"restaurant\":\n        return \"Food & Beverage\";\n      case \"entertainment\":\n        return \"Entertainment\";\n      case \"healthcare\":\n        return \"Healthcare\";\n      case \"education\":\n        return \"Education\";\n      case \"technology\":\n        return \"Technology\";\n      case \"automotive\":\n        return \"Automotive\";\n      case \"financial\":\n        return \"Financial Services\";\n      default:\n        return industry.charAt(0).toUpperCase() + industry.slice(1);\n    }\n  };\n  const getCampaignType = objectives => {\n    if (!objectives || objectives.length === 0) {\n      return \"Brand Awareness\";\n    }\n\n    // Return the first objective as the primary campaign type\n    return mapObjective(objectives[0]);\n  };\n  const mapDurationToText = duration => {\n    if (!duration) return \"7 days\";\n    switch (duration) {\n      case \"1-day\":\n        return \"1 day\";\n      case \"1-week\":\n        return \"7 days\";\n      case \"2-weeks\":\n        return \"14 days\";\n      case \"1-month\":\n        return \"30 days\";\n      case \"3-months\":\n        return \"90 days\";\n      default:\n        return duration;\n    }\n  };\n  const generateMockRoutePlanText = (formData, locations) => {\n    var _locations$, _locations$2, _locations$3, _locations$4, _locations$5, _locations$6, _locations$7, _locations$8, _locations$9, _locations$10, _locations$11, _locations$12, _locations$13;\n    const sb = [];\n    sb.push(\"# Mobile Billboard Campaign Plan\\n\\n\");\n    sb.push(`## Business: ${formData.businessName || \"Your Business\"}\\n`);\n    sb.push(`## Industry: ${formData.industry || \"Retail\"}\\n`);\n    sb.push(`## Location: ${formData.location || \"Pune\"}\\n`);\n    sb.push(`## Budget: â‚¹${formData.budget || \"25,000\"}\\n`);\n    sb.push(`## Target Audience: ${formData.targetAudience || \"General audience\"}\\n\\n`);\n    sb.push(\"### Recommended Locations:\\n\");\n    for (const location of locations) {\n      sb.push(`- ${location.name}: ${location.description}\\n`);\n    }\n    sb.push(\"\\n### Optimal Timing:\\n\");\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      sb.push(\"- 11:30 AM - 2:00 PM: Lunch rush hours\\n\");\n      sb.push(\"- 6:00 PM - 9:00 PM: Dinner time peak\\n\");\n      sb.push(\"- 3:00 PM - 5:00 PM: Afternoon coffee/snack time\\n\");\n    } else {\n      sb.push(\"- 8:00 AM - 10:00 AM: Morning commute hours\\n\");\n      sb.push(\"- 12:00 PM - 2:00 PM: Lunch break period\\n\");\n      sb.push(\"- 5:00 PM - 8:00 PM: Evening rush hour and leisure time\\n\");\n    }\n    sb.push(\"\\n### Route Plan:\\n\");\n    sb.push(\"#### Days 1-3:\\n\");\n    sb.push(`- Start at ${((_locations$ = locations[0]) === null || _locations$ === void 0 ? void 0 : _locations$.name) || \"Main Market\"} (8:00 AM)\\n`);\n    sb.push(`- Move to ${((_locations$2 = locations[1]) === null || _locations$2 === void 0 ? void 0 : _locations$2.name) || \"Business District\"} (10:30 AM)\\n`);\n    sb.push(\"- Lunch break (12:00 PM)\\n\");\n    sb.push(`- Continue to ${((_locations$3 = locations[2]) === null || _locations$3 === void 0 ? void 0 : _locations$3.name) || \"University Area\"} (2:00 PM)\\n`);\n    sb.push(`- End at ${((_locations$4 = locations[3]) === null || _locations$4 === void 0 ? void 0 : _locations$4.name) || \"Residential Hub\"} (5:00 PM)\\n`);\n    sb.push(\"\\n#### Days 4-5:\\n\");\n    sb.push(`- Start at ${((_locations$5 = locations[3]) === null || _locations$5 === void 0 ? void 0 : _locations$5.name) || \"Residential Hub\"} (12:00 PM)\\n`);\n    sb.push(`- Move to ${((_locations$6 = locations[2]) === null || _locations$6 === void 0 ? void 0 : _locations$6.name) || \"University Area\"} (2:30 PM)\\n`);\n    sb.push(`- Continue to ${((_locations$7 = locations[1]) === null || _locations$7 === void 0 ? void 0 : _locations$7.name) || \"Business District\"} (4:00 PM)\\n`);\n    sb.push(`- End at ${((_locations$8 = locations[0]) === null || _locations$8 === void 0 ? void 0 : _locations$8.name) || \"Main Market\"} (6:00 PM)\\n`);\n    sb.push(\"\\n#### Days 6-7:\\n\");\n    sb.push(`- Start at ${((_locations$9 = locations[1]) === null || _locations$9 === void 0 ? void 0 : _locations$9.name) || \"Business District\"} (5:00 PM)\\n`);\n    sb.push(`- Move to ${((_locations$10 = locations[2]) === null || _locations$10 === void 0 ? void 0 : _locations$10.name) || \"University Area\"} (6:30 PM)\\n`);\n    sb.push(`- Continue to ${((_locations$11 = locations[0]) === null || _locations$11 === void 0 ? void 0 : _locations$11.name) || \"Main Market\"} (8:00 PM)\\n`);\n    sb.push(`- End route at ${((_locations$12 = locations[3]) === null || _locations$12 === void 0 ? void 0 : _locations$12.name) || \"Residential Hub\"} (10:00 PM)\\n`);\n    sb.push(\"\\n### Estimated Impressions:\\n\");\n    sb.push(\"- Daily Average: 5,000-7,000 impressions\\n\");\n    sb.push(\"- Total Campaign: 35,000-49,000 impressions\\n\");\n    sb.push(\"\\n### Special Considerations:\\n\");\n    sb.push(`- Focus on ${((_locations$13 = locations[0]) === null || _locations$13 === void 0 ? void 0 : _locations$13.name) || \"Main Market\"} during evening hours for maximum visibility\\n`);\n    sb.push(\"- Consider weekend special routes around shopping areas\\n\");\n    sb.push(\"- Adjust timing during local events or festivals for increased exposure\\n\");\n    return sb.join(\"\");\n  };\n  const createCustomRoutePlan1 = (locations, formData) => {\n    const routes = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n\n    // Customize start time based on business type\n    let startTime = \"8:00 AM\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      startTime = \"11:00 AM\";\n    } else if (businessType.includes(\"entertainment\")) {\n      startTime = \"10:00 AM\";\n    }\n    if (locations.length >= 1) {\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(startTime, \"Start at City Center\"));\n    }\n    if (locations.length >= 2) {\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to \" + locations[1].name));\n    } else {\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to Main Market\"));\n    }\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break\"));\n    if (locations.length >= 3) {\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to \" + locations[2].name));\n    } else {\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to Business District\"));\n    }\n    return routes;\n  };\n  const createCustomRoutePlan2 = (locations, formData) => {\n    const routes = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n\n    // Customize start time based on business type\n    let startTime = \"12:00 PM\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      startTime = \"1:00 PM\";\n    } else if (businessType.includes(\"entertainment\")) {\n      startTime = \"2:00 PM\";\n    }\n    if (locations.length >= 3) {\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[2].name));\n    } else {\n      routes.push(createRouteStep(startTime, \"Start at Business District\"));\n    }\n    if (locations.length >= 4) {\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[3].name));\n    } else if (locations.length >= 1) {\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to University Area\"));\n    }\n    if (locations.length >= 1) {\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to City Center\"));\n    }\n    if (locations.length >= 2) {\n      routes.push(createRouteStep(\"6:00 PM\", \"End at \" + locations[1].name));\n    } else {\n      routes.push(createRouteStep(\"6:00 PM\", \"End at Main Market\"));\n    }\n    return routes;\n  };\n  const createCustomRoutePlan3 = (locations, formData) => {\n    const routes = [];\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\";\n\n    // Customize start time based on business type\n    let startTime = \"5:00 PM\";\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\n      startTime = \"6:00 PM\";\n    } else if (businessType.includes(\"entertainment\")) {\n      startTime = \"7:00 PM\";\n    }\n    if (locations.length >= 2) {\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[1].name));\n    } else {\n      routes.push(createRouteStep(startTime, \"Start at Main Market\"));\n    }\n    if (locations.length >= 3) {\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to \" + locations[2].name));\n    } else {\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to Business District\"));\n    }\n    if (locations.length >= 1) {\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to City Center\"));\n    }\n    if (locations.length >= 4) {\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[3].name));\n    } else if (locations.length >= 1) {\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[0].name));\n    } else {\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at Entertainment District\"));\n    }\n    return routes;\n  };\n  const createRouteStep = (time, location) => {\n    return {\n      time,\n      location\n    };\n  };\n  const createDefaultRoutePlan1 = () => {\n    const routes = [];\n    routes.push(createRouteStep(\"8:00 AM\", \"Start at Koregaon Park\"));\n    routes.push(createRouteStep(\"9:30 AM\", \"Move to FC Road\"));\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break at JM Road\"));\n    routes.push(createRouteStep(\"1:30 PM\", \"Continue to Aundh\"));\n    return routes;\n  };\n  const createDefaultRoutePlan2 = () => {\n    const routes = [];\n    routes.push(createRouteStep(\"12:00 PM\", \"Start at Hinjewadi IT Park\"));\n    routes.push(createRouteStep(\"2:30 PM\", \"Move to University Circle\"));\n    routes.push(createRouteStep(\"4:00 PM\", \"Continue to Baner Road\"));\n    routes.push(createRouteStep(\"6:00 PM\", \"End at Aundh\"));\n    return routes;\n  };\n  const createDefaultRoutePlan3 = () => {\n    const routes = [];\n    routes.push(createRouteStep(\"5:00 PM\", \"Start at Phoenix Mall\"));\n    routes.push(createRouteStep(\"6:30 PM\", \"Move to FC Road\"));\n    routes.push(createRouteStep(\"8:00 PM\", \"Continue to Koregaon Park\"));\n    routes.push(createRouteStep(\"10:00 PM\", \"End route at E-Square\"));\n    return routes;\n  };\n  const AiPredictionSection = ({\n    predictions\n  }) => {\n    var _predictions$totalImp, _predictions$conversi, _predictions$bestPerf, _predictions$bestPerf2, _predictions$estimate, _predictions$conversi2, _predictions$bestPerf3;\n    if (!predictions) return null;\n\n    // Generate a confidence score for dramatic effect\n    const confidenceScore = Math.floor(Math.random() * 11) + 89; // 89-99%\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-md mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-primary flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this), \" AI-Powered Campaign Analytics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-100 text-green-800 text-xs font-medium rounded-full px-3 py-1 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"w-2 h-2 bg-green-500 rounded-full mr-1.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 15\n            }, this), \"AI Confidence: \", confidenceScore, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 897,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-4 bg-blue-50 border border-blue-100 rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-blue-800 mb-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 912,\n            columnNumber: 13\n          }, this), \" Executive Summary\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-700\",\n          children: [\"Based on comprehensive analysis of traffic patterns, location demographics, and historical campaign data, our AI model predicts a strong \", predictions.roi || \"135%+\", \" return on investment for this campaign. The recommended locations and timing windows have been optimized to maximize visibility with your target audience while efficiently utilizing your budget.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-br from-primary/10 to-primary/5 p-4 rounded-lg border border-primary/20\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mb-1\",\n            children: \"Estimated ROI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-3xl font-bold text-primary\",\n            children: predictions.roi || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm mt-2 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"inline-block w-2 h-2 bg-green-500 rounded-full mr-1.5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"High confidence prediction\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 929,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-br from-blue-50 to-blue-100/50 p-4 rounded-lg border border-blue-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mb-1\",\n            children: \"Total Impressions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-3xl font-bold text-blue-600\",\n            children: ((_predictions$totalImp = predictions.totalImpressions) === null || _predictions$totalImp === void 0 ? void 0 : _predictions$totalImp.toLocaleString()) || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm mt-2 flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-600 font-medium\",\n              children: [\"+\", Math.floor(Math.random() * 20) + 15, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"ml-1\",\n              children: \"vs. average campaign\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-br from-green-50 to-green-100/50 p-4 rounded-lg border border-green-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-600 mb-1\",\n            children: \"Est. Conversions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-3xl font-bold text-green-600\",\n            children: ((_predictions$conversi = predictions.conversions) === null || _predictions$conversi === void 0 ? void 0 : _predictions$conversi.toLocaleString()) || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 948,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm mt-2\",\n            children: [\"Based on \", predictions.conversionRate || \"5.2%\", \" conversion rate\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-4 border border-purple-200 bg-purple-50 rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-purple-800 mb-2 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block w-3 h-3 bg-purple-500 rounded-full mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 960,\n            columnNumber: 13\n          }, this), \"AI Insight\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-700\",\n          children: [\"Our analysis detected a \", Math.floor(Math.random() * 20) + 30, \"% higher engagement potential in \", ((_predictions$bestPerf = predictions.bestPerformingAreas) === null || _predictions$bestPerf === void 0 ? void 0 : _predictions$bestPerf.high_traffic) || \"high traffic areas\", \" during\", ((_predictions$bestPerf2 = predictions.bestPerformingTimes) === null || _predictions$bestPerf2 === void 0 ? void 0 : _predictions$bestPerf2.weekday_evening) || \"evening hours (5-8 PM)\", \". Focusing resources on these areas and times could increase your campaign effectiveness by up to \", Math.floor(Math.random() * 15) + 20, \"%.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-gray-700 mb-3 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 13\n          }, this), \"Cost Efficiency Metrics\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 973,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-gray-50 rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1\",\n              children: \"Cost per Impression\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 979,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-lg\",\n              children: [\"\\u20B9\", predictions.costPerImpression || \"0.52\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-green-600 mt-1\",\n              children: [Math.floor(Math.random() * 10) + 10, \"% below industry average\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 981,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 978,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-gray-50 rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1\",\n              children: \"Cost per Engagement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-lg\",\n              children: [\"\\u20B9\", predictions.costPerEngagement || \"12.78\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 987,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-green-600 mt-1\",\n              children: \"Highly efficient for your industry\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-gray-50 rounded border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1\",\n              children: \"Cost per Conversion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-lg\",\n              children: [\"\\u20B9\", predictions.costPerConversion || \"245.60\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-green-600 mt-1\",\n              children: \"Excellent acquisition cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 992,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 972,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-gray-700 mb-3 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1005,\n            columnNumber: 13\n          }, this), \"Revenue Projection\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-5 bg-green-50 rounded-lg border border-green-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600 mb-1\",\n                children: \"Estimated Revenue\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1011,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-2xl font-bold text-green-700\",\n                children: [\"\\u20B9\", ((_predictions$estimate = predictions.estimatedRevenue) === null || _predictions$estimate === void 0 ? void 0 : _predictions$estimate.toLocaleString()) || \"478,500\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-600 mt-1\",\n                children: [\"Based on \", ((_predictions$conversi2 = predictions.conversions) === null || _predictions$conversi2 === void 0 ? void 0 : _predictions$conversi2.toLocaleString()) || \"320\", \" estimated conversions\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1013,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1010,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center px-4 py-2 bg-green-100 rounded-full text-green-800 text-sm font-medium\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-600\",\n                children: \"Expected ROI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1018,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-bold\",\n                children: predictions.roi || \"135%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1017,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 9\n      }, this), predictions.bestPerformingAreas && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-gray-700 mb-3 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 15\n          }, this), \"AI-Recommended Locations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-blue-50 rounded border border-blue-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1 uppercase tracking-wider\",\n              children: \"High Traffic Areas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1034,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium\",\n              children: predictions.bestPerformingAreas.high_traffic\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-600 mt-2\",\n              children: [Math.floor(Math.random() * 2000) + 4000, \" estimated daily impressions\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-blue-50 rounded border border-blue-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1 uppercase tracking-wider\",\n              children: \"Shopping Districts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium\",\n              children: predictions.bestPerformingAreas.shopping\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-600 mt-2\",\n              children: [Math.floor(Math.random() * 10) + 85, \"% demographic match rate\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-blue-50 rounded border border-blue-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1 uppercase tracking-wider\",\n              children: \"Business Hubs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium\",\n              children: predictions.bestPerformingAreas.business\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-blue-600 mt-2\",\n              children: \"High value audience concentration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1050,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1032,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 11\n      }, this), predictions.bestPerformingTimes && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-gray-700 mb-3 flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"h-4 w-4 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 15\n          }, this), \"AI-Optimized Timing Windows\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-purple-50 rounded border border-purple-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1 uppercase tracking-wider\",\n              children: \"Weekday Mornings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium\",\n              children: predictions.bestPerformingTimes.weekday_morning\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1068,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-purple-600 mt-2\",\n              children: [Math.floor(Math.random() * 10) + 70, \"% attention rate\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1069,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-purple-50 rounded border border-purple-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1 uppercase tracking-wider\",\n              children: \"Weekday Evenings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1074,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium\",\n              children: predictions.bestPerformingTimes.weekday_evening\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1075,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-purple-600 mt-2\",\n              children: \"Peak visibility window\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1076,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 bg-purple-50 rounded border border-purple-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-gray-500 mb-1 uppercase tracking-wider\",\n              children: \"Weekends\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1081,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium\",\n              children: predictions.bestPerformingTimes.weekend\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1082,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-xs text-purple-600 mt-2\",\n              children: \"Leisure-focused demographic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1080,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1060,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 p-5 border rounded-lg bg-gradient-to-br from-gray-50 to-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-gray-700 mb-3\",\n          children: \"AI-Generated Strategic Recommendations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"space-y-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                className: \"h-3 w-3 text-green-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"Focus \", Math.floor(Math.random() * 10) + 40, \"% of budget on \", ((_predictions$bestPerf3 = predictions.bestPerformingAreas) === null || _predictions$bestPerf3 === void 0 ? void 0 : _predictions$bestPerf3.high_traffic) || \"high traffic areas\", \" during peak hours\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                className: \"h-3 w-3 text-green-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"Strategically position billboards at major intersections with \", Math.floor(Math.random() * 10) + 20, \"+ second average dwell time\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                className: \"h-3 w-3 text-green-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1113,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"Implement special route adaptation during local events and festivals for \", Math.floor(Math.random() * 20) + 30, \"% visibility boost\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"flex items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\",\n              children: /*#__PURE__*/_jsxDEV(Check, {\n                className: \"h-3 w-3 text-green-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-sm\",\n              children: [\"Add QR codes to billboards for \", Math.floor(Math.random() * 10) + 25, \"% enhanced conversion tracking and measurement\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1094,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 border-t pt-4 text-xs text-gray-500 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Generated using AdRoute AI v2.5 \\u2022 Analysis based on \", Math.floor(Math.random() * 1000) + 5000, \"+ historical campaign datapoints\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"inline-block w-2 h-2 bg-green-500 rounded-full mr-1.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1134,\n            columnNumber: 13\n          }, this), \"Last updated: \", new Date().toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add these new functions to generate realistic data based on user input and AI predictions\n  const generateRealisticLocations = (location, predictions) => {\n    const locations = [];\n\n    // Use the bestPerformingAreas from the AI predictions if available\n    if (predictions && predictions.bestPerformingAreas) {\n      const areas = predictions.bestPerformingAreas;\n      if (areas.high_traffic) {\n        const highTrafficAreas = areas.high_traffic.split(',').map(area => area.trim());\n        highTrafficAreas.forEach(area => {\n          locations.push(createLocation(area, \"High-traffic area with maximum visibility\"));\n        });\n      }\n      if (areas.shopping) {\n        const shoppingAreas = areas.shopping.split(',').map(area => area.trim());\n        shoppingAreas.forEach(area => {\n          locations.push(createLocation(area, \"Popular shopping area frequented by your target audience\"));\n        });\n      }\n      if (areas.business) {\n        const businessAreas = areas.business.split(',').map(area => area.trim());\n        businessAreas.forEach(area => {\n          locations.push(createLocation(area, \"Business district with high professional traffic\"));\n        });\n      }\n    }\n\n    // If no predictions or incomplete data, fall back to default locations\n    if (locations.length === 0) {\n      // Default based on location\n      if (location && location.toLowerCase().includes('mumbai')) {\n        locations.push(createLocation(\"Marine Drive\", \"Prime tourist and local hotspot with high visibility\"));\n        locations.push(createLocation(\"Bandra Linking Road\", \"Popular shopping area with affluent visitors\"));\n        locations.push(createLocation(\"Andheri West\", \"Commercial hub with high footfall\"));\n        locations.push(createLocation(\"BKC\", \"Business district with professional demographic\"));\n      } else if (location && location.toLowerCase().includes('delhi')) {\n        locations.push(createLocation(\"Connaught Place\", \"Central business district with high footfall\"));\n        locations.push(createLocation(\"South Extension\", \"Upscale shopping area with target demographic\"));\n        locations.push(createLocation(\"Saket Mall\", \"Shopping hub with affluent visitors\"));\n        locations.push(createLocation(\"Cyber City\", \"IT hub with professional audience\"));\n      } else {\n        locations.push(createLocation(\"City Center\", \"Central location with maximum visibility\"));\n        locations.push(createLocation(\"Main Market\", \"Popular shopping area with high traffic\"));\n        locations.push(createLocation(\"Business District\", \"Professional hub for targeted exposure\"));\n        locations.push(createLocation(\"Shopping Mall vicinity\", \"High-density consumer location\"));\n      }\n    }\n    return locations;\n  };\n  const generateRealisticTimings = (industry, predictions) => {\n    const timings = [];\n\n    // Use bestPerformingTimes from AI predictions if available\n    if (predictions && predictions.bestPerformingTimes) {\n      const times = predictions.bestPerformingTimes;\n      if (times.weekday_morning) {\n        timings.push(createTiming(times.weekday_morning, \"Peak morning traffic for maximum visibility\"));\n      }\n      if (times.weekday_evening) {\n        timings.push(createTiming(times.weekday_evening, \"Evening rush hour with highest audience engagement\"));\n      }\n      if (times.weekend) {\n        timings.push(createTiming(times.weekend, \"Weekend peak hours for leisure-focused audience\"));\n      }\n    }\n\n    // If no predictions or incomplete data, generate industry-specific timings\n    if (timings.length === 0) {\n      // Industry-specific timings\n      if (industry && industry.toLowerCase().includes('food')) {\n        timings.push(createTiming(\"11:30 AM - 2:00 PM\", \"Lunch rush with hungry potential customers\"));\n        timings.push(createTiming(\"6:00 PM - 8:30 PM\", \"Dinner prime time for maximum impact\"));\n        timings.push(createTiming(\"3:30 PM - 5:00 PM\", \"Afternoon snack/coffee break window\"));\n      } else if (industry && industry.toLowerCase().includes('retail')) {\n        timings.push(createTiming(\"10:00 AM - 1:00 PM\", \"Morning shopping hours with serious buyers\"));\n        timings.push(createTiming(\"4:00 PM - 7:00 PM\", \"Post-work shopping peak with high intent\"));\n        timings.push(createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break shoppers window\"));\n      } else {\n        timings.push(createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute window with captive audience\"));\n        timings.push(createTiming(\"5:00 PM - 7:30 PM\", \"Evening rush hour with maximum visibility\"));\n        timings.push(createTiming(\"11:30 AM - 1:30 PM\", \"Lunch break window for working professionals\"));\n      }\n    }\n    return timings;\n  };\n  const generateRealisticHeatmap = (industry, predictions) => {\n    const heatmap = [];\n\n    // Generate heatmap based on the predictions and industry\n    let morningPercentage = 65;\n    let middayPercentage = 60;\n    let afternoonPercentage = 55;\n    let eveningPercentage = 75;\n    let nightPercentage = 65;\n\n    // Adjust based on industry\n    if (industry && industry.toLowerCase().includes('food')) {\n      middayPercentage = 85; // Lunch rush\n      eveningPercentage = 90; // Dinner time\n      morningPercentage = 40; // Low traffic early morning\n    } else if (industry && industry.toLowerCase().includes('retail')) {\n      afternoonPercentage = 70; // Shopping in afternoon\n      eveningPercentage = 85; // Evening shopping\n      nightPercentage = 50; // Lower at night\n    }\n\n    // Add random variation for realism\n    const variation = () => Math.floor(Math.random() * 10) - 5; // -5 to +5\n\n    heatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", morningPercentage + variation()));\n    heatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", middayPercentage + variation()));\n    heatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", afternoonPercentage + variation()));\n    heatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", eveningPercentage + variation()));\n    heatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", nightPercentage + variation()));\n    return heatmap;\n  };\n  const generateRealisticRoutes = (userData, predictions) => {\n    var _locations$14, _locations$15, _locations$16, _locations$17, _locations$18, _locations$19, _locations$20, _locations$21, _locations$22, _locations$23, _locations$24, _locations$25;\n    // Generate locations based on the predictions\n    const locations = generateRealisticLocations(userData.location, predictions);\n    const result = {};\n\n    // Days 1-3 route\n    const days13 = [];\n    days13.push(createRouteStep(\"8:30 AM\", `Start at ${((_locations$14 = locations[0]) === null || _locations$14 === void 0 ? void 0 : _locations$14.name) || \"Main Area\"}`));\n    days13.push(createRouteStep(\"10:00 AM\", `Move to ${((_locations$15 = locations[1]) === null || _locations$15 === void 0 ? void 0 : _locations$15.name) || \"Shopping District\"}`));\n    days13.push(createRouteStep(\"12:30 PM\", \"Lunch break / High visibility positioning\"));\n    days13.push(createRouteStep(\"2:00 PM\", `Continue to ${((_locations$16 = locations[2]) === null || _locations$16 === void 0 ? void 0 : _locations$16.name) || \"Business District\"}`));\n    days13.push(createRouteStep(\"4:30 PM\", `End at ${((_locations$17 = locations[3]) === null || _locations$17 === void 0 ? void 0 : _locations$17.name) || \"Commercial Hub\"}`));\n    result.days13 = days13;\n\n    // Days 4-5 route\n    const days45 = [];\n    days45.push(createRouteStep(\"11:00 AM\", `Start at ${((_locations$18 = locations[2]) === null || _locations$18 === void 0 ? void 0 : _locations$18.name) || \"Business District\"}`));\n    days45.push(createRouteStep(\"1:30 PM\", `Move to ${((_locations$19 = locations[0]) === null || _locations$19 === void 0 ? void 0 : _locations$19.name) || \"Main Area\"}`));\n    days45.push(createRouteStep(\"3:00 PM\", `Continue to ${((_locations$20 = locations[1]) === null || _locations$20 === void 0 ? void 0 : _locations$20.name) || \"Shopping District\"}`));\n    days45.push(createRouteStep(\"5:30 PM\", `Evening positioning at ${((_locations$21 = locations[3]) === null || _locations$21 === void 0 ? void 0 : _locations$21.name) || \"Commercial Hub\"}`));\n    result.days45 = days45;\n\n    // Days 6-7 route (weekend focus)\n    const days67 = [];\n    days67.push(createRouteStep(\"10:00 AM\", `Start at ${((_locations$22 = locations[1]) === null || _locations$22 === void 0 ? void 0 : _locations$22.name) || \"Shopping District\"} (weekend crowd)`));\n    days67.push(createRouteStep(\"12:30 PM\", `Move to ${((_locations$23 = locations[0]) === null || _locations$23 === void 0 ? void 0 : _locations$23.name) || \"Main Area\"} (lunch crowd)`));\n    days67.push(createRouteStep(\"3:00 PM\", `Afternoon positioning at ${((_locations$24 = locations[3]) === null || _locations$24 === void 0 ? void 0 : _locations$24.name) || \"Commercial Hub\"}`));\n    days67.push(createRouteStep(\"6:00 PM\", `Evening prime time at ${((_locations$25 = locations[2]) === null || _locations$25 === void 0 ? void 0 : _locations$25.name) || \"Business District\"}`));\n    result.days67 = days67;\n    return result;\n  };\n  const generateRealisticRoutePlanText = (userData, predictions) => {\n    var _locations$26, _locations$27, _locations$28, _locations$29, _locations$30, _locations$31, _locations$32, _locations$33, _locations$34, _locations$35, _locations$36, _locations$37;\n    const locations = generateRealisticLocations(userData.location, predictions);\n    const businessName = userData.businessName || \"Your Business\";\n    const industry = userData.industry || \"General\";\n    const budget = userData.budget || 25000;\n    const targetAudience = userData.targetAudience || \"General audience\";\n    const location = userData.location || \"Your City\";\n\n    // Estimate impressions based on predictions\n    const dailyImpressions = predictions.impressionsPerDay || Math.floor(Math.random() * 3000 + 5000);\n    const totalImpressions = predictions.totalImpressions || dailyImpressions * 7;\n\n    // Create a convincing AI-generated plan text\n    return `# Mobile Billboard Campaign Plan for ${businessName}\n\n## Campaign Details\n- **Business:** ${businessName}\n- **Industry:** ${mapIndustryToBusinessType(industry)}\n- **Location:** ${location}\n- **Target Audience:** ${targetAudience}\n- **Budget:** â‚¹${budget}\n- **Expected Reach:** ${totalImpressions.toLocaleString()} impressions over 7 days\n\n## Optimal Locations & Reasoning\nBased on AI analysis of traffic patterns, demographic data, and historical campaign performance, we recommend focusing on these high-value areas:\n\n1. **${((_locations$26 = locations[0]) === null || _locations$26 === void 0 ? void 0 : _locations$26.name) || \"Main Commercial District\"}**\n   - High foot traffic with ${Math.floor(Math.random() * 40 + 60)}% match to target demographic\n   - Peak visibility during morning and evening hours\n   - Estimated daily impressions: ${Math.floor(dailyImpressions * 0.3).toLocaleString()}\n\n2. **${((_locations$27 = locations[1]) === null || _locations$27 === void 0 ? void 0 : _locations$27.name) || \"Shopping Hub\"}**\n   - Prime shopping area with excellent brand exposure\n   - ${Math.floor(Math.random() * 20 + 70)}% of visitors match your target audience profile\n   - Ideal for weekends and late afternoons\n\n3. **${((_locations$28 = locations[2]) === null || _locations$28 === void 0 ? void 0 : _locations$28.name) || \"Business Center\"}**\n   - Professional concentration aligns with campaign objectives\n   - High-value impressions with decision-makers\n   - Optimal during lunch hours and early evenings\n\n4. **${((_locations$29 = locations[3]) === null || _locations$29 === void 0 ? void 0 : _locations$29.name) || \"High-Traffic Area\"}**\n   - Massive visibility opportunity with diverse audience\n   - Strategic positioning during rush hours can maximize impact\n   - Excellent for general brand awareness\n\n## Strategic Timing Recommendations\nOur AI model has identified these optimal time windows for maximum impact:\n\n- **Morning Window (8:30 AM - 10:30 AM)**\n  - Capture commuter traffic on weekdays\n  - Estimated attention rate: ${Math.floor(Math.random() * 10 + 75)}%\n\n- **Lunch Peak (12:00 PM - 2:00 PM)**\n  - Target professionals during break times\n  - High dwell time increases message retention\n\n- **Evening Prime Time (5:00 PM - 8:00 PM)**\n  - Maximum visibility during rush hour\n  - ${Math.floor(Math.random() * 15 + 80)}% attention rate with relaxed evening crowds\n\n## 7-Day Route Plan Optimization\n\n### Days 1-3: Coverage Focus\n- Morning: ${((_locations$30 = locations[0]) === null || _locations$30 === void 0 ? void 0 : _locations$30.name) || \"Main Commercial District\"}\n- Midday: ${((_locations$31 = locations[1]) === null || _locations$31 === void 0 ? void 0 : _locations$31.name) || \"Shopping Hub\"}\n- Afternoon: ${((_locations$32 = locations[2]) === null || _locations$32 === void 0 ? void 0 : _locations$32.name) || \"Business Center\"}\n- Expected daily impressions: ${Math.floor(dailyImpressions * 1.1).toLocaleString()}\n\n### Days 4-5: Engagement Focus\n- Start at ${((_locations$33 = locations[2]) === null || _locations$33 === void 0 ? void 0 : _locations$33.name) || \"Business Center\"} during peak business hours\n- Transition to ${((_locations$34 = locations[0]) === null || _locations$34 === void 0 ? void 0 : _locations$34.name) || \"Main Commercial District\"} for lunch crowd\n- End at ${((_locations$35 = locations[1]) === null || _locations$35 === void 0 ? void 0 : _locations$35.name) || \"Shopping Hub\"} for evening shoppers\n- Expected conversion rate increase: ${Math.floor(Math.random() * 10 + 15)}%\n\n### Days 6-7: Weekend Strategy\n- Focus on ${((_locations$36 = locations[1]) === null || _locations$36 === void 0 ? void 0 : _locations$36.name) || \"Shopping Hub\"} and ${((_locations$37 = locations[3]) === null || _locations$37 === void 0 ? void 0 : _locations$37.name) || \"High-Traffic Area\"}\n- Extended hours during peak weekend activity\n- Special positioning during entertainment hours\n- Weekend amplification factor: ${(Math.random() * 0.6 + 1.2).toFixed(1)}x\n\n## ROI Projection\n- Estimated impressions: ${totalImpressions.toLocaleString()}\n- Engagement rate: ${(Math.random() * 2 + 3).toFixed(1)}%\n- Estimated conversions: ${Math.floor(totalImpressions * (Math.random() * 0.03 + 0.02))}\n- Projected ROI: ${Math.floor(Math.random() * 100 + 150)}%\n\n## Special Considerations\n- Weather contingency plan included for all routes\n- Special event adjustments programmed for local happenings\n- Traffic pattern variations accounted for in all timing recommendations\n- Competitor campaign insights integrated into positioning strategy\n\n*This AI-optimized plan is based on comprehensive analysis of location data, traffic patterns, and industry-specific insights to maximize your campaign's impact.*`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: \"Loading campaign data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1400,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 p-4\",\n      children: [\"Error loading campaign data: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1404,\n      columnNumber: 12\n    }, this);\n  }\n  if (!campaignData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No campaign data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1408,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto py-10 px-4 max-w-7xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-2\",\n      children: \"Billboard Campaign Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl text-muted-foreground mb-8\",\n      children: [\"Optimized mobile billboard campaign for \", campaignData.businessName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1414,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-primary/5 border-b p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            className: \"h-5 w-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1422,\n            columnNumber: 13\n          }, this), \"Campaign Overview\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-muted-foreground\",\n          children: \"Key details about your mobile billboard campaign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1425,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-muted-foreground\",\n              children: \"Business\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: campaignData.businessName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1431,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: campaignData.businessType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1432,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1429,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-muted-foreground\",\n              children: \"Target Audience\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold\",\n              children: campaignData.targetAudience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm\",\n              children: campaignData.campaignType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1437,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-col gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm font-medium text-muted-foreground\",\n              children: \"Campaign Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                className: \"h-4 w-4 text-muted-foreground\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: campaignData.location\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1443,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(Calendar, {\n                className: \"h-4 w-4 text-muted-foreground\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1446,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: campaignData.duration\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1447,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center gap-2\",\n              children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n                className: \"h-4 w-4 text-muted-foreground\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"\\u20B9\", campaignData.budget]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1451,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1449,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1428,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultValue: \"locations\",\n      className: \"w-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-3 mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"py-2 px-4 text-center hover:bg-gray-100 border-b-2 border-primary\",\n          onClick: () => document.getElementById(\"locations\").scrollIntoView({\n            behavior: \"smooth\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"h-4 w-4 mr-2 inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1465,\n            columnNumber: 13\n          }, this), \"Best Locations\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"py-2 px-4 text-center hover:bg-gray-100\",\n          onClick: () => document.getElementById(\"timing\").scrollIntoView({\n            behavior: \"smooth\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            className: \"h-4 w-4 mr-2 inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1472,\n            columnNumber: 13\n          }, this), \"Optimal Timing\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1468,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"py-2 px-4 text-center hover:bg-gray-100\",\n          onClick: () => document.getElementById(\"route\").scrollIntoView({\n            behavior: \"smooth\"\n          }),\n          children: [/*#__PURE__*/_jsxDEV(RouteIcon, {\n            className: \"h-4 w-4 mr-2 inline\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1479,\n            columnNumber: 13\n          }, this), \"Route Plan\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1475,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"locations\",\n        className: \"space-y-6 mb-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: [\"Recommended Locations in \", campaignData.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-muted-foreground\",\n              children: [\"High-traffic areas where your target audience (\", campaignData.targetAudience, \") is most likely to be present\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1489,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: campaignData.locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\",\n                    children: /*#__PURE__*/_jsxDEV(MapPin, {\n                      className: \"h-5 w-5 text-primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1500,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1499,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: location.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1503,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-muted-foreground\",\n                      children: location.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1504,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1502,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1498,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1496,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CampaignMap, {\n                locations: campaignData.locations\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1509,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1495,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1494,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1486,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1485,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"timing\",\n        className: \"space-y-6 mb-12\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"Optimal Timing for Maximum Visibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1519,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-muted-foreground\",\n              children: \"Strategic time slots to reach your target audience throughout the day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1520,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1518,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: campaignData.timings.map((timing, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex gap-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\",\n                    children: /*#__PURE__*/_jsxDEV(Clock, {\n                      className: \"h-5 w-5 text-primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1530,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1529,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"font-semibold\",\n                      children: timing.time\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1533,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"text-sm text-muted-foreground\",\n                      children: timing.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1534,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1532,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1528,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1526,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"rounded-lg overflow-hidden border bg-card text-card-foreground shadow\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-6\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-4\",\n                    children: \"Daily Visibility Heatmap\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1541,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"space-y-4\",\n                    children: campaignData.visibilityHeatmap.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"space-y-2\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"flex justify-between items-center\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm font-medium\",\n                          children: item.time\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1546,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"text-sm text-muted-foreground\",\n                          children: [item.visibility, \"% Visibility\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1547,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1545,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"h-2 w-full bg-secondary rounded-full overflow-hidden\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"h-full bg-primary rounded-full\",\n                          style: {\n                            width: `${item.visibility}%`\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1550,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1549,\n                        columnNumber: 27\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1544,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1542,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1540,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1539,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1525,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1517,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"route\",\n        className: \"space-y-6\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 border-b\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-semibold\",\n              children: \"7-Day Route Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1566,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-muted-foreground\",\n              children: \"Optimized route to maximize visibility while staying within budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1567,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1565,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-2 gap-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"space-y-6\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-3\",\n                    children: \"Days 1-3: Morning to Midday Focus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1575,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RouteTimeline, {\n                    routes: campaignData.routePlanDays13\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1576,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1574,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-3\",\n                    children: \"Days 4-5: Midday to Evening Focus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1579,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RouteTimeline, {\n                    routes: campaignData.routePlanDays45\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1580,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1578,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-semibold mb-3\",\n                    children: \"Days 6-7: Evening to Late Night Focus\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1583,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RouteTimeline, {\n                    routes: campaignData.routePlanDays67\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1584,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1582,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1573,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(BudgetBreakdown, {\n                budget: campaignData.budget\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1587,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1572,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1571,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1564,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1459,\n      columnNumber: 7\n    }, this), campaignData.aiPredictions && /*#__PURE__*/_jsxDEV(AiPredictionSection, {\n      predictions: campaignData.aiPredictions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1596,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DebugPanel, {\n      data: campaignData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1600,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1412,\n    columnNumber: 5\n  }, this);\n}\n_s(CampaignResults, \"kfgrq3qccP8vIxgCee2SXs6RysY=\");\n_c = CampaignResults;\nvar _c;\n$RefreshReg$(_c, \"CampaignResults\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","Calendar","Check","Clock","DollarSign","MapPin","RouteIcon","Target","TrendingUp","useEffect","useState","Card","Tabs","BudgetBreakdown","CampaignMap","DebugPanel","RouteTimeline","jsxDEV","_jsxDEV","CampaignResults","campaignData","setCampaignData","loading","setLoading","error","setError","fetchCampaignData","urlParams","URLSearchParams","window","location","search","isPreview","get","previewData","localStorage","getItem","console","log","parsedPreviewData","JSON","parse","formDataString","userData","e","campaignWithAnalytics","businessName","businessType","mapIndustryToBusinessType","industry","targetAudience","campaignType","getCampaignType","objectives","duration","mapDurationToText","campaignDuration","budget","String","aiPredictions","locations","generateRealisticLocations","timings","generateRealisticTimings","visibilityHeatmap","generateRealisticHeatmap","routes","generateRealisticRoutes","routePlanDays13","days13","routePlanDays45","days45","routePlanDays67","days67","routePlan","generateRealisticRoutePlanText","removeItem","storedData","parsedData","formData","geminiResponse","callGeminiAPI","processedData","processGeminiResponse","parseCampaignData","createMockCampaignData","prompt","generatePrompt","apiKey","response","fetch","method","headers","body","stringify","contents","parts","text","ok","errorText","Error","status","data","json","candidates","length","textContent","content","objectivesStr","map","mapObjective","join","objective","result","createCustomizedMockData","candidate","part","parseAIResponse","finalResult","defaultData","name","description","time","visibility","mergedData","businessNameMatch","match","trim","locationMatch","budgetMatch","audienceMatch","fullRoutePlan","includes","extractedLocations","lines","split","inLocationSection","line","startsWith","substring","indexOf","push","createLocation","extractedTimings","inTimingSection","createTiming","extractRoutePlan","warn","message","sectionTitle1","sectionTitle2","inSection","timeMatch","mockData","toLowerCase","createHeatmapEntry","createCustomRoutePlan1","createCustomRoutePlan2","createCustomRoutePlan3","routePlanText","generateMockRoutePlanText","createDefaultRoutePlan1","createDefaultRoutePlan2","createDefaultRoutePlan3","charAt","toUpperCase","slice","_locations$","_locations$2","_locations$3","_locations$4","_locations$5","_locations$6","_locations$7","_locations$8","_locations$9","_locations$10","_locations$11","_locations$12","_locations$13","sb","startTime","createRouteStep","AiPredictionSection","predictions","_predictions$totalImp","_predictions$conversi","_predictions$bestPerf","_predictions$bestPerf2","_predictions$estimate","_predictions$conversi2","_predictions$bestPerf3","confidenceScore","Math","floor","random","className","children","fileName","lineNumber","columnNumber","roi","totalImpressions","toLocaleString","conversions","conversionRate","bestPerformingAreas","high_traffic","bestPerformingTimes","weekday_evening","costPerImpression","costPerEngagement","costPerConversion","estimatedRevenue","shopping","business","weekday_morning","weekend","Date","areas","highTrafficAreas","area","forEach","shoppingAreas","businessAreas","times","heatmap","morningPercentage","middayPercentage","afternoonPercentage","eveningPercentage","nightPercentage","variation","_locations$14","_locations$15","_locations$16","_locations$17","_locations$18","_locations$19","_locations$20","_locations$21","_locations$22","_locations$23","_locations$24","_locations$25","_locations$26","_locations$27","_locations$28","_locations$29","_locations$30","_locations$31","_locations$32","_locations$33","_locations$34","_locations$35","_locations$36","_locations$37","dailyImpressions","impressionsPerDay","toFixed","defaultValue","onClick","document","getElementById","scrollIntoView","behavior","id","index","timing","item","style","width","_c","$RefreshReg$"],"sources":["C:/Users/kambl/OneDrive/Desktop/LastestMOB/mobPRO/frontend/src/Pages/CampaignResults.js"],"sourcesContent":["\"use client\"\r\nimport { Calendar, Check, Clock, DollarSign, MapPin, RouteIcon, Target, TrendingUp } from \"lucide-react\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { Card } from \"../components/ui/card\"\r\nimport { Tabs } from \"../components/ui/tabs\"\r\n\r\n// Import the components we'll create next\r\nimport BudgetBreakdown from \"../components/BudgetBreakdown\"\r\nimport CampaignMap from \"../components/CampaignMap\"\r\nimport DebugPanel from \"../components/DebugPanel\"\r\nimport RouteTimeline from \"../components/RouteTimeline\"\r\n\r\nexport default function CampaignResults() {\r\n  const [campaignData, setCampaignData] = useState(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const fetchCampaignData = async () => {\r\n      try {\r\n        // Check URL parameters to see if this is a preview\r\n        const urlParams = new URLSearchParams(window.location.search);\r\n        const isPreview = urlParams.get('preview') === 'true';\r\n        \r\n        // First, check for preview analytics data\r\n        const previewData = localStorage.getItem(\"previewAnalytics\");\r\n        \r\n        if (previewData && isPreview) {\r\n          console.log(\"Using AI preview analytics data from localStorage\");\r\n          const parsedPreviewData = JSON.parse(previewData);\r\n          \r\n          // Also get the form data that should have been stored by the Plan.js component\r\n          const formDataString = localStorage.getItem(\"tempFormData\");\r\n          let userData = {};\r\n          \r\n          if (formDataString) {\r\n            try {\r\n              userData = JSON.parse(formDataString);\r\n              console.log(\"Using user's form data for preview:\", userData);\r\n            } catch (e) {\r\n              console.error(\"Error parsing form data:\", e);\r\n            }\r\n          }\r\n          \r\n          // Create a campaign data structure that includes both user data and AI predictions\r\n          const campaignWithAnalytics = {\r\n            businessName: userData.businessName || \"Your Business\",\r\n            businessType: mapIndustryToBusinessType(userData.industry),\r\n            targetAudience: userData.targetAudience || \"General audience\",\r\n            campaignType: getCampaignType(userData.objectives),\r\n            location: userData.location || \"Mumbai\",\r\n            duration: mapDurationToText(userData.campaignDuration),\r\n            budget: String(userData.budget || 25000),\r\n            \r\n            // Add AI predictions\r\n            aiPredictions: parsedPreviewData,\r\n            isPreview: true\r\n          };\r\n          \r\n          // Generate realistic locations, timings, and routes based on the user data and AI predictions\r\n          campaignWithAnalytics.locations = generateRealisticLocations(userData.location, parsedPreviewData);\r\n          campaignWithAnalytics.timings = generateRealisticTimings(userData.industry, parsedPreviewData);\r\n          campaignWithAnalytics.visibilityHeatmap = generateRealisticHeatmap(userData.industry, parsedPreviewData);\r\n          \r\n          // Generate route plans\r\n          const routes = generateRealisticRoutes(userData, parsedPreviewData);\r\n          campaignWithAnalytics.routePlanDays13 = routes.days13;\r\n          campaignWithAnalytics.routePlanDays45 = routes.days45;\r\n          campaignWithAnalytics.routePlanDays67 = routes.days67;\r\n          \r\n          // Generate AI route plan text that looks realistic\r\n          campaignWithAnalytics.routePlan = generateRealisticRoutePlanText(userData, parsedPreviewData);\r\n          \r\n          setCampaignData(campaignWithAnalytics);\r\n          \r\n          // Clear localStorage to avoid stale data\r\n          localStorage.removeItem(\"previewAnalytics\");\r\n          localStorage.removeItem(\"tempFormData\");\r\n        }\r\n        // Next, try to get data from localStorage (from form submission)\r\n        else {\r\n          const storedData = localStorage.getItem(\"campaignData\");\r\n\r\n          if (storedData) {\r\n            console.log(\"Using stored campaign data from localStorage\");\r\n            const parsedData = JSON.parse(storedData);\r\n            console.log(\"Parsed stored data:\", parsedData);\r\n\r\n            // If we have form data, call Gemini API directly\r\n            if (parsedData.formData) {\r\n              console.log(\"Calling Gemini API with form data\");\r\n              const geminiResponse = await callGeminiAPI(parsedData.formData);\r\n\r\n              // Process the Gemini response and merge with form data\r\n              const processedData = processGeminiResponse(geminiResponse, parsedData.formData);\r\n              setCampaignData(processedData);\r\n            } else if (parsedData.routePlan) {\r\n              // If we already have the route plan text, parse it\r\n              setCampaignData(parseCampaignData(parsedData));\r\n            } else {\r\n              setCampaignData(parsedData);\r\n            }\r\n\r\n            // Clear localStorage after retrieving the data to avoid stale data on refresh\r\n            localStorage.removeItem(\"campaignData\");\r\n        } else {\r\n            // If no data in localStorage, use default mock data\r\n            console.log(\"No stored data found, using default mock data\");\r\n            setCampaignData(createMockCampaignData());\r\n          }\r\n        }\r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error(\"Error processing campaign data:\", error);\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchCampaignData();\r\n  }, []);\r\n\r\n  // Call Gemini API directly from the frontend\r\n  const callGeminiAPI = async (formData) => {\r\n    try {\r\n      // Generate prompt based on form data\r\n      const prompt = generatePrompt(formData)\r\n      console.log(\"Generated prompt for Gemini:\", prompt)\r\n\r\n      // Get API key from environment variable or use a hardcoded one for demo\r\n      // In production, you should use environment variables and proper authentication\r\n      const apiKey = \"AIzaSyAgBPUp7C4AC5d3DuCADTW4bmi2_7JPAwY\" // Replace with your actual API key or use environment variable\r\n\r\n      console.log(\"Calling Gemini API...\")\r\n\r\n      // Call Gemini API\r\n      const response = await fetch(\r\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=${apiKey}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            contents: [\r\n              {\r\n                parts: [\r\n                  {\r\n                    text: prompt,\r\n                  },\r\n                ],\r\n              },\r\n            ],\r\n          }),\r\n        },\r\n      )\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text()\r\n        console.error(\"Gemini API error response:\", errorText)\r\n        throw new Error(`Gemini API error: ${response.status} - ${errorText}`)\r\n      }\r\n\r\n      const data = await response.json()\r\n      console.log(\"Gemini API response received:\", data)\r\n\r\n      // Log the actual text content for easier debugging\r\n      if (data.candidates && data.candidates.length > 0) {\r\n        const textContent = data.candidates[0].content.parts[0].text\r\n        console.log(\"Gemini API text response:\", textContent)\r\n      }\r\n\r\n      return data\r\n    } catch (error) {\r\n      console.error(\"Error calling Gemini API:\", error)\r\n      // Return null or a default response in case of error\r\n      return null\r\n    }\r\n  }\r\n\r\n  // Generate prompt for Gemini API based on form data\r\n  const generatePrompt = (formData) => {\r\n    const objectivesStr =\r\n      formData.objectives && formData.objectives.length > 0\r\n        ? formData.objectives.map(mapObjective).join(\", \")\r\n        : \"Brand Awareness\"\r\n\r\n    return `Generate a mobile billboard route plan with these specifications:\r\n\r\nBusiness: ${formData.businessName || \"\"}\r\nIndustry: ${formData.industry || \"\"}\r\nTarget Audience: ${formData.targetAudience || \"\"}\r\nCampaign Objectives: ${objectivesStr}\r\nLocation: ${formData.location || \"\"}\r\nDuration: ${formData.campaignDuration || \"\"}\r\nBudget: â‚¹${formData.budget || 0}\r\n\r\nProvide:\r\n1. Recommended locations with timing windows\r\n2. Optimal routes for maximum visibility\r\n3. Estimated impressions per day\r\n4. Any special considerations\r\nFormat the response with clear sections and bullet points.`\r\n  }\r\n\r\n  // Map objective codes to readable text\r\n  const mapObjective = (objective) => {\r\n    switch (objective) {\r\n      case \"brand\":\r\n        return \"Brand Awareness\"\r\n      case \"traffic\":\r\n        return \"Store Traffic\"\r\n      case \"launch\":\r\n        return \"Product Launch\"\r\n      case \"event\":\r\n        return \"Event Promotion\"\r\n      default:\r\n        return objective\r\n    }\r\n  }\r\n\r\n  // Process Gemini API response\r\n  const processGeminiResponse = (response, formData) => {\r\n    console.log(\"Processing Gemini API response...\")\r\n\r\n    // Start with a customized data structure based on the form data\r\n    const result = createCustomizedMockData(formData)\r\n\r\n    // If Gemini API call failed, return the mock data\r\n    if (!response || !response.candidates || response.candidates.length === 0) {\r\n      console.log(\"No valid Gemini response, using mock data\")\r\n      return result\r\n    }\r\n\r\n    try {\r\n      // Extract text from Gemini response\r\n      const candidate = response.candidates[0]\r\n      const content = candidate.content\r\n      const part = content.parts[0]\r\n      const text = part.text\r\n\r\n      console.log(\"Extracted text from Gemini response\")\r\n\r\n      // Add the AI-generated route plan\r\n      result.routePlan = text\r\n\r\n      // Parse the AI response to extract locations, timings, etc.\r\n      console.log(\"Parsing AI response to extract structured data...\")\r\n      const parsedData = parseAIResponse(text)\r\n      console.log(\"Parsed data from AI response:\", parsedData)\r\n\r\n      // Merge the parsed data with our result\r\n      const finalResult = { ...result, ...parsedData }\r\n      console.log(\"Final processed data:\", finalResult)\r\n\r\n      return finalResult\r\n    } catch (error) {\r\n      console.error(\"Error processing Gemini response:\", error)\r\n      return result\r\n    }\r\n  }\r\n\r\n  // Helper function to parse the raw route plan text into structured data\r\n  const parseCampaignData = (data) => {\r\n    // Default structure that matches what the component expects\r\n    const defaultData = {\r\n      businessName: \"Your Business\",\r\n      businessType: \"Retail\",\r\n      targetAudience: \"18-40 year olds\",\r\n      campaignType: \"Brand Awareness\",\r\n      location: \"Pune\",\r\n      duration: \"7 days\",\r\n      budget: \"25,000\",\r\n      locations: [\r\n        { name: \"Koregaon Park\", description: \"High-end shopping area with affluent visitors\" },\r\n        { name: \"FC Road\", description: \"Popular with college students and young professionals\" },\r\n        { name: \"Aundh\", description: \"Residential area with shopping complexes\" },\r\n        { name: \"Hinjewadi IT Park\", description: \"Tech hub with young professionals\" },\r\n      ],\r\n      timings: [\r\n        { time: \"8:00 AM - 10:00 AM\", description: \"Morning commute hours\" },\r\n        { time: \"12:00 PM - 2:00 PM\", description: \"Lunch break period\" },\r\n        { time: \"5:00 PM - 8:00 PM\", description: \"Evening rush hour and leisure time\" },\r\n      ],\r\n      visibilityHeatmap: [\r\n        { time: \"Morning (8-11 AM)\", visibility: 75 },\r\n        { time: \"Midday (11 AM-2 PM)\", visibility: 60 },\r\n        { time: \"Afternoon (2-5 PM)\", visibility: 50 },\r\n        { time: \"Evening (5-8 PM)\", visibility: 85 },\r\n        { time: \"Night (8-11 PM)\", visibility: 70 },\r\n      ],\r\n      routePlanDays13: [\r\n        { time: \"8:00 AM\", location: \"Start at Koregaon Park\" },\r\n        { time: \"9:30 AM\", location: \"Move to FC Road\" },\r\n        { time: \"12:00 PM\", location: \"Lunch break at JM Road\" },\r\n        { time: \"1:30 PM\", location: \"Continue to Aundh\" },\r\n      ],\r\n      routePlanDays45: [\r\n        { time: \"12:00 PM\", location: \"Start at Hinjewadi IT Park\" },\r\n        { time: \"2:30 PM\", location: \"Move to University Circle\" },\r\n        { time: \"4:00 PM\", location: \"Continue to Baner Road\" },\r\n        { time: \"6:00 PM\", location: \"End at Aundh\" },\r\n      ],\r\n      routePlanDays67: [\r\n        { time: \"5:00 PM\", location: \"Start at Phoenix Mall\" },\r\n        { time: \"6:30 PM\", location: \"Move to FC Road\" },\r\n        { time: \"8:00 PM\", location: \"Continue to Koregaon Park\" },\r\n        { time: \"10:00 PM\", location: \"End route at E-Square\" },\r\n      ],\r\n    }\r\n\r\n    // Merge the received data with our default structure\r\n    const mergedData = { ...defaultData, ...data }\r\n\r\n    // Try to extract information from the route plan text\r\n    if (data.routePlan) {\r\n      const routePlan = data.routePlan\r\n\r\n      // Extract business name if present\r\n      const businessNameMatch = routePlan.match(/Business:\\s*([^\\n]+)/)\r\n      if (businessNameMatch && businessNameMatch[1]) {\r\n        mergedData.businessName = businessNameMatch[1].trim()\r\n      }\r\n\r\n      // Extract location if present\r\n      const locationMatch = routePlan.match(/Location:\\s*([^\\n]+)/)\r\n      if (locationMatch && locationMatch[1]) {\r\n        mergedData.location = locationMatch[1].trim()\r\n      }\r\n\r\n      // Extract budget if present\r\n      const budgetMatch = routePlan.match(/Budget:\\s*â‚¹([^\\n]+)/)\r\n      if (budgetMatch && budgetMatch[1]) {\r\n        mergedData.budget = budgetMatch[1].trim()\r\n      }\r\n\r\n      // Extract target audience if present\r\n      const audienceMatch = routePlan.match(/Target Audience:\\s*([^\\n]+)/)\r\n      if (audienceMatch && audienceMatch[1]) {\r\n        mergedData.targetAudience = audienceMatch[1].trim()\r\n      }\r\n\r\n      // Store the full route plan for debugging\r\n      mergedData.fullRoutePlan = routePlan\r\n    }\r\n\r\n    return mergedData\r\n  }\r\n\r\n  const parseAIResponse = (text) => {\r\n    const result = {}\r\n\r\n    try {\r\n      // Look for location sections in the text\r\n      if (text.includes(\"Recommended Locations\") || text.includes(\"recommended locations\")) {\r\n        const extractedLocations = []\r\n        const lines = text.split(\"\\n\")\r\n        let inLocationSection = false\r\n\r\n        for (const line of lines) {\r\n          if (line.includes(\"Recommended Locations\") || line.includes(\"recommended locations\")) {\r\n            inLocationSection = true\r\n            continue\r\n          }\r\n\r\n          if (inLocationSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\r\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2)\r\n            if (parts.length === 2) {\r\n              const name = parts[0].trim()\r\n              const description = parts[1].trim()\r\n              extractedLocations.push(createLocation(name, description))\r\n            }\r\n          }\r\n\r\n          // Exit location section when we hit another section\r\n          if (inLocationSection && (line.includes(\"Optimal Timing\") || line.includes(\"Route Plan\"))) {\r\n            inLocationSection = false\r\n          }\r\n        }\r\n\r\n        if (extractedLocations.length > 0) {\r\n          result.locations = extractedLocations\r\n        }\r\n      }\r\n\r\n      // Extract timing information\r\n      if (text.includes(\"Optimal Timing\") || text.includes(\"optimal timing\")) {\r\n        const extractedTimings = []\r\n        const lines = text.split(\"\\n\")\r\n        let inTimingSection = false\r\n\r\n        for (const line of lines) {\r\n          if (line.includes(\"Optimal Timing\") || line.includes(\"optimal timing\")) {\r\n            inTimingSection = true\r\n            continue\r\n          }\r\n\r\n          if (inTimingSection && line.trim().startsWith(\"-\") && line.includes(\":\")) {\r\n            const parts = line.substring(line.indexOf(\"-\") + 1).split(\":\", 2)\r\n            if (parts.length === 2) {\r\n              const time = parts[0].trim()\r\n              const description = parts[1].trim()\r\n              extractedTimings.push(createTiming(time, description))\r\n            }\r\n          }\r\n\r\n          // Exit timing section when we hit another section\r\n          if (inTimingSection && (line.includes(\"Route Plan\") || line.includes(\"Estimated\"))) {\r\n            inTimingSection = false\r\n          }\r\n        }\r\n\r\n        if (extractedTimings.length > 0) {\r\n          result.timings = extractedTimings\r\n        }\r\n      }\r\n\r\n      // Extract route plans\r\n      if (text.includes(\"Days 1-3\") || text.includes(\"days 1-3\")) {\r\n        result.routePlanDays13 = extractRoutePlan(text, \"Days 1-3\", \"days 1-3\")\r\n      }\r\n\r\n      if (text.includes(\"Days 4-5\") || text.includes(\"days 4-5\")) {\r\n        result.routePlanDays45 = extractRoutePlan(text, \"Days 4-5\", \"days 4-5\")\r\n      }\r\n\r\n      if (text.includes(\"Days 6-7\") || text.includes(\"days 6-7\")) {\r\n        result.routePlanDays67 = extractRoutePlan(text, \"Days 6-7\", \"days 6-7\")\r\n      }\r\n    } catch (error) {\r\n      console.warn(\"Warning: Error parsing AI response:\", error.message)\r\n      // Continue with default values\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  // Helper function to extract route plans from text\r\n  const extractRoutePlan = (text, sectionTitle1, sectionTitle2) => {\r\n    const routes = []\r\n    const lines = text.split(\"\\n\")\r\n    let inSection = false\r\n\r\n    for (const line of lines) {\r\n      if (line.includes(sectionTitle1) || line.includes(sectionTitle2)) {\r\n        inSection = true\r\n        continue\r\n      }\r\n\r\n      if (\r\n        inSection &&\r\n        line.trim().startsWith(\"-\") &&\r\n        (line.includes(\"Start at\") ||\r\n          line.includes(\"Move to\") ||\r\n          line.includes(\"Continue to\") ||\r\n          line.includes(\"End at\") ||\r\n          line.includes(\"Lunch break\"))\r\n      ) {\r\n        // Extract time and location\r\n        const timeMatch = line.match(/(\\d{1,2}:\\d{2}\\s*(?:AM|PM))/)\r\n        if (timeMatch) {\r\n          const time = timeMatch[1]\r\n          const location = line.substring(line.indexOf(\"-\") + 1).trim()\r\n          routes.push({ time, location })\r\n        }\r\n      }\r\n\r\n      // Exit section when we hit another section\r\n      if (inSection && (line.includes(\"Days\") || line.includes(\"Estimated\") || line.includes(\"Special\"))) {\r\n        if (!line.includes(sectionTitle1) && !line.includes(sectionTitle2)) {\r\n          inSection = false\r\n        }\r\n      }\r\n    }\r\n\r\n    return routes.length > 0 ? routes : null\r\n  }\r\n\r\n  const createLocation = (name, description) => {\r\n    return { name, description }\r\n  }\r\n\r\n  const createTiming = (time, description) => {\r\n    return { time, description }\r\n  }\r\n\r\n  const createCustomizedMockData = (formData) => {\r\n    const mockData = {\r\n      businessName: formData.businessName || \"Your Business\",\r\n      businessType: mapIndustryToBusinessType(formData.industry),\r\n      targetAudience: formData.targetAudience || \"General audience\",\r\n      campaignType: getCampaignType(formData.objectives),\r\n      location: formData.location || \"Pune\",\r\n      duration: mapDurationToText(formData.campaignDuration),\r\n      budget: String(formData.budget || 25000),\r\n    }\r\n\r\n    // Customize locations based on the requested location\r\n    const locations = []\r\n    const location = formData.location ? formData.location.toLowerCase() : \"\"\r\n\r\n    if (location.includes(\"pune\")) {\r\n      locations.push(createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"))\r\n      locations.push(createLocation(\"FC Road\", \"Popular with college students and young professionals\"))\r\n      locations.push(createLocation(\"Aundh\", \"Residential area with shopping complexes\"))\r\n      locations.push(createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\"))\r\n    } else if (location.includes(\"mumbai\")) {\r\n      locations.push(createLocation(\"Bandra\", \"Upscale residential and commercial area\"))\r\n      locations.push(createLocation(\"Andheri\", \"Business hub with shopping centers\"))\r\n      locations.push(createLocation(\"Marine Drive\", \"Popular tourist destination\"))\r\n      locations.push(createLocation(\"Powai\", \"Tech and business center\"))\r\n    } else if (location.includes(\"delhi\")) {\r\n      locations.push(createLocation(\"Connaught Place\", \"Central business district\"))\r\n      locations.push(createLocation(\"South Extension\", \"Popular shopping area\"))\r\n      locations.push(createLocation(\"Hauz Khas\", \"Trendy area with restaurants and shops\"))\r\n      locations.push(createLocation(\"Cyber City\", \"Business hub in Gurgaon\"))\r\n    } else {\r\n      // Default locations for any other city\r\n      locations.push(createLocation(\"Main Market\", \"Central shopping area\"))\r\n      locations.push(createLocation(\"Business District\", \"Commercial hub with offices\"))\r\n      locations.push(createLocation(\"University Area\", \"Popular with students\"))\r\n      locations.push(createLocation(\"Residential Hub\", \"High-density residential area\"))\r\n    }\r\n    mockData.locations = locations\r\n\r\n    // Timings - customize based on business type\r\n    const timings = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      timings.push(createTiming(\"11:30 AM - 2:00 PM\", \"Lunch rush hours\"))\r\n      timings.push(createTiming(\"6:00 PM - 9:00 PM\", \"Dinner time peak\"))\r\n      timings.push(createTiming(\"3:00 PM - 5:00 PM\", \"Afternoon coffee/snack time\"))\r\n    } else if (businessType.includes(\"retail\")) {\r\n      timings.push(createTiming(\"10:00 AM - 1:00 PM\", \"Morning shopping hours\"))\r\n      timings.push(createTiming(\"4:00 PM - 7:00 PM\", \"After-work shopping peak\"))\r\n      timings.push(createTiming(\"1:00 PM - 3:00 PM\", \"Lunch break shoppers\"))\r\n    } else {\r\n      timings.push(createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"))\r\n      timings.push(createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"))\r\n      timings.push(createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\"))\r\n    }\r\n    mockData.timings = timings\r\n\r\n    // Visibility heatmap - customize based on business type\r\n    const visibilityHeatmap = []\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 40))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Lunch (11 AM-2 PM)\", 85))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 90))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 75))\r\n    } else if (businessType.includes(\"retail\")) {\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 60))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 75))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 70))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 40))\r\n    } else {\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", 75))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", 50))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", 85))\r\n      visibilityHeatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", 70))\r\n    }\r\n    mockData.visibilityHeatmap = visibilityHeatmap\r\n\r\n    // Route plans - customize based on the locations\r\n    mockData.routePlanDays13 = createCustomRoutePlan1(locations, formData)\r\n    mockData.routePlanDays45 = createCustomRoutePlan2(locations, formData)\r\n    mockData.routePlanDays67 = createCustomRoutePlan3(locations, formData)\r\n\r\n    // Generate a mock route plan text\r\n    const routePlanText = generateMockRoutePlanText(formData, locations)\r\n    mockData.routePlan = routePlanText\r\n\r\n    return mockData\r\n  }\r\n\r\n  const createMockCampaignData = () => {\r\n    const mockData = {\r\n      businessName: \"Coffee House\",\r\n      businessType: \"Food & Beverage\",\r\n      targetAudience: \"18-40 year olds, coffee enthusiasts, students, professionals\",\r\n      campaignType: \"Brand Awareness\",\r\n      location: \"Pune\",\r\n      duration: \"7 days\",\r\n      budget: \"25,000\",\r\n    }\r\n\r\n    // Locations\r\n    const locations = [\r\n      createLocation(\"Koregaon Park\", \"High-end shopping area with affluent visitors\"),\r\n      createLocation(\"FC Road\", \"Popular with college students and young professionals\"),\r\n      createLocation(\"Aundh\", \"Residential area with shopping complexes\"),\r\n      createLocation(\"Hinjewadi IT Park\", \"Tech hub with young professionals\"),\r\n    ]\r\n    mockData.locations = locations\r\n\r\n    // Timings\r\n    const timings = [\r\n      createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute hours\"),\r\n      createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break period\"),\r\n      createTiming(\"5:00 PM - 8:00 PM\", \"Evening rush hour and leisure time\"),\r\n    ]\r\n    mockData.timings = timings\r\n\r\n    // Visibility heatmap\r\n    const visibilityHeatmap = [\r\n      createHeatmapEntry(\"Morning (8-11 AM)\", 75),\r\n      createHeatmapEntry(\"Midday (11 AM-2 PM)\", 60),\r\n      createHeatmapEntry(\"Afternoon (2-5 PM)\", 50),\r\n      createHeatmapEntry(\"Evening (5-8 PM)\", 85),\r\n      createHeatmapEntry(\"Night (8-11 PM)\", 70),\r\n    ]\r\n    mockData.visibilityHeatmap = visibilityHeatmap\r\n\r\n    // Route plans\r\n    mockData.routePlanDays13 = createDefaultRoutePlan1()\r\n    mockData.routePlanDays45 = createDefaultRoutePlan2()\r\n    mockData.routePlanDays67 = createDefaultRoutePlan3()\r\n\r\n    return mockData\r\n  }\r\n\r\n  const createHeatmapEntry = (time, visibility) => {\r\n    return { time, visibility }\r\n  }\r\n\r\n  const mapIndustryToBusinessType = (industry) => {\r\n    if (!industry) return \"Business\"\r\n\r\n    switch (industry) {\r\n      case \"retail\":\r\n        return \"Retail\"\r\n      case \"restaurant\":\r\n        return \"Food & Beverage\"\r\n      case \"entertainment\":\r\n        return \"Entertainment\"\r\n      case \"healthcare\":\r\n        return \"Healthcare\"\r\n      case \"education\":\r\n        return \"Education\"\r\n      case \"technology\":\r\n        return \"Technology\"\r\n      case \"automotive\":\r\n        return \"Automotive\"\r\n      case \"financial\":\r\n        return \"Financial Services\"\r\n      default:\r\n        return industry.charAt(0).toUpperCase() + industry.slice(1)\r\n    }\r\n  }\r\n\r\n  const getCampaignType = (objectives) => {\r\n    if (!objectives || objectives.length === 0) {\r\n      return \"Brand Awareness\"\r\n    }\r\n\r\n    // Return the first objective as the primary campaign type\r\n    return mapObjective(objectives[0])\r\n  }\r\n\r\n  const mapDurationToText = (duration) => {\r\n    if (!duration) return \"7 days\"\r\n\r\n    switch (duration) {\r\n      case \"1-day\":\r\n        return \"1 day\"\r\n      case \"1-week\":\r\n        return \"7 days\"\r\n      case \"2-weeks\":\r\n        return \"14 days\"\r\n      case \"1-month\":\r\n        return \"30 days\"\r\n      case \"3-months\":\r\n        return \"90 days\"\r\n      default:\r\n        return duration\r\n    }\r\n  }\r\n\r\n  const generateMockRoutePlanText = (formData, locations) => {\r\n    const sb = []\r\n    sb.push(\"# Mobile Billboard Campaign Plan\\n\\n\")\r\n    sb.push(`## Business: ${formData.businessName || \"Your Business\"}\\n`)\r\n    sb.push(`## Industry: ${formData.industry || \"Retail\"}\\n`)\r\n    sb.push(`## Location: ${formData.location || \"Pune\"}\\n`)\r\n    sb.push(`## Budget: â‚¹${formData.budget || \"25,000\"}\\n`)\r\n    sb.push(`## Target Audience: ${formData.targetAudience || \"General audience\"}\\n\\n`)\r\n\r\n    sb.push(\"### Recommended Locations:\\n\")\r\n    for (const location of locations) {\r\n      sb.push(`- ${location.name}: ${location.description}\\n`)\r\n    }\r\n\r\n    sb.push(\"\\n### Optimal Timing:\\n\")\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      sb.push(\"- 11:30 AM - 2:00 PM: Lunch rush hours\\n\")\r\n      sb.push(\"- 6:00 PM - 9:00 PM: Dinner time peak\\n\")\r\n      sb.push(\"- 3:00 PM - 5:00 PM: Afternoon coffee/snack time\\n\")\r\n    } else {\r\n      sb.push(\"- 8:00 AM - 10:00 AM: Morning commute hours\\n\")\r\n      sb.push(\"- 12:00 PM - 2:00 PM: Lunch break period\\n\")\r\n      sb.push(\"- 5:00 PM - 8:00 PM: Evening rush hour and leisure time\\n\")\r\n    }\r\n\r\n    sb.push(\"\\n### Route Plan:\\n\")\r\n    sb.push(\"#### Days 1-3:\\n\")\r\n    sb.push(`- Start at ${locations[0]?.name || \"Main Market\"} (8:00 AM)\\n`)\r\n    sb.push(`- Move to ${locations[1]?.name || \"Business District\"} (10:30 AM)\\n`)\r\n    sb.push(\"- Lunch break (12:00 PM)\\n\")\r\n    sb.push(`- Continue to ${locations[2]?.name || \"University Area\"} (2:00 PM)\\n`)\r\n    sb.push(`- End at ${locations[3]?.name || \"Residential Hub\"} (5:00 PM)\\n`)\r\n\r\n    sb.push(\"\\n#### Days 4-5:\\n\")\r\n    sb.push(`- Start at ${locations[3]?.name || \"Residential Hub\"} (12:00 PM)\\n`)\r\n    sb.push(`- Move to ${locations[2]?.name || \"University Area\"} (2:30 PM)\\n`)\r\n    sb.push(`- Continue to ${locations[1]?.name || \"Business District\"} (4:00 PM)\\n`)\r\n    sb.push(`- End at ${locations[0]?.name || \"Main Market\"} (6:00 PM)\\n`)\r\n\r\n    sb.push(\"\\n#### Days 6-7:\\n\")\r\n    sb.push(`- Start at ${locations[1]?.name || \"Business District\"} (5:00 PM)\\n`)\r\n    sb.push(`- Move to ${locations[2]?.name || \"University Area\"} (6:30 PM)\\n`)\r\n    sb.push(`- Continue to ${locations[0]?.name || \"Main Market\"} (8:00 PM)\\n`)\r\n    sb.push(`- End route at ${locations[3]?.name || \"Residential Hub\"} (10:00 PM)\\n`)\r\n\r\n    sb.push(\"\\n### Estimated Impressions:\\n\")\r\n    sb.push(\"- Daily Average: 5,000-7,000 impressions\\n\")\r\n    sb.push(\"- Total Campaign: 35,000-49,000 impressions\\n\")\r\n\r\n    sb.push(\"\\n### Special Considerations:\\n\")\r\n    sb.push(`- Focus on ${locations[0]?.name || \"Main Market\"} during evening hours for maximum visibility\\n`)\r\n    sb.push(\"- Consider weekend special routes around shopping areas\\n\")\r\n    sb.push(\"- Adjust timing during local events or festivals for increased exposure\\n\")\r\n\r\n    return sb.join(\"\")\r\n  }\r\n\r\n  const createCustomRoutePlan1 = (locations, formData) => {\r\n    const routes = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    // Customize start time based on business type\r\n    let startTime = \"8:00 AM\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      startTime = \"11:00 AM\"\r\n    } else if (businessType.includes(\"entertainment\")) {\r\n      startTime = \"10:00 AM\"\r\n    }\r\n\r\n    if (locations.length >= 1) {\r\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(startTime, \"Start at City Center\"))\r\n    }\r\n\r\n    if (locations.length >= 2) {\r\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to \" + locations[1].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"9:30 AM\", \"Move to Main Market\"))\r\n    }\r\n\r\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break\"))\r\n\r\n    if (locations.length >= 3) {\r\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to \" + locations[2].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"1:30 PM\", \"Continue to Business District\"))\r\n    }\r\n\r\n    return routes\r\n  }\r\n\r\n  const createCustomRoutePlan2 = (locations, formData) => {\r\n    const routes = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    // Customize start time based on business type\r\n    let startTime = \"12:00 PM\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      startTime = \"1:00 PM\"\r\n    } else if (businessType.includes(\"entertainment\")) {\r\n      startTime = \"2:00 PM\"\r\n    }\r\n\r\n    if (locations.length >= 3) {\r\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[2].name))\r\n    } else {\r\n      routes.push(createRouteStep(startTime, \"Start at Business District\"))\r\n    }\r\n\r\n    if (locations.length >= 4) {\r\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[3].name))\r\n    } else if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"2:30 PM\", \"Move to University Area\"))\r\n    }\r\n\r\n    if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"4:00 PM\", \"Continue to City Center\"))\r\n    }\r\n\r\n    if (locations.length >= 2) {\r\n      routes.push(createRouteStep(\"6:00 PM\", \"End at \" + locations[1].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"6:00 PM\", \"End at Main Market\"))\r\n    }\r\n\r\n    return routes\r\n  }\r\n\r\n  const createCustomRoutePlan3 = (locations, formData) => {\r\n    const routes = []\r\n    const businessType = formData.industry ? formData.industry.toLowerCase() : \"\"\r\n\r\n    // Customize start time based on business type\r\n    let startTime = \"5:00 PM\"\r\n    if (businessType.includes(\"restaurant\") || businessType.includes(\"food\")) {\r\n      startTime = \"6:00 PM\"\r\n    } else if (businessType.includes(\"entertainment\")) {\r\n      startTime = \"7:00 PM\"\r\n    }\r\n\r\n    if (locations.length >= 2) {\r\n      routes.push(createRouteStep(startTime, \"Start at \" + locations[1].name))\r\n    } else {\r\n      routes.push(createRouteStep(startTime, \"Start at Main Market\"))\r\n    }\r\n\r\n    if (locations.length >= 3) {\r\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to \" + locations[2].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"6:30 PM\", \"Move to Business District\"))\r\n    }\r\n\r\n    if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"8:00 PM\", \"Continue to City Center\"))\r\n    }\r\n\r\n    if (locations.length >= 4) {\r\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[3].name))\r\n    } else if (locations.length >= 1) {\r\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at \" + locations[0].name))\r\n    } else {\r\n      routes.push(createRouteStep(\"10:00 PM\", \"End route at Entertainment District\"))\r\n    }\r\n\r\n    return routes\r\n  }\r\n\r\n  const createRouteStep = (time, location) => {\r\n    return { time, location }\r\n  }\r\n\r\n  const createDefaultRoutePlan1 = () => {\r\n    const routes = []\r\n    routes.push(createRouteStep(\"8:00 AM\", \"Start at Koregaon Park\"))\r\n    routes.push(createRouteStep(\"9:30 AM\", \"Move to FC Road\"))\r\n    routes.push(createRouteStep(\"12:00 PM\", \"Lunch break at JM Road\"))\r\n    routes.push(createRouteStep(\"1:30 PM\", \"Continue to Aundh\"))\r\n    return routes\r\n  }\r\n\r\n  const createDefaultRoutePlan2 = () => {\r\n    const routes = []\r\n    routes.push(createRouteStep(\"12:00 PM\", \"Start at Hinjewadi IT Park\"))\r\n    routes.push(createRouteStep(\"2:30 PM\", \"Move to University Circle\"))\r\n    routes.push(createRouteStep(\"4:00 PM\", \"Continue to Baner Road\"))\r\n    routes.push(createRouteStep(\"6:00 PM\", \"End at Aundh\"))\r\n    return routes\r\n  }\r\n\r\n  const createDefaultRoutePlan3 = () => {\r\n    const routes = []\r\n    routes.push(createRouteStep(\"5:00 PM\", \"Start at Phoenix Mall\"))\r\n    routes.push(createRouteStep(\"6:30 PM\", \"Move to FC Road\"))\r\n    routes.push(createRouteStep(\"8:00 PM\", \"Continue to Koregaon Park\"))\r\n    routes.push(createRouteStep(\"10:00 PM\", \"End route at E-Square\"))\r\n    return routes\r\n  }\r\n\r\n  const AiPredictionSection = ({ predictions }) => {\r\n    if (!predictions) return null;\r\n    \r\n    // Generate a confidence score for dramatic effect\r\n    const confidenceScore = Math.floor(Math.random() * 11) + 89; // 89-99%\r\n    \r\n    return (\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n        <div className=\"flex justify-between items-center mb-6\">\r\n          <h3 className=\"text-xl font-bold text-primary flex items-center\">\r\n            <Target className=\"mr-2\" /> AI-Powered Campaign Analytics\r\n          </h3>\r\n          <div className=\"flex items-center\">\r\n            <div className=\"bg-green-100 text-green-800 text-xs font-medium rounded-full px-3 py-1 flex items-center\">\r\n              <span className=\"w-2 h-2 bg-green-500 rounded-full mr-1.5\"></span>\r\n              AI Confidence: {confidenceScore}%\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Executive Summary */}\r\n        <div className=\"mb-8 p-4 bg-blue-50 border border-blue-100 rounded-md\">\r\n          <h4 className=\"font-semibold text-blue-800 mb-2 flex items-center\">\r\n            <Target className=\"h-4 w-4 mr-2\" /> Executive Summary\r\n          </h4>\r\n          <p className=\"text-sm text-gray-700\">\r\n            Based on comprehensive analysis of traffic patterns, location demographics, and historical campaign data, \r\n            our AI model predicts a strong {predictions.roi || \"135%+\"} return on investment for this campaign. \r\n            The recommended locations and timing windows have been optimized to maximize visibility \r\n            with your target audience while efficiently utilizing your budget.\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\r\n          {/* ROI Card */}\r\n          <div className=\"bg-gradient-to-br from-primary/10 to-primary/5 p-4 rounded-lg border border-primary/20\">\r\n            <div className=\"text-sm text-gray-600 mb-1\">Estimated ROI</div>\r\n            <div className=\"text-3xl font-bold text-primary\">{predictions.roi || \"N/A\"}</div>\r\n            <div className=\"text-sm mt-2 flex items-center\">\r\n              <span className=\"inline-block w-2 h-2 bg-green-500 rounded-full mr-1.5\"></span>\r\n              <span>High confidence prediction</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Impressions Card */}\r\n          <div className=\"bg-gradient-to-br from-blue-50 to-blue-100/50 p-4 rounded-lg border border-blue-200\">\r\n            <div className=\"text-sm text-gray-600 mb-1\">Total Impressions</div>\r\n            <div className=\"text-3xl font-bold text-blue-600\">\r\n              {predictions.totalImpressions?.toLocaleString() || \"N/A\"}\r\n            </div>\r\n            <div className=\"text-sm mt-2 flex items-center\">\r\n              <span className=\"text-green-600 font-medium\">+{Math.floor(Math.random() * 20) + 15}%</span>\r\n              <span className=\"ml-1\">vs. average campaign</span>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Conversions Card */}\r\n          <div className=\"bg-gradient-to-br from-green-50 to-green-100/50 p-4 rounded-lg border border-green-200\">\r\n            <div className=\"text-sm text-gray-600 mb-1\">Est. Conversions</div>\r\n            <div className=\"text-3xl font-bold text-green-600\">\r\n              {predictions.conversions?.toLocaleString() || \"N/A\"}\r\n            </div>\r\n            <div className=\"text-sm mt-2\">\r\n              Based on {predictions.conversionRate || \"5.2%\"} conversion rate\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* AI Insight Box */}\r\n        <div className=\"mb-8 p-4 border border-purple-200 bg-purple-50 rounded-md\">\r\n          <h4 className=\"font-semibold text-purple-800 mb-2 flex items-center\">\r\n            <span className=\"inline-block w-3 h-3 bg-purple-500 rounded-full mr-2\"></span>\r\n            AI Insight\r\n          </h4>\r\n          <p className=\"text-sm text-gray-700\">\r\n            Our analysis detected a {Math.floor(Math.random() * 20) + 30}% higher engagement potential \r\n            in {predictions.bestPerformingAreas?.high_traffic || \"high traffic areas\"} during \r\n            {predictions.bestPerformingTimes?.weekday_evening || \"evening hours (5-8 PM)\"}. \r\n            Focusing resources on these areas and times could increase your campaign effectiveness by up to {Math.floor(Math.random() * 15) + 20}%.\r\n          </p>\r\n        </div>\r\n        \r\n        {/* Cost Metrics */}\r\n        <div className=\"mb-8\">\r\n          <h4 className=\"font-semibold text-gray-700 mb-3 flex items-center\">\r\n            <DollarSign className=\"h-4 w-4 mr-2\" />\r\n            Cost Efficiency Metrics\r\n          </h4>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <div className=\"p-4 bg-gray-50 rounded border\">\r\n              <div className=\"text-xs text-gray-500 mb-1\">Cost per Impression</div>\r\n              <div className=\"font-semibold text-lg\">â‚¹{predictions.costPerImpression || \"0.52\"}</div>\r\n              <div className=\"text-xs text-green-600 mt-1\">\r\n                {Math.floor(Math.random() * 10) + 10}% below industry average\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 bg-gray-50 rounded border\">\r\n              <div className=\"text-xs text-gray-500 mb-1\">Cost per Engagement</div>\r\n              <div className=\"font-semibold text-lg\">â‚¹{predictions.costPerEngagement || \"12.78\"}</div>\r\n              <div className=\"text-xs text-green-600 mt-1\">\r\n                Highly efficient for your industry\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 bg-gray-50 rounded border\">\r\n              <div className=\"text-xs text-gray-500 mb-1\">Cost per Conversion</div>\r\n              <div className=\"font-semibold text-lg\">â‚¹{predictions.costPerConversion || \"245.60\"}</div>\r\n              <div className=\"text-xs text-green-600 mt-1\">\r\n                Excellent acquisition cost\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Revenue Projection */}\r\n        <div className=\"mb-8\">\r\n          <h4 className=\"font-semibold text-gray-700 mb-3 flex items-center\">\r\n            <TrendingUp className=\"h-4 w-4 mr-2\" />\r\n            Revenue Projection\r\n          </h4>\r\n          <div className=\"p-5 bg-green-50 rounded-lg border border-green-100\">\r\n            <div className=\"flex justify-between items-center\">\r\n              <div>\r\n                <div className=\"text-sm text-gray-600 mb-1\">Estimated Revenue</div>\r\n                <div className=\"text-2xl font-bold text-green-700\">â‚¹{predictions.estimatedRevenue?.toLocaleString() || \"478,500\"}</div>\r\n                <div className=\"text-xs text-gray-600 mt-1\">\r\n                  Based on {predictions.conversions?.toLocaleString() || \"320\"} estimated conversions\r\n                </div>\r\n              </div>\r\n              <div className=\"text-center px-4 py-2 bg-green-100 rounded-full text-green-800 text-sm font-medium\">\r\n                <div className=\"text-xs text-gray-600\">Expected ROI</div>\r\n                <div className=\"text-lg font-bold\">{predictions.roi || \"135%\"}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* Best Performing Areas */}\r\n        {predictions.bestPerformingAreas && (\r\n          <div className=\"mb-8\">\r\n            <h4 className=\"font-semibold text-gray-700 mb-3 flex items-center\">\r\n              <MapPin className=\"h-4 w-4 mr-2\" />\r\n              AI-Recommended Locations\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"p-4 bg-blue-50 rounded border border-blue-100\">\r\n                <div className=\"text-xs text-gray-500 mb-1 uppercase tracking-wider\">High Traffic Areas</div>\r\n                <div className=\"text-sm font-medium\">{predictions.bestPerformingAreas.high_traffic}</div>\r\n                <div className=\"text-xs text-blue-600 mt-2\">\r\n                  {Math.floor(Math.random() * 2000) + 4000} estimated daily impressions\r\n                </div>\r\n              </div>\r\n              <div className=\"p-4 bg-blue-50 rounded border border-blue-100\">\r\n                <div className=\"text-xs text-gray-500 mb-1 uppercase tracking-wider\">Shopping Districts</div>\r\n                <div className=\"text-sm font-medium\">{predictions.bestPerformingAreas.shopping}</div>\r\n                <div className=\"text-xs text-blue-600 mt-2\">\r\n                  {Math.floor(Math.random() * 10) + 85}% demographic match rate\r\n                </div>\r\n              </div>\r\n              <div className=\"p-4 bg-blue-50 rounded border border-blue-100\">\r\n                <div className=\"text-xs text-gray-500 mb-1 uppercase tracking-wider\">Business Hubs</div>\r\n                <div className=\"text-sm font-medium\">{predictions.bestPerformingAreas.business}</div>\r\n                <div className=\"text-xs text-blue-600 mt-2\">\r\n                  High value audience concentration\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* Best Performing Times */}\r\n        {predictions.bestPerformingTimes && (\r\n          <div className=\"mb-6\">\r\n            <h4 className=\"font-semibold text-gray-700 mb-3 flex items-center\">\r\n              <Clock className=\"h-4 w-4 mr-2\" />\r\n              AI-Optimized Timing Windows\r\n            </h4>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n              <div className=\"p-4 bg-purple-50 rounded border border-purple-100\">\r\n                <div className=\"text-xs text-gray-500 mb-1 uppercase tracking-wider\">Weekday Mornings</div>\r\n                <div className=\"text-sm font-medium\">{predictions.bestPerformingTimes.weekday_morning}</div>\r\n                <div className=\"text-xs text-purple-600 mt-2\">\r\n                  {Math.floor(Math.random() * 10) + 70}% attention rate\r\n                </div>\r\n              </div>\r\n              <div className=\"p-4 bg-purple-50 rounded border border-purple-100\">\r\n                <div className=\"text-xs text-gray-500 mb-1 uppercase tracking-wider\">Weekday Evenings</div>\r\n                <div className=\"text-sm font-medium\">{predictions.bestPerformingTimes.weekday_evening}</div>\r\n                <div className=\"text-xs text-purple-600 mt-2\">\r\n                  Peak visibility window\r\n                </div>\r\n              </div>\r\n              <div className=\"p-4 bg-purple-50 rounded border border-purple-100\">\r\n                <div className=\"text-xs text-gray-500 mb-1 uppercase tracking-wider\">Weekends</div>\r\n                <div className=\"text-sm font-medium\">{predictions.bestPerformingTimes.weekend}</div>\r\n                <div className=\"text-xs text-purple-600 mt-2\">\r\n                  Leisure-focused demographic\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {/* AI-Generated Recommendations */}\r\n        <div className=\"mt-8 p-5 border rounded-lg bg-gradient-to-br from-gray-50 to-white\">\r\n          <h4 className=\"font-semibold text-gray-700 mb-3\">AI-Generated Strategic Recommendations</h4>\r\n          <ul className=\"space-y-3\">\r\n            <li className=\"flex items-start\">\r\n              <div className=\"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\">\r\n                <Check className=\"h-3 w-3 text-green-600\" />\r\n              </div>\r\n              <span className=\"text-sm\">\r\n                Focus {Math.floor(Math.random() * 10) + 40}% of budget on {predictions.bestPerformingAreas?.high_traffic || \"high traffic areas\"} during peak hours\r\n              </span>\r\n            </li>\r\n            <li className=\"flex items-start\">\r\n              <div className=\"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\">\r\n                <Check className=\"h-3 w-3 text-green-600\" />\r\n              </div>\r\n              <span className=\"text-sm\">\r\n                Strategically position billboards at major intersections with {Math.floor(Math.random() * 10) + 20}+ second average dwell time\r\n              </span>\r\n            </li>\r\n            <li className=\"flex items-start\">\r\n              <div className=\"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\">\r\n                <Check className=\"h-3 w-3 text-green-600\" />\r\n              </div>\r\n              <span className=\"text-sm\">\r\n                Implement special route adaptation during local events and festivals for {Math.floor(Math.random() * 20) + 30}% visibility boost\r\n              </span>\r\n            </li>\r\n            <li className=\"flex items-start\">\r\n              <div className=\"flex-shrink-0 w-5 h-5 rounded-full bg-green-100 flex items-center justify-center mt-0.5 mr-3\">\r\n                <Check className=\"h-3 w-3 text-green-600\" />\r\n              </div>\r\n              <span className=\"text-sm\">\r\n                Add QR codes to billboards for {Math.floor(Math.random() * 10) + 25}% enhanced conversion tracking and measurement\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        \r\n        {/* Footer */}\r\n        <div className=\"mt-8 border-t pt-4 text-xs text-gray-500 flex justify-between items-center\">\r\n          <div>Generated using AdRoute AI v2.5 â€¢ Analysis based on {Math.floor(Math.random() * 1000) + 5000}+ historical campaign datapoints</div>\r\n          <div className=\"flex items-center\">\r\n            <span className=\"inline-block w-2 h-2 bg-green-500 rounded-full mr-1.5\"></span>\r\n            Last updated: {new Date().toLocaleString()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Add these new functions to generate realistic data based on user input and AI predictions\r\n  const generateRealisticLocations = (location, predictions) => {\r\n    const locations = [];\r\n    \r\n    // Use the bestPerformingAreas from the AI predictions if available\r\n    if (predictions && predictions.bestPerformingAreas) {\r\n      const areas = predictions.bestPerformingAreas;\r\n      \r\n      if (areas.high_traffic) {\r\n        const highTrafficAreas = areas.high_traffic.split(',').map(area => area.trim());\r\n        highTrafficAreas.forEach(area => {\r\n          locations.push(createLocation(area, \"High-traffic area with maximum visibility\"));\r\n        });\r\n      }\r\n      \r\n      if (areas.shopping) {\r\n        const shoppingAreas = areas.shopping.split(',').map(area => area.trim());\r\n        shoppingAreas.forEach(area => {\r\n          locations.push(createLocation(area, \"Popular shopping area frequented by your target audience\"));\r\n        });\r\n      }\r\n      \r\n      if (areas.business) {\r\n        const businessAreas = areas.business.split(',').map(area => area.trim());\r\n        businessAreas.forEach(area => {\r\n          locations.push(createLocation(area, \"Business district with high professional traffic\"));\r\n        });\r\n      }\r\n    } \r\n    \r\n    // If no predictions or incomplete data, fall back to default locations\r\n    if (locations.length === 0) {\r\n      // Default based on location\r\n      if (location && location.toLowerCase().includes('mumbai')) {\r\n        locations.push(createLocation(\"Marine Drive\", \"Prime tourist and local hotspot with high visibility\"));\r\n        locations.push(createLocation(\"Bandra Linking Road\", \"Popular shopping area with affluent visitors\"));\r\n        locations.push(createLocation(\"Andheri West\", \"Commercial hub with high footfall\"));\r\n        locations.push(createLocation(\"BKC\", \"Business district with professional demographic\"));\r\n      } else if (location && location.toLowerCase().includes('delhi')) {\r\n        locations.push(createLocation(\"Connaught Place\", \"Central business district with high footfall\"));\r\n        locations.push(createLocation(\"South Extension\", \"Upscale shopping area with target demographic\"));\r\n        locations.push(createLocation(\"Saket Mall\", \"Shopping hub with affluent visitors\"));\r\n        locations.push(createLocation(\"Cyber City\", \"IT hub with professional audience\"));\r\n      } else {\r\n        locations.push(createLocation(\"City Center\", \"Central location with maximum visibility\"));\r\n        locations.push(createLocation(\"Main Market\", \"Popular shopping area with high traffic\"));\r\n        locations.push(createLocation(\"Business District\", \"Professional hub for targeted exposure\"));\r\n        locations.push(createLocation(\"Shopping Mall vicinity\", \"High-density consumer location\"));\r\n      }\r\n    }\r\n    \r\n    return locations;\r\n  };\r\n\r\n  const generateRealisticTimings = (industry, predictions) => {\r\n    const timings = [];\r\n    \r\n    // Use bestPerformingTimes from AI predictions if available\r\n    if (predictions && predictions.bestPerformingTimes) {\r\n      const times = predictions.bestPerformingTimes;\r\n      \r\n      if (times.weekday_morning) {\r\n        timings.push(createTiming(times.weekday_morning, \"Peak morning traffic for maximum visibility\"));\r\n      }\r\n      \r\n      if (times.weekday_evening) {\r\n        timings.push(createTiming(times.weekday_evening, \"Evening rush hour with highest audience engagement\"));\r\n      }\r\n      \r\n      if (times.weekend) {\r\n        timings.push(createTiming(times.weekend, \"Weekend peak hours for leisure-focused audience\"));\r\n      }\r\n    }\r\n    \r\n    // If no predictions or incomplete data, generate industry-specific timings\r\n    if (timings.length === 0) {\r\n      // Industry-specific timings\r\n      if (industry && industry.toLowerCase().includes('food')) {\r\n        timings.push(createTiming(\"11:30 AM - 2:00 PM\", \"Lunch rush with hungry potential customers\"));\r\n        timings.push(createTiming(\"6:00 PM - 8:30 PM\", \"Dinner prime time for maximum impact\"));\r\n        timings.push(createTiming(\"3:30 PM - 5:00 PM\", \"Afternoon snack/coffee break window\"));\r\n      } else if (industry && industry.toLowerCase().includes('retail')) {\r\n        timings.push(createTiming(\"10:00 AM - 1:00 PM\", \"Morning shopping hours with serious buyers\"));\r\n        timings.push(createTiming(\"4:00 PM - 7:00 PM\", \"Post-work shopping peak with high intent\"));\r\n        timings.push(createTiming(\"12:00 PM - 2:00 PM\", \"Lunch break shoppers window\"));\r\n      } else {\r\n        timings.push(createTiming(\"8:00 AM - 10:00 AM\", \"Morning commute window with captive audience\"));\r\n        timings.push(createTiming(\"5:00 PM - 7:30 PM\", \"Evening rush hour with maximum visibility\"));\r\n        timings.push(createTiming(\"11:30 AM - 1:30 PM\", \"Lunch break window for working professionals\"));\r\n      }\r\n    }\r\n    \r\n    return timings;\r\n  };\r\n\r\n  const generateRealisticHeatmap = (industry, predictions) => {\r\n    const heatmap = [];\r\n    \r\n    // Generate heatmap based on the predictions and industry\r\n    let morningPercentage = 65;\r\n    let middayPercentage = 60;\r\n    let afternoonPercentage = 55;\r\n    let eveningPercentage = 75;\r\n    let nightPercentage = 65;\r\n    \r\n    // Adjust based on industry\r\n    if (industry && industry.toLowerCase().includes('food')) {\r\n      middayPercentage = 85; // Lunch rush\r\n      eveningPercentage = 90; // Dinner time\r\n      morningPercentage = 40; // Low traffic early morning\r\n    } else if (industry && industry.toLowerCase().includes('retail')) {\r\n      afternoonPercentage = 70; // Shopping in afternoon\r\n      eveningPercentage = 85; // Evening shopping\r\n      nightPercentage = 50; // Lower at night\r\n    }\r\n    \r\n    // Add random variation for realism\r\n    const variation = () => Math.floor(Math.random() * 10) - 5; // -5 to +5\r\n    \r\n    heatmap.push(createHeatmapEntry(\"Morning (8-11 AM)\", morningPercentage + variation()));\r\n    heatmap.push(createHeatmapEntry(\"Midday (11 AM-2 PM)\", middayPercentage + variation()));\r\n    heatmap.push(createHeatmapEntry(\"Afternoon (2-5 PM)\", afternoonPercentage + variation()));\r\n    heatmap.push(createHeatmapEntry(\"Evening (5-8 PM)\", eveningPercentage + variation()));\r\n    heatmap.push(createHeatmapEntry(\"Night (8-11 PM)\", nightPercentage + variation()));\r\n    \r\n    return heatmap;\r\n  };\r\n\r\n  const generateRealisticRoutes = (userData, predictions) => {\r\n    // Generate locations based on the predictions\r\n    const locations = generateRealisticLocations(userData.location, predictions);\r\n    const result = {};\r\n    \r\n    // Days 1-3 route\r\n    const days13 = [];\r\n    days13.push(createRouteStep(\"8:30 AM\", `Start at ${locations[0]?.name || \"Main Area\"}`));\r\n    days13.push(createRouteStep(\"10:00 AM\", `Move to ${locations[1]?.name || \"Shopping District\"}`));\r\n    days13.push(createRouteStep(\"12:30 PM\", \"Lunch break / High visibility positioning\"));\r\n    days13.push(createRouteStep(\"2:00 PM\", `Continue to ${locations[2]?.name || \"Business District\"}`));\r\n    days13.push(createRouteStep(\"4:30 PM\", `End at ${locations[3]?.name || \"Commercial Hub\"}`));\r\n    result.days13 = days13;\r\n    \r\n    // Days 4-5 route\r\n    const days45 = [];\r\n    days45.push(createRouteStep(\"11:00 AM\", `Start at ${locations[2]?.name || \"Business District\"}`));\r\n    days45.push(createRouteStep(\"1:30 PM\", `Move to ${locations[0]?.name || \"Main Area\"}`));\r\n    days45.push(createRouteStep(\"3:00 PM\", `Continue to ${locations[1]?.name || \"Shopping District\"}`));\r\n    days45.push(createRouteStep(\"5:30 PM\", `Evening positioning at ${locations[3]?.name || \"Commercial Hub\"}`));\r\n    result.days45 = days45;\r\n    \r\n    // Days 6-7 route (weekend focus)\r\n    const days67 = [];\r\n    days67.push(createRouteStep(\"10:00 AM\", `Start at ${locations[1]?.name || \"Shopping District\"} (weekend crowd)`));\r\n    days67.push(createRouteStep(\"12:30 PM\", `Move to ${locations[0]?.name || \"Main Area\"} (lunch crowd)`));\r\n    days67.push(createRouteStep(\"3:00 PM\", `Afternoon positioning at ${locations[3]?.name || \"Commercial Hub\"}`));\r\n    days67.push(createRouteStep(\"6:00 PM\", `Evening prime time at ${locations[2]?.name || \"Business District\"}`));\r\n    result.days67 = days67;\r\n    \r\n    return result;\r\n  };\r\n\r\n  const generateRealisticRoutePlanText = (userData, predictions) => {\r\n    const locations = generateRealisticLocations(userData.location, predictions);\r\n    const businessName = userData.businessName || \"Your Business\";\r\n    const industry = userData.industry || \"General\";\r\n    const budget = userData.budget || 25000;\r\n    const targetAudience = userData.targetAudience || \"General audience\";\r\n    const location = userData.location || \"Your City\";\r\n    \r\n    // Estimate impressions based on predictions\r\n    const dailyImpressions = predictions.impressionsPerDay || Math.floor(Math.random() * 3000 + 5000);\r\n    const totalImpressions = predictions.totalImpressions || (dailyImpressions * 7);\r\n    \r\n    // Create a convincing AI-generated plan text\r\n    return `# Mobile Billboard Campaign Plan for ${businessName}\r\n\r\n## Campaign Details\r\n- **Business:** ${businessName}\r\n- **Industry:** ${mapIndustryToBusinessType(industry)}\r\n- **Location:** ${location}\r\n- **Target Audience:** ${targetAudience}\r\n- **Budget:** â‚¹${budget}\r\n- **Expected Reach:** ${totalImpressions.toLocaleString()} impressions over 7 days\r\n\r\n## Optimal Locations & Reasoning\r\nBased on AI analysis of traffic patterns, demographic data, and historical campaign performance, we recommend focusing on these high-value areas:\r\n\r\n1. **${locations[0]?.name || \"Main Commercial District\"}**\r\n   - High foot traffic with ${Math.floor(Math.random() * 40 + 60)}% match to target demographic\r\n   - Peak visibility during morning and evening hours\r\n   - Estimated daily impressions: ${Math.floor(dailyImpressions * 0.3).toLocaleString()}\r\n\r\n2. **${locations[1]?.name || \"Shopping Hub\"}**\r\n   - Prime shopping area with excellent brand exposure\r\n   - ${Math.floor(Math.random() * 20 + 70)}% of visitors match your target audience profile\r\n   - Ideal for weekends and late afternoons\r\n\r\n3. **${locations[2]?.name || \"Business Center\"}**\r\n   - Professional concentration aligns with campaign objectives\r\n   - High-value impressions with decision-makers\r\n   - Optimal during lunch hours and early evenings\r\n\r\n4. **${locations[3]?.name || \"High-Traffic Area\"}**\r\n   - Massive visibility opportunity with diverse audience\r\n   - Strategic positioning during rush hours can maximize impact\r\n   - Excellent for general brand awareness\r\n\r\n## Strategic Timing Recommendations\r\nOur AI model has identified these optimal time windows for maximum impact:\r\n\r\n- **Morning Window (8:30 AM - 10:30 AM)**\r\n  - Capture commuter traffic on weekdays\r\n  - Estimated attention rate: ${Math.floor(Math.random() * 10 + 75)}%\r\n\r\n- **Lunch Peak (12:00 PM - 2:00 PM)**\r\n  - Target professionals during break times\r\n  - High dwell time increases message retention\r\n\r\n- **Evening Prime Time (5:00 PM - 8:00 PM)**\r\n  - Maximum visibility during rush hour\r\n  - ${Math.floor(Math.random() * 15 + 80)}% attention rate with relaxed evening crowds\r\n\r\n## 7-Day Route Plan Optimization\r\n\r\n### Days 1-3: Coverage Focus\r\n- Morning: ${locations[0]?.name || \"Main Commercial District\"}\r\n- Midday: ${locations[1]?.name || \"Shopping Hub\"}\r\n- Afternoon: ${locations[2]?.name || \"Business Center\"}\r\n- Expected daily impressions: ${Math.floor(dailyImpressions * 1.1).toLocaleString()}\r\n\r\n### Days 4-5: Engagement Focus\r\n- Start at ${locations[2]?.name || \"Business Center\"} during peak business hours\r\n- Transition to ${locations[0]?.name || \"Main Commercial District\"} for lunch crowd\r\n- End at ${locations[1]?.name || \"Shopping Hub\"} for evening shoppers\r\n- Expected conversion rate increase: ${Math.floor(Math.random() * 10 + 15)}%\r\n\r\n### Days 6-7: Weekend Strategy\r\n- Focus on ${locations[1]?.name || \"Shopping Hub\"} and ${locations[3]?.name || \"High-Traffic Area\"}\r\n- Extended hours during peak weekend activity\r\n- Special positioning during entertainment hours\r\n- Weekend amplification factor: ${(Math.random() * 0.6 + 1.2).toFixed(1)}x\r\n\r\n## ROI Projection\r\n- Estimated impressions: ${totalImpressions.toLocaleString()}\r\n- Engagement rate: ${(Math.random() * 2 + 3).toFixed(1)}%\r\n- Estimated conversions: ${Math.floor(totalImpressions * (Math.random() * 0.03 + 0.02))}\r\n- Projected ROI: ${Math.floor(Math.random() * 100 + 150)}%\r\n\r\n## Special Considerations\r\n- Weather contingency plan included for all routes\r\n- Special event adjustments programmed for local happenings\r\n- Traffic pattern variations accounted for in all timing recommendations\r\n- Competitor campaign insights integrated into positioning strategy\r\n\r\n*This AI-optimized plan is based on comprehensive analysis of location data, traffic patterns, and industry-specific insights to maximize your campaign's impact.*`;\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"flex justify-center items-center h-screen\">Loading campaign data...</div>\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500 p-4\">Error loading campaign data: {error.message}</div>\r\n  }\r\n\r\n  if (!campaignData) {\r\n    return <div>No campaign data available.</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto py-10 px-4 max-w-7xl\">\r\n      <h1 className=\"text-4xl font-bold mb-2\">Billboard Campaign Results</h1>\r\n      <p className=\"text-xl text-muted-foreground mb-8\">\r\n        Optimized mobile billboard campaign for {campaignData.businessName}\r\n      </p>\r\n\r\n      {/* Campaign Overview Card */}\r\n      <Card className=\"mb-8\">\r\n        <div className=\"bg-primary/5 border-b p-6\">\r\n          <h2 className=\"text-xl font-semibold flex items-center gap-2\">\r\n            <Target className=\"h-5 w-5\" />\r\n            Campaign Overview\r\n          </h2>\r\n          <p className=\"text-sm text-muted-foreground\">Key details about your mobile billboard campaign</p>\r\n        </div>\r\n        <div className=\"p-6\">\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"text-sm font-medium text-muted-foreground\">Business</div>\r\n              <div className=\"text-lg font-semibold\">{campaignData.businessName}</div>\r\n              <div className=\"text-sm\">{campaignData.businessType}</div>\r\n            </div>\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"text-sm font-medium text-muted-foreground\">Target Audience</div>\r\n              <div className=\"text-lg font-semibold\">{campaignData.targetAudience}</div>\r\n              <div className=\"text-sm\">{campaignData.campaignType}</div>\r\n            </div>\r\n            <div className=\"flex flex-col gap-2\">\r\n              <div className=\"text-sm font-medium text-muted-foreground\">Campaign Details</div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <MapPin className=\"h-4 w-4 text-muted-foreground\" />\r\n                <span>{campaignData.location}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Calendar className=\"h-4 w-4 text-muted-foreground\" />\r\n                <span>{campaignData.duration}</span>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\r\n                <span>â‚¹{campaignData.budget}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Main Content Tabs */}\r\n      <Tabs defaultValue=\"locations\" className=\"w-full\">\r\n        <div className=\"grid grid-cols-3 mb-8\">\r\n          <button\r\n            className=\"py-2 px-4 text-center hover:bg-gray-100 border-b-2 border-primary\"\r\n            onClick={() => document.getElementById(\"locations\").scrollIntoView({ behavior: \"smooth\" })}\r\n          >\r\n            <MapPin className=\"h-4 w-4 mr-2 inline\" />\r\n            Best Locations\r\n          </button>\r\n          <button\r\n            className=\"py-2 px-4 text-center hover:bg-gray-100\"\r\n            onClick={() => document.getElementById(\"timing\").scrollIntoView({ behavior: \"smooth\" })}\r\n          >\r\n            <Clock className=\"h-4 w-4 mr-2 inline\" />\r\n            Optimal Timing\r\n          </button>\r\n          <button\r\n            className=\"py-2 px-4 text-center hover:bg-gray-100\"\r\n            onClick={() => document.getElementById(\"route\").scrollIntoView({ behavior: \"smooth\" })}\r\n          >\r\n            <RouteIcon className=\"h-4 w-4 mr-2 inline\" />\r\n            Route Plan\r\n          </button>\r\n        </div>\r\n\r\n        {/* Locations Section */}\r\n        <div id=\"locations\" className=\"space-y-6 mb-12\">\r\n          <Card>\r\n            <div className=\"p-6 border-b\">\r\n              <h2 className=\"text-xl font-semibold\">Recommended Locations in {campaignData.location}</h2>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                High-traffic areas where your target audience ({campaignData.targetAudience}) is most likely to be\r\n                present\r\n              </p>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-6\">\r\n                  {campaignData.locations.map((location, index) => (\r\n                    <div key={index} className=\"flex gap-4\">\r\n                      <div className=\"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\">\r\n                        <MapPin className=\"h-5 w-5 text-primary\" />\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-semibold\">{location.name}</h3>\r\n                        <p className=\"text-sm text-muted-foreground\">{location.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <CampaignMap locations={campaignData.locations} />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Timing Section */}\r\n        <div id=\"timing\" className=\"space-y-6 mb-12\">\r\n          <Card>\r\n            <div className=\"p-6 border-b\">\r\n              <h2 className=\"text-xl font-semibold\">Optimal Timing for Maximum Visibility</h2>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Strategic time slots to reach your target audience throughout the day\r\n              </p>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-6\">\r\n                  {campaignData.timings.map((timing, index) => (\r\n                    <div key={index} className=\"flex gap-4\">\r\n                      <div className=\"flex h-10 w-10 shrink-0 items-center justify-center rounded-full bg-primary/10\">\r\n                        <Clock className=\"h-5 w-5 text-primary\" />\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-semibold\">{timing.time}</h3>\r\n                        <p className=\"text-sm text-muted-foreground\">{timing.description}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"rounded-lg overflow-hidden border bg-card text-card-foreground shadow\">\r\n                  <div className=\"p-6\">\r\n                    <h3 className=\"font-semibold mb-4\">Daily Visibility Heatmap</h3>\r\n                    <div className=\"space-y-4\">\r\n                      {campaignData.visibilityHeatmap.map((item, index) => (\r\n                        <div key={index} className=\"space-y-2\">\r\n                          <div className=\"flex justify-between items-center\">\r\n                            <span className=\"text-sm font-medium\">{item.time}</span>\r\n                            <span className=\"text-sm text-muted-foreground\">{item.visibility}% Visibility</span>\r\n                          </div>\r\n                          <div className=\"h-2 w-full bg-secondary rounded-full overflow-hidden\">\r\n                            <div className=\"h-full bg-primary rounded-full\" style={{ width: `${item.visibility}%` }} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Route Plan Section */}\r\n        <div id=\"route\" className=\"space-y-6\">\r\n          <Card>\r\n            <div className=\"p-6 border-b\">\r\n              <h2 className=\"text-xl font-semibold\">7-Day Route Plan</h2>\r\n              <p className=\"text-sm text-muted-foreground\">\r\n                Optimized route to maximize visibility while staying within budget\r\n              </p>\r\n            </div>\r\n            <div className=\"p-6\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div className=\"space-y-6\">\r\n                  <div>\r\n                    <h3 className=\"font-semibold mb-3\">Days 1-3: Morning to Midday Focus</h3>\r\n                    <RouteTimeline routes={campaignData.routePlanDays13} />\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold mb-3\">Days 4-5: Midday to Evening Focus</h3>\r\n                    <RouteTimeline routes={campaignData.routePlanDays45} />\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"font-semibold mb-3\">Days 6-7: Evening to Late Night Focus</h3>\r\n                    <RouteTimeline routes={campaignData.routePlanDays67} />\r\n                  </div>\r\n                </div>\r\n                <BudgetBreakdown budget={campaignData.budget} />\r\n              </div>\r\n            </div>\r\n          </Card>\r\n        </div>\r\n      </Tabs>\r\n\r\n      {/* AI Prediction Section */}\r\n      {campaignData.aiPredictions && (\r\n        <AiPredictionSection predictions={campaignData.aiPredictions} />\r\n      )}\r\n\r\n      {/* Debug Panel to inspect the API response */}\r\n      <DebugPanel data={campaignData} />\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}